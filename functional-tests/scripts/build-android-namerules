#!/bin/bash -e
#
# Copyright (C) 2016-2018 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

USAGE=$(cat <<EOF
$0 [options]
    --publish    Build and publish Gluecodium locally and use it for code generation
    --debug      Build with debug symbols
    --help       Print this message
EOF
)


SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
. "${SCRIPT_DIR}/inc.functions"

CMAKE_BUILD_TYPE=
while [[ $# -gt 0 ]]; do
    case "$1" in
        --publish)
            publish_local
            shift
            ;;
        --debug)
            CMAKE_BUILD_TYPE="-DCMAKE_BUILD_TYPE=RelWithDebInfo"
            shift
            ;;
        --help|*)
            echo "$USAGE"
            exit 0
            ;;
    esac
done

# Sanity checks
[ $ANDROID_HOME ] || die "ANDROID_HOME environment variable is mandatory"
[ $ANDROID_NDK_HOME ] || die "ANDROID_NDK_HOME environment variable is mandatory (NDK can be installed from within Android Studio"

# Constants
GLUECODIUM_VERSION="${GLUECODIUM_VERSION:-+}"
CMAKE_DEFAULT_PARAMETERS=$(cat <<EOF
-DANDROID_NATIVE_API_LEVEL=28 \
-DBUILD_SHARED_LIBS=ON \
-DCMAKE_SYSTEM_VERSION=21 \
-DCMAKE_VERBOSE_MAKEFILE=ON \
-G Ninja
EOF
)

# Use CMake binary shipped with NDK if available
if [ -d "$ANDROID_HOME/cmake" ]; then
    NDK_CMAKE_BINARY=$(find $ANDROID_HOME/cmake -perm -u+x -type f  -name cmake | head -n1)
fi
if [ -z "$NDK_CMAKE_BINARY" ]; then
    NDK_CMAKE_BINARY=cmake
fi

set -x
app_folder=${PWD}/namerules/android
lib_cmake_dir=${app_folder}/lib/build/cmake
app_libs_folder=${app_folder}/app/libs

# Assemble AAR archive (includes Gluecodium invocation)
pushd ${app_folder}
./gradlew :lib:assembleRelease
popd

# Compile host shared lib file with CMake directly
[ -d ${lib_cmake_dir} ] || mkdir -p ${lib_cmake_dir}
pushd ${lib_cmake_dir}

set -o pipefail
safe $NDK_CMAKE_BINARY \
    ${CMAKE_DEFAULT_PARAMETERS} \
    ${CMAKE_BUILD_TYPE} \
    -DGLUECODIUM_GENERATED_DIR=${app_folder}/lib/build/generated-src/gluecodium \
    ../.. | tee "cmake_output.log"

popd

safe $NDK_CMAKE_BINARY \
    --build ${lib_cmake_dir}

# Shuffle AAR and shared lib around
[ -d ${app_libs_folder} ] || mkdir -p ${app_libs_folder}
find ${lib_build_dir} \( -name \*.aar \) -exec cp \{\} ${app_libs_folder} \;
find ${lib_cmake_dir} \( -name \*.so -o -name \*.dylib \) -exec cp \{\} ${app_libs_folder} \;

# Build the app and run the tests
pushd ${app_folder}
./gradlew :app:test
popd
