/*
 * Copyright (C) 2016-2024 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

ext {
    ndkVersion = '24.0.8215888'
    compileSdkVersion = 31
    targetSdkVersion = 31
    minSdkVersion = 24
    cmakeVersion = '3.19.0+'

    buildRoot = "${rootProject.projectDir}/build-android"
    buildNativeRoot = "${buildRoot}/cpp"
    generatedDir = "${buildRoot}/generated"

    rootProject.buildDir = "${buildRoot}/gradle"

    isHostOnly = {
        return project.hasProperty('hostOnly')
    }

    useGluecodiumVersion = {
        if (project.hasProperty('gluecodiumVersion')) {
            return project.property('gluecodiumVersion').toString().trim()
        }
        return '+'
    }

    buildNativeHostDir = { projectName, variantName ->
        return "${buildNativeRoot}/${projectName}/cmake/${variantName}/host/"
    }
}

public class BuildCMakeNativeHost extends DefaultTask {
    @OutputDirectory
    File buildDir

    @InputDirectory
    File projectDir

    @Input
    List<String> cmakeParameters

    @Input
    String target

    @Input
    String buildType

    BuildCMakeNativeHost() {
        doFirst {
            project.mkdir buildDir
        }

        doLast {
            project.exec {
                List<String> cmakeCommandLine = ['cmake', projectDir.toString(), '-G', 'Ninja'] + cmakeParameters
                commandLine(*cmakeCommandLine)
                workingDir buildDir
            }

            project.exec {
                commandLine 'cmake',
                    '--build', buildDir.toString(),
                    '--target', target,
                    '--config', buildType
            }
        }
    }
}

ext.BuildCMakeNativeHost = BuildCMakeNativeHost

static def dependJavaTasksOnNativeBuild(tasks, isHostOnly) {
    tasks.configureEach { task ->
        ['Debug', 'Release'].each { buildType ->
            if (task.name == "javaPreCompile${buildType}" ||
                task.name == "javaPreCompile${buildType}UnitTest" ||
                task.name == "compile${buildType}UnitTestJavaWithJavac" ||
                task.name == "package${buildType}Resources" ||
                task.name == "generate${buildType}ResValues" ||
                task.name == "process${buildType}Manifest") {
                if (isHostOnly) {
                    task.dependsOn "build${buildType}NativeHost"
                } else {
                    task.dependsOn "externalNativeBuild${buildType}"
                }
            }
        }
    }
}

buildscript {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath libs.android.tools.build.gradle
        classpath libs.kotlin.gradle.plugin

        def gluecodiumVersion = project.hasProperty('gluecodiumVersion')
            ? project.property('gluecodiumVersion').toString().trim() : '+'

        classpath "com.here.gluecodium:gluecodium-gradle:${gluecodiumVersion}"
        classpath libs.spotless.plugin.gradle

        modules {
            module("org.jetbrains.trove4j:trove4j") {
                replacedBy("org.jetbrains.intellij.deps:trove4j")
            }
        }
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
