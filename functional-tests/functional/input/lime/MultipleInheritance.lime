
# Copyright (C) 2016-2021 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

interface RegularInterface {
    fun parentFunction()
    property parentProperty: String
}

open class OpenClass {
    fun parentFunction()
    property parentProperty: String
}

narrow interface NarrowInterface {
    fun parentFunctionLight(): String
    property parentPropertyLight: String
}

class MultiClass: OpenClass, NarrowInterface {
    fun childFunction()
    property childProperty: String
}

interface MultiInterface: RegularInterface, NarrowInterface {
    fun childFunction()
    property childProperty: String
}

class MultipleInheritanceFactory {
    static fun getMultiClass(): MultiClass
    static fun getMultiInterface(): MultiInterface
    static fun getMultiClassAsNarrow(): NarrowInterface
    static fun getMultiClassSingleton(): NarrowInterface
    static fun upcastMultiInterfaceToNarrow(instance: MultiInterface): NarrowInterface
}

class MultipleInheritanceChecker {
    static fun checkSingletonEquality(instance: NarrowInterface): Boolean
    static fun checkIsNarrow(instance: MultiInterface): Boolean
    static fun checkIsMultiInterface(instance: NarrowInterface): Boolean
    static fun checkNarrowEquality(instance1: NarrowInterface, instance2: NarrowInterface): Boolean
    static fun narrowRoundTrip(instance: NarrowInterface): NarrowInterface
}
