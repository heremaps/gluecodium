# Copyright (C) 2016-2024 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct StructWithSomeDefaults {
    intField: Int = 42
    stringField: String
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct StructWithAllDefaults {
    intField: Int = 42
    stringField: String = "\\Jonny \"Magic\" Smith\n"
}

@Java(PositionalDefaults)
@Swift(Skip) @Dart(Skip)
struct StructWithJavaPositionalDefaults {
    firstInitField: Int = 42
    firstFreeField: String
    secondInitField: Float = 7.2
    secondFreeField: Boolean
    thirdInitField: String = "\\Jonny \"Magic\" Smith\n"
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct StructWithCollectionDefaults {
    emptyListField: List<String> = []
    emptyMapField: Map<String, String> = []
    emptySetField: Set<String> = []
    listField: List<String> = ["foo", "bar"]
    mapField: Map<String, String> = ["foo": "bar"]
    setField: Set<String> = ["foo", "bar"]
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct StructWithNullableCollectionDefaults {
    nullableListField: List<String>? = null
    nullableMapField: Map<String, String>? = null
    nullableSetField: Set<String>? = null
}

@Immutable
@Java(Skip) @Swift(Skip)
struct AnotherImmutableStructWithDefaults {
    intField: Int = 42
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct PosDefaultStructWithFieldUsingImmutableStruct {
    someField1: AnotherImmutableStructWithDefaults = {}
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct SomeMutableCustomStructWithDefaults {
    intField: Int = 77
    stringField: String = "Some string"
    listField: List<Int> = [1, 2, 3]
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct PosDefaultStructWithCustomStructsFields {
    constCtorField0: AnotherImmutableStructWithDefaults = {}
    constCtorField1: AnotherImmutableStructWithDefaults? = {}
    constCtorField2: List<String> = ["abc", "def", "ghi"]
    constCtorField3: Map<String, String>? = null
    constCtorField4: Int = 77
    constCtorField5: Double = 77.77
    constCtorField6: AnotherImmutableStructWithDefaults? = {}
    constCtorField7: AnotherImmutableStructWithDefaults? = null

    nonConstCtorField0: StructWithAllDefaults = {}
    nonConstCtorField1: PosDefaultStructWithFieldUsingImmutableStruct = {}
    nonConstCtorField2: SomeMutableCustomStructWithDefaults = {}
    nonConstCtorField3: StructWithNullableCollectionDefaults = {}
    nonConstCtorField4: StructWithAllDefaults? = null
    nonConstCtorField5: Blob = []
    nonConstCtorField6: Blob = [222, 173, 190, 239]
    nonConstCtorField7: Blob? = null
}

@Dart(PositionalDefaults)
@Java(Skip) @Swift(Skip)
struct PosDefaultsWithDuration {
    durationField: Duration = 42s
    nanosField: Duration = 28567ns
}
