# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

types ComplexListenerTypes {
    struct Point3D {
        x: Double = 0.0
        y: Double = 0.0
        z: Double = 0.0
    }
    struct NamedPoint3D {
        name: String
        pt: Point3D
    }
    enum TrajectoryQuality {
        TRAJECTORY_POOR,
        TRAJECTORY_AVERAGE,
        TRAJECTORY_GOOD = 999
    }
    typealias Trajectory = List<NamedPoint3D>
}

class DistanceMetric {
    fun getLength(
        input: ComplexListenerTypes.Trajectory
    ): Double
}

interface ComplexListener {
    fun onTrajectoryCompleted(
        distanceMetric: DistanceMetric,
        trajectory: ComplexListenerTypes.Trajectory,
        quality: ComplexListenerTypes.TrajectoryQuality,
        image: Blob
    )
}

class ComplexNotifier {
    fun trajectoryCompleted(
        trajectory: ComplexListenerTypes.Trajectory,
        quality: ComplexListenerTypes.TrajectoryQuality,
        image: Blob,
        listener: ComplexListener
    )
}

class ComplexListenerFactory {
    static fun createComplexNotifier(): ComplexNotifier
    static fun createDistanceMetric(): DistanceMetric
}
