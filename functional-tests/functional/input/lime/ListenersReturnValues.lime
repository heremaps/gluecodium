# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

interface ListenerWithReturn {
    struct MessageStruct {
        message: String
    }
    enum MessageEnum {
        NO,
        YES
    }
    typealias MessageMap = Map<Byte, String>
    fun getMessage(): String
    fun getPackedMessage(): MessagePackage?
    fun getBoxedMessage(): MessageBox?
    fun getStructuredMessage(): MessageStruct
    fun getEnumeratedMessage(): MessageEnum
    fun getArrayedMessage(): List<String>
    fun getMappedMessage(): MessageMap
    fun getBufferedMessage(): Blob
}

interface MessagePackage {
    fun unpackMessage(): String
}

class MessageBox {
    fun unpackMessage(): String
    constructor create()
}

class MessageDelivery {
    fun getMessage(
        envelope: ListenerWithReturn
    ): String
    fun getPackedMessage(
        envelope: ListenerWithReturn
    ): String
    fun getBoxedMessage(
        envelope: ListenerWithReturn
    ): String
    fun getStructuredMessage(
        envelope: ListenerWithReturn
    ): String
    fun getEnumeratedMessage(
        envelope: ListenerWithReturn
    ): String
    fun getArrayedMessage(
        envelope: ListenerWithReturn
    ): String
    fun getMappedMessage(
        envelope: ListenerWithReturn
    ): String
    fun getBufferedMessage(
        envelope: ListenerWithReturn
    ): String
    constructor createMe()
}
