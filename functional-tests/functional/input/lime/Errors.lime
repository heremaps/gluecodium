# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

import another.TypeCollectionWithEnums.SomeEnum
import another.TypeCollectionWithEnums.YetAnother

@Equatable
struct Payload {
    errorCode: Int
    message: String
}

exception WithPayload(Payload)

class Errors {
    @Immutable
    struct NonDefaultConstructor {
        id: Long
    }
    enum InternalErrorCode {
        NONE,
        CRASHED
    }
    @Cpp(
        ExternalType = "include/ExternalTypes.h",
        ExternalName = "::external::even_more_external::AlienErrorCode"
    )
    enum ExternalErrorCode {
        NONE,
        BOOM
    }

    // Example static method with an error enum that raises "CRASHED" error if errorFlag is true
    static fun methodWithError(
        errorFlag: Boolean
    ) throws Internal
    // Example static method with an error enum which returns a String "SUCCEEDED" or raises "FAILED" error if
    // errorFlag is true
    static fun methodWithErrorAndString(
        errorFlag: Boolean
    ): /* Output string */ String throws another.AdditionalErrors.External
    // Example static method with an error enum which returns enum ANOTHER_RESULT
    // or raises "BAD" error if errorFlag is true
    static fun methodWithGoodAndBad(
        errorFlag: Boolean
    ): SomeEnum throws YetAnother
    // Example static method with an external error enum that raises "BOOM" error if errorFlag is true
    static fun methodWithExternalError(
        errorFlag: Boolean
    ) throws External
    static fun getErrorCategoryMessage(
        value: InternalErrorCode
    ): String
    // Check whether Return works with structs without default constructor
    static fun methodWithErrorAndNonDefaultStruct(
        errorFlag: Boolean
    ): NonDefaultConstructor throws Internal

    static fun methodWithPayloadError(errorFlag: Boolean) throws WithPayload
    static fun methodWithPayloadErrorAndReturnValue(errorFlag: Boolean): String throws WithPayload

    exception Internal(InternalErrorCode)
    exception External(ExternalErrorCode)
}

class OtherErrors {
    enum InternalErrorCode {
        NONE,
        CRASHED
    }
    // Example static method with an error enum that raises "CRASHED" error if errorFlag is true
    static fun methodWithError(
        errorFlag: Boolean
    ) throws Internal
    exception Internal(InternalErrorCode)
}

class ThrowingConstructor {
    enum ErrorEnum {
        NONE,
        CRASHED
    }
    constructor create(
        input: Double
    ) throws Some
    exception Some(ErrorEnum)
}
