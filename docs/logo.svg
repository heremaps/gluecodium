<svg xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:osb="http://www.openswatchbook.org/uri/2009/osb" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink" width="120" height="120" viewBox="0 0 366.50582 366.50594" version="1.1" id="svg8">
  <svg id="background" viewBox="0 0 1500 1500" mask="url(#circleMask)" version="1.1">
    <mask id="circleMask">
      <circle cx="750" cy="750" r="750" fill="white" id="circle17" />
    </mask>
  <svg version="1.2" baseProfile="full" xml:space="preserve" x="-100" y="400">
<desc>./code/cpp/include/hello/HelloWorld.h</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="slc">//&#160;-------------------------------------------------------------------------------------------------</tspan></text>
<text x="10" y="40"><tspan class="slc">//</tspan></text>
<text x="10" y="60" />
<text x="10" y="80"><tspan class="slc">//</tspan></text>
<text x="10" y="100"><tspan class="slc">//&#160;-------------------------------------------------------------------------------------------------</tspan></text>
<text x="10" y="120" />
<text x="10" y="140"><tspan class="ppc">#pragma&#160;once</tspan></text>
<text x="10" y="160" />
<text x="10" y="180"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"Export.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="200"><tspan class="ppc">#include&#160;&lt;string&gt;</tspan></text>
<text x="10" y="220" />
<text x="10" y="240"><tspan class="kwa">namespace&#160;</tspan>hello&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="260" />
<text x="10" y="280"><tspan class="kwc">class&#160;</tspan>_GLUECODIUM_CPP_EXPORT&#160;HelloWorld&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="300"><tspan class="kwc">public</tspan><tspan class="opt">:</tspan></text>
<text x="10" y="320">&#160;&#160;&#160;&#160;<tspan class="kwd">HelloWorld</tspan><tspan class="opt">();</tspan></text>
<text x="10" y="340">&#160;&#160;&#160;&#160;<tspan class="kwc">virtual&#160;</tspan><tspan class="opt">~</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">()&#160;=&#160;</tspan><tspan class="num">0</tspan><tspan class="opt">;</tspan></text>
<text x="10" y="360" />
<text x="10" y="380"><tspan class="kwc">public</tspan><tspan class="opt">:</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;<tspan class="com">/**</tspan></text>
<text x="10" y="420"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;Example&#160;static&#160;method&#160;for&#160;HelloWorld&#160;0.1&#160;which&#160;takes&#160;a&#160;String&#160;and&#160;returns&#160;a&#160;String</tspan></text>
<text x="10" y="440"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;\param[in]&#160;input_string&#160;Input&#160;string</tspan></text>
<text x="10" y="460"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;\return&#160;Output&#160;string</tspan></text>
<text x="10" y="480"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*/</tspan></text>
<text x="10" y="500">&#160;&#160;&#160;&#160;<tspan class="kwb">static&#160;</tspan><tspan class="opt">::</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string&#160;<tspan class="kwd">hello_world_method</tspan><tspan class="opt">(&#160;</tspan><tspan class="kwb">const&#160;</tspan><tspan class="opt">::</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string<tspan class="opt">&amp;&#160;</tspan>input_string&#160;<tspan class="opt">);</tspan></text>
<text x="10" y="520" />
<text x="10" y="540"><tspan class="opt">};</tspan></text>
<text x="10" y="560" />
<text x="10" y="580" />
<text x="10" y="600"><tspan class="opt">}</tspan></text>
<text x="10" y="620" />
<text x="10" y="640" />
<text x="10" y="660" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="-50" y="0">
<desc>./code/cbridge/src/hello/cbridge_HelloWorld.cpp</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="slc">//</tspan></text>
<text x="10" y="40" />
<text x="10" y="60"><tspan class="slc">//</tspan></text>
<text x="10" y="80" />
<text x="10" y="100"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"Optional.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="120"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"TypeRepository.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="140"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge/include/hello/cbridge_HelloWorld.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="160"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge_internal/include/BaseHandleImpl.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="180"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge_internal/include/TypeInitRepository.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="200"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"hello/HelloWorld.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="220"><tspan class="ppc">#include&#160;&lt;memory&gt;</tspan></text>
<text x="10" y="240"><tspan class="ppc">#include&#160;&lt;new&gt;</tspan></text>
<text x="10" y="260"><tspan class="ppc">#include&#160;&lt;string&gt;</tspan></text>
<text x="10" y="280" />
<text x="10" y="300"><tspan class="kwb">void&#160;</tspan><tspan class="kwd">hello_HelloWorld_release_handle</tspan><tspan class="opt">(</tspan>_baseRef&#160;handle<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="320">&#160;&#160;&#160;&#160;<tspan class="kwa">delete&#160;</tspan>get_pointer<tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&gt;(</tspan>handle<tspan class="opt">);</tspan></text>
<text x="10" y="340"><tspan class="opt">}</tspan></text>
<text x="10" y="360" />
<text x="10" y="380">_baseRef&#160;<tspan class="kwd">hello_HelloWorld_copy_handle</tspan><tspan class="opt">(</tspan>_baseRef&#160;handle<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>handle</text>
<text x="10" y="420">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">?&#160;</tspan><tspan class="kwa">reinterpret_cast</tspan><tspan class="opt">&lt;</tspan>_baseRef<tspan class="opt">&gt;(</tspan><tspan class="kwd">checked_pointer_copy</tspan><tspan class="opt">(*</tspan>get_pointer<tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&gt;(</tspan>handle<tspan class="opt">)))</tspan></text>
<text x="10" y="440">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">:&#160;</tspan><tspan class="num">0</tspan><tspan class="opt">;</tspan></text>
<text x="10" y="460"><tspan class="opt">}</tspan></text>
<text x="10" y="480" />
<text x="10" y="500" />
<text x="10" y="520" />
<text x="10" y="540" />
<text x="10" y="560">_baseRef&#160;<tspan class="kwd">hello_HelloWorld_helloWorldMethod</tspan><tspan class="opt">(</tspan>_baseRef&#160;inputString<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="580">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>Conversion<tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string<tspan class="opt">&gt;::</tspan><tspan class="kwd">toBaseRef</tspan><tspan class="opt">(::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan><tspan class="kwc">HelloWorld</tspan><tspan class="opt">::</tspan><tspan class="kwd">hello_world_method</tspan><tspan class="opt">(</tspan>Conversion<tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string<tspan class="opt">&gt;::</tspan><tspan class="kwd">toCpp</tspan><tspan class="opt">(</tspan>inputString<tspan class="opt">)));</tspan></text>
<text x="10" y="600"><tspan class="opt">}</tspan></text>
<text x="10" y="620" />
<text x="10" y="640" />
<text x="10" y="660" />
<text x="10" y="680" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="0" y="400">
<desc>./code/android/jni/com_example_hello_HelloWorld.h</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="com">/*</tspan></text>
<text x="10" y="40"><tspan class="com" /></text>
<text x="10" y="60"><tspan class="com">&#160;*</tspan></text>
<text x="10" y="80"><tspan class="com">&#160;*/</tspan></text>
<text x="10" y="100" />
<text x="10" y="120"><tspan class="ppc">#pragma&#160;once</tspan></text>
<text x="10" y="140" />
<text x="10" y="160"><tspan class="ppc">#include&#160;&lt;jni.h&gt;</tspan></text>
<text x="10" y="180" />
<text x="10" y="200"><tspan class="ppc">#ifdef&#160;__cplusplus</tspan></text>
<text x="10" y="220"><tspan class="kwc">extern&#160;</tspan><tspan class="str">"C"</tspan>&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="240"><tspan class="ppc">#endif</tspan></text>
<text x="10" y="260" />
<text x="10" y="280">JNIEXPORT&#160;jstring&#160;JNICALL</text>
<text x="10" y="300"><tspan class="kwd">Java_com_example_hello_HelloWorld_helloWorldMethod</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_jenv<tspan class="opt">,&#160;</tspan>jobject&#160;_jinstance<tspan class="opt">,&#160;</tspan>jstring&#160;jinputString<tspan class="opt">);</tspan></text>
<text x="10" y="320" />
<text x="10" y="340" />
<text x="10" y="360"><tspan class="ppc">#ifdef&#160;__cplusplus</tspan></text>
<text x="10" y="380"><tspan class="opt">}</tspan></text>
<text x="10" y="400"><tspan class="ppc">#endif</tspan></text>
<text x="10" y="420" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="0" y="600">
<desc>./code/android/com/example/hello/HelloWorld.java</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="com">/*</tspan></text>
<text x="10" y="40"><tspan class="com" /></text>
<text x="10" y="60"><tspan class="com">&#160;*</tspan></text>
<text x="10" y="80"><tspan class="com">&#160;*/</tspan></text>
<text x="10" y="100" />
<text x="10" y="120"><tspan class="kwa">package&#160;</tspan>com<tspan class="opt">.</tspan>example<tspan class="opt">.</tspan>hello<tspan class="opt">;</tspan></text>
<text x="10" y="140" />
<text x="10" y="160"><tspan class="kwa">import&#160;</tspan>com<tspan class="opt">.</tspan>example<tspan class="opt">.</tspan>NativeBase<tspan class="opt">;</tspan></text>
<text x="10" y="180" />
<text x="10" y="200"><tspan class="kwa">public&#160;final&#160;class&#160;</tspan>HelloWorld&#160;<tspan class="kwa">extends&#160;</tspan>NativeBase&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="220">&#160;&#160;&#160;&#160;<tspan class="com">/**</tspan></text>
<text x="10" y="240"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;For&#160;internal&#160;use&#160;only.</tspan></text>
<text x="10" y="260"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;@exclude</tspan></text>
<text x="10" y="280"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*/</tspan></text>
<text x="10" y="300">&#160;&#160;&#160;&#160;<tspan class="kwa">protected&#160;</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">(</tspan><tspan class="kwa">final&#160;long&#160;</tspan>nativeHandle<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="320">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">super</tspan><tspan class="opt">(</tspan>nativeHandle<tspan class="opt">,&#160;</tspan><tspan class="kwa">new&#160;</tspan><tspan class="kwd">Disposer</tspan><tspan class="opt">()&#160;{</tspan></text>
<text x="10" y="340">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwc">@Override</tspan></text>
<text x="10" y="360">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">public&#160;void&#160;</tspan><tspan class="kwd">disposeNative</tspan><tspan class="opt">(</tspan><tspan class="kwa">long&#160;</tspan>handle<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="380">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwd">disposeNativeHandle</tspan><tspan class="opt">(</tspan>handle<tspan class="opt">);</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="420">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">});</tspan></text>
<text x="10" y="440">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="460" />
<text x="10" y="480">&#160;&#160;&#160;&#160;<tspan class="kwa">private&#160;static&#160;native&#160;void&#160;</tspan><tspan class="kwd">disposeNativeHandle</tspan><tspan class="opt">(</tspan><tspan class="kwa">long&#160;</tspan>nativeHandle<tspan class="opt">);</tspan></text>
<text x="10" y="500">&#160;&#160;&#160;&#160;<tspan class="com">/**</tspan></text>
<text x="10" y="520"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;&lt;p&gt;Example&#160;static&#160;method&#160;for&#160;HelloWorld&#160;0.1&#160;which&#160;takes&#160;a&#160;String&#160;and&#160;returns&#160;a&#160;String&lt;/p&gt;</tspan></text>
<text x="10" y="540"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;@param&#160;inputString&#160;&lt;p&gt;Input&#160;string&lt;/p&gt;</tspan></text>
<text x="10" y="560"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*&#160;@return&#160;&lt;p&gt;Output&#160;string&lt;/p&gt;</tspan></text>
<text x="10" y="580"><tspan class="com">&#160;&#160;&#160;&#160;&#160;*/</tspan></text>
<text x="10" y="600">&#160;&#160;&#160;&#160;<tspan class="kwa">public&#160;static&#160;native&#160;</tspan>String&#160;<tspan class="kwd">helloWorldMethod</tspan><tspan class="opt">(</tspan><tspan class="kwa">final&#160;</tspan>String&#160;inputString<tspan class="opt">);</tspan></text>
<text x="10" y="620"><tspan class="opt">}</tspan></text>
<text x="10" y="640" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="600" y="-100">
<desc>./code/android/jni/com_example_hello_HelloWorld.cpp</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="com">/*</tspan></text>
<text x="10" y="40"><tspan class="com" /></text>
<text x="10" y="60"><tspan class="com">&#160;*</tspan></text>
<text x="10" y="80"><tspan class="com">&#160;*/</tspan></text>
<text x="10" y="100" />
<text x="10" y="120"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"com_example_hello_HelloWorld.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="140"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"com_example_hello_HelloWorld__Conversion.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="160"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"ArrayConversionUtils.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="180"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"JniClassCache.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="200"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"JniReference.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="220" />
<text x="10" y="240"><tspan class="kwc">extern&#160;</tspan><tspan class="str">"C"</tspan>&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="260" />
<text x="10" y="280">jstring</text>
<text x="10" y="300"><tspan class="kwd">Java_com_example_hello_HelloWorld_helloWorldMethod</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_jenv<tspan class="opt">,&#160;</tspan>jobject&#160;_jinstance<tspan class="opt">,&#160;</tspan>jstring&#160;jinputString<tspan class="opt">)</tspan></text>
<text x="10" y="320"><tspan class="opt">{</tspan></text>
<text x="10" y="340">&#160;&#160;&#160;&#160;<tspan class="opt">::</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string&#160;inputString&#160;<tspan class="opt">=&#160;::</tspan><tspan class="kwc">jni</tspan><tspan class="opt">::</tspan><tspan class="kwd">convert_from_jni</tspan><tspan class="opt">(</tspan>_jenv<tspan class="opt">,</tspan></text>
<text x="10" y="360">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">::</tspan><tspan class="kwc">jni</tspan><tspan class="opt">::</tspan><tspan class="kwd">make_non_releasing_ref</tspan><tspan class="opt">(</tspan>jinputString<tspan class="opt">),</tspan></text>
<text x="10" y="380">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">(::</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>string<tspan class="opt">*)</tspan><tspan class="kwc">nullptr</tspan><tspan class="opt">);</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan>result&#160;<tspan class="opt">=&#160;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan><tspan class="kwc">HelloWorld</tspan><tspan class="opt">::</tspan><tspan class="kwd">hello_world_method</tspan><tspan class="opt">(</tspan>inputString<tspan class="opt">);</tspan></text>
<text x="10" y="420" />
<text x="10" y="440">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="opt">::</tspan><tspan class="kwc">jni</tspan><tspan class="opt">::</tspan><tspan class="kwd">convert_to_jni</tspan><tspan class="opt">(</tspan>_jenv<tspan class="opt">,&#160;</tspan>result<tspan class="opt">).</tspan><tspan class="kwd">release</tspan><tspan class="opt">();</tspan></text>
<text x="10" y="460"><tspan class="opt">}</tspan></text>
<text x="10" y="480" />
<text x="10" y="500">JNIEXPORT&#160;<tspan class="kwb">void&#160;</tspan>JNICALL</text>
<text x="10" y="520"><tspan class="kwd">Java_com_example_hello_HelloWorld_disposeNativeHandle</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_jenv<tspan class="opt">,&#160;</tspan>jobject&#160;_jinstance<tspan class="opt">,&#160;</tspan>jlong&#160;_jpointerRef<tspan class="opt">)</tspan></text>
<text x="10" y="540"><tspan class="opt">{</tspan></text>
<text x="10" y="560">&#160;&#160;&#160;&#160;<tspan class="kwa">delete&#160;reinterpret_cast</tspan><tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;*&gt;&#160;(</tspan>_jpointerRef<tspan class="opt">);</tspan></text>
<text x="10" y="580" />
<text x="10" y="600"><tspan class="opt">}</tspan></text>
<text x="10" y="620"><tspan class="opt">}</tspan></text>
<text x="10" y="640" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="200" y="500">
<desc>./code/cbridge/include/hello/cbridge_HelloWorld.h</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="slc">//</tspan></text>
<text x="10" y="40" />
<text x="10" y="60"><tspan class="slc">//</tspan></text>
<text x="10" y="80" />
<text x="10" y="100"><tspan class="ppc">#pragma&#160;once</tspan></text>
<text x="10" y="120" />
<text x="10" y="140"><tspan class="ppc">#ifdef&#160;__cplusplus</tspan></text>
<text x="10" y="160"><tspan class="kwc">extern&#160;</tspan><tspan class="str">"C"</tspan>&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="180"><tspan class="ppc">#endif</tspan></text>
<text x="10" y="200" />
<text x="10" y="220"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge/include/BaseHandle.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="240"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge/include/Export.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="260"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"cbridge/include/StringHandle.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="280" />
<text x="10" y="300" />
<text x="10" y="320" />
<text x="10" y="340" />
<text x="10" y="360">_GLUECODIUM_C_EXPORT&#160;<tspan class="kwb">void&#160;</tspan><tspan class="kwd">hello_HelloWorld_release_handle</tspan><tspan class="opt">(</tspan>_baseRef&#160;handle<tspan class="opt">);</tspan></text>
<text x="10" y="380">_GLUECODIUM_C_EXPORT&#160;_baseRef&#160;<tspan class="kwd">hello_HelloWorld_copy_handle</tspan><tspan class="opt">(</tspan>_baseRef&#160;handle<tspan class="opt">);</tspan></text>
<text x="10" y="400" />
<text x="10" y="420" />
<text x="10" y="440">_GLUECODIUM_C_EXPORT&#160;_baseRef&#160;<tspan class="kwd">hello_HelloWorld_helloWorldMethod</tspan><tspan class="opt">(</tspan>_baseRef&#160;inputString<tspan class="opt">);</tspan></text>
<text x="10" y="460" />
<text x="10" y="480" />
<text x="10" y="500"><tspan class="ppc">#ifdef&#160;__cplusplus</tspan></text>
<text x="10" y="520"><tspan class="opt">}</tspan></text>
<text x="10" y="540"><tspan class="ppc">#endif</tspan></text>
<text x="10" y="560" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="400" y="300">
<desc>./code/android/jni/com_example_hello_HelloWorld__Conversion.cpp</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="com">/*</tspan></text>
<text x="10" y="40"><tspan class="com" /></text>
<text x="10" y="60"><tspan class="com">&#160;*</tspan></text>
<text x="10" y="80"><tspan class="com">&#160;*/</tspan></text>
<text x="10" y="100" />
<text x="10" y="120"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"com_example_hello_HelloWorld__Conversion.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="140"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"CppProxyBase.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="160"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"FieldAccessMethods.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="180"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"JniClassCache.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="200"><tspan class="ppc">#include&#160;&lt;new&gt;</tspan></text>
<text x="10" y="220" />
<text x="10" y="240"><tspan class="kwa">namespace&#160;</tspan>jni</text>
<text x="10" y="260"><tspan class="opt">{</tspan></text>
<text x="10" y="280" />
<text x="10" y="300"><tspan class="kwd">REGISTER_JNI_CLASS_CACHE</tspan><tspan class="opt">(</tspan><tspan class="str">"com/example/hello/HelloWorld"</tspan><tspan class="opt">,&#160;</tspan>com_example_hello_HelloWorld<tspan class="opt">,&#160;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">)</tspan></text>
<text x="10" y="320" />
<text x="10" y="340" />
<text x="10" y="360"><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&#160;</tspan><tspan class="kwd">convert_from_jni</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_env<tspan class="opt">,&#160;</tspan><tspan class="kwb">const&#160;</tspan>JniReference<tspan class="opt">&lt;</tspan>jobject<tspan class="opt">&gt;&amp;&#160;</tspan>_jobj<tspan class="opt">,&#160;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;*)</tspan></text>
<text x="10" y="380"><tspan class="opt">{</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;<tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&#160;</tspan>_nresult<tspan class="opt">{};</tspan></text>
<text x="10" y="420">&#160;&#160;&#160;&#160;<tspan class="kwc">auto</tspan><tspan class="opt">&amp;&#160;</tspan>nativeBaseClass&#160;<tspan class="opt">=&#160;</tspan><tspan class="kwd">get_cached_native_base_class</tspan><tspan class="opt">();</tspan></text>
<text x="10" y="440">&#160;&#160;&#160;&#160;<tspan class="kwa">if&#160;</tspan><tspan class="opt">(</tspan>_env<tspan class="opt">-&gt;</tspan><tspan class="kwd">IsInstanceOf</tspan><tspan class="opt">(</tspan>_jobj<tspan class="opt">.</tspan><tspan class="kwd">get</tspan><tspan class="opt">(),&#160;</tspan>nativeBaseClass<tspan class="opt">.</tspan><tspan class="kwd">get</tspan><tspan class="opt">()))</tspan></text>
<text x="10" y="460">&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="480">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">if&#160;</tspan><tspan class="opt">(</tspan>_jobj&#160;<tspan class="opt">!=&#160;</tspan><tspan class="kwc">nullptr</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="500">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="520">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan>long_ptr&#160;<tspan class="opt">=&#160;</tspan><tspan class="kwd">get_field_value</tspan><tspan class="opt">(</tspan></text>
<text x="10" y="540">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_env<tspan class="opt">,</tspan></text>
<text x="10" y="560">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_jobj<tspan class="opt">,</tspan></text>
<text x="10" y="580">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="str">"nativeHandle"</tspan><tspan class="opt">,</tspan></text>
<text x="10" y="600">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">(</tspan><tspan class="kwb">int64_t</tspan><tspan class="opt">*)</tspan><tspan class="kwc">nullptr</tspan><tspan class="opt">);</tspan></text>
<text x="10" y="620">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_nresult&#160;<tspan class="opt">=&#160;*</tspan><tspan class="kwa">reinterpret_cast</tspan><tspan class="opt">&lt;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;*&gt;(</tspan>long_ptr<tspan class="opt">);</tspan></text>
<text x="10" y="640">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="660">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="680">&#160;&#160;&#160;&#160;<tspan class="kwa">else</tspan></text>
<text x="10" y="700">&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="720">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwd">createCppProxy</tspan><tspan class="opt">(</tspan>_env<tspan class="opt">,&#160;</tspan>_jobj<tspan class="opt">,&#160;</tspan>_nresult<tspan class="opt">);</tspan></text>
<text x="10" y="740">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="760">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>_nresult<tspan class="opt">;</tspan></text>
<text x="10" y="780"><tspan class="opt">}</tspan></text>
<text x="10" y="800" />
<text x="10" y="820">JniReference<tspan class="opt">&lt;</tspan>jobject<tspan class="opt">&gt;</tspan></text>
<text x="10" y="840"><tspan class="kwd">convert_to_jni</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_jenv<tspan class="opt">,&#160;</tspan><tspan class="kwb">const&#160;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&amp;&#160;</tspan>_ninput<tspan class="opt">)</tspan></text>
<text x="10" y="860"><tspan class="opt">{</tspan></text>
<text x="10" y="880">&#160;&#160;&#160;&#160;<tspan class="kwa">if&#160;</tspan><tspan class="opt">(&#160;!</tspan>_ninput&#160;<tspan class="opt">)</tspan></text>
<text x="10" y="900">&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="920">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="opt">{};</tspan></text>
<text x="10" y="940">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="960" />
<text x="10" y="980">&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan>jResult&#160;<tspan class="opt">=&#160;::</tspan><tspan class="kwc">jni</tspan><tspan class="opt">::</tspan><tspan class="kwc">CppProxyBase</tspan><tspan class="opt">::</tspan><tspan class="kwd">getJavaObject</tspan><tspan class="opt">(&#160;</tspan>_ninput<tspan class="opt">.</tspan><tspan class="kwd">get</tspan><tspan class="opt">(&#160;)&#160;);</tspan></text>
<text x="10" y="1000">&#160;&#160;&#160;&#160;<tspan class="kwa">if&#160;</tspan><tspan class="opt">(&#160;</tspan>jResult&#160;<tspan class="opt">)</tspan></text>
<text x="10" y="1020">&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1040">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>jResult<tspan class="opt">;</tspan></text>
<text x="10" y="1060">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="1080" />
<text x="10" y="1100">&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan><tspan class="opt">&amp;</tspan>javaClass&#160;<tspan class="opt">=&#160;</tspan>CachedJavaClass<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;::</tspan>java_class<tspan class="opt">;</tspan></text>
<text x="10" y="1120">&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan>pInstanceSharedPointer&#160;<tspan class="opt">=&#160;</tspan><tspan class="kwa">new&#160;</tspan><tspan class="opt">(::</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>nothrow<tspan class="opt">)&#160;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;(</tspan>_ninput<tspan class="opt">);</tspan></text>
<text x="10" y="1140">&#160;&#160;&#160;&#160;<tspan class="kwa">if&#160;</tspan><tspan class="opt">(&#160;</tspan>pInstanceSharedPointer&#160;<tspan class="opt">==&#160;</tspan><tspan class="kwc">nullptr&#160;</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="1160">&#160;&#160;&#160;&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1180">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwc">auto&#160;</tspan>exceptionClass&#160;<tspan class="opt">=&#160;</tspan><tspan class="kwd">find_class</tspan><tspan class="opt">(</tspan>_jenv<tspan class="opt">,&#160;</tspan><tspan class="str">"java/lang/OutOfMemoryError"</tspan>&#160;<tspan class="opt">);</tspan></text>
<text x="10" y="1200">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_jenv<tspan class="opt">-&gt;</tspan><tspan class="kwd">ThrowNew</tspan><tspan class="opt">(&#160;</tspan>exceptionClass<tspan class="opt">.</tspan><tspan class="kwd">get</tspan><tspan class="opt">(),&#160;</tspan><tspan class="str">"Cannot&#160;allocate&#160;native&#160;memory."</tspan>&#160;<tspan class="opt">);</tspan></text>
<text x="10" y="1220">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="1240">&#160;&#160;&#160;&#160;jResult&#160;<tspan class="opt">=&#160;::</tspan><tspan class="kwc">jni</tspan><tspan class="opt">::</tspan><tspan class="kwd">create_instance_object</tspan><tspan class="opt">(</tspan></text>
<text x="10" y="1260">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_jenv<tspan class="opt">,&#160;</tspan>javaClass<tspan class="opt">,&#160;</tspan><tspan class="kwa">reinterpret_cast</tspan><tspan class="opt">&lt;</tspan>jlong<tspan class="opt">&gt;(&#160;</tspan>pInstanceSharedPointer&#160;<tspan class="opt">)&#160;);</tspan></text>
<text x="10" y="1280" />
<text x="10" y="1300">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>jResult<tspan class="opt">;</tspan></text>
<text x="10" y="1320"><tspan class="opt">}</tspan></text>
<text x="10" y="1340" />
<text x="10" y="1360"><tspan class="opt">}</tspan></text>
<text x="10" y="1380" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="1200" y="300">
<desc>./code/android/jni/com_example_hello_HelloWorld__Conversion.h</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="com">/*</tspan></text>
<text x="10" y="40"><tspan class="com" /></text>
<text x="10" y="60"><tspan class="com">&#160;*</tspan></text>
<text x="10" y="80"><tspan class="com">&#160;*/</tspan></text>
<text x="10" y="100" />
<text x="10" y="120"><tspan class="ppc">#pragma&#160;once</tspan></text>
<text x="10" y="140" />
<text x="10" y="160"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"hello/HelloWorld.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="180"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"JniReference.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="200"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"Optional.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="220"><tspan class="ppc">#include&#160;&lt;functional&gt;</tspan></text>
<text x="10" y="240"><tspan class="ppc">#include&#160;&lt;memory&gt;</tspan></text>
<text x="10" y="260" />
<text x="10" y="280"><tspan class="kwa">namespace&#160;</tspan>jni</text>
<text x="10" y="300"><tspan class="opt">{</tspan></text>
<text x="10" y="320" />
<text x="10" y="340"><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&#160;</tspan><tspan class="kwd">convert_from_jni</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_env<tspan class="opt">,&#160;</tspan><tspan class="kwb">const&#160;</tspan>JniReference<tspan class="opt">&lt;</tspan>jobject<tspan class="opt">&gt;&amp;&#160;</tspan>_jobj<tspan class="opt">,&#160;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;*&#160;</tspan>dummy<tspan class="opt">);</tspan></text>
<text x="10" y="360">JniReference<tspan class="opt">&lt;</tspan>jobject<tspan class="opt">&gt;&#160;</tspan><tspan class="kwd">convert_to_jni</tspan><tspan class="opt">(</tspan>JNIEnv<tspan class="opt">*&#160;</tspan>_jenv<tspan class="opt">,&#160;</tspan><tspan class="kwb">const&#160;</tspan><tspan class="kwc">std</tspan><tspan class="opt">::</tspan>shared_ptr<tspan class="opt">&lt;::</tspan><tspan class="kwc">hello</tspan><tspan class="opt">::</tspan>HelloWorld<tspan class="opt">&gt;&amp;&#160;</tspan>_ninput<tspan class="opt">);</tspan></text>
<text x="10" y="380" />
<text x="10" y="400"><tspan class="opt">}</tspan></text>
<text x="10" y="420" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="300" y="1000">
<desc>./code/cpp/src/hello/HelloWorld.cpp</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="slc">//&#160;-------------------------------------------------------------------------------------------------</tspan></text>
<text x="10" y="40"><tspan class="slc">//</tspan></text>
<text x="10" y="60" />
<text x="10" y="80"><tspan class="slc">//</tspan></text>
<text x="10" y="100"><tspan class="slc">//&#160;-------------------------------------------------------------------------------------------------</tspan></text>
<text x="10" y="120" />
<text x="10" y="140"><tspan class="ppc">#include&#160;</tspan><tspan class="pps">"hello/HelloWorld.h"</tspan><tspan class="ppc" /></text>
<text x="10" y="160" />
<text x="10" y="180" />
<text x="10" y="200" />
<text x="10" y="220"><tspan class="kwa">namespace&#160;</tspan>hello&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="240" />
<text x="10" y="260"><tspan class="kwc">HelloWorld</tspan><tspan class="opt">::</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">()&#160;{</tspan></text>
<text x="10" y="280"><tspan class="opt">}</tspan></text>
<text x="10" y="300"><tspan class="kwc">HelloWorld</tspan><tspan class="opt">::~</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">()&#160;{</tspan></text>
<text x="10" y="320"><tspan class="opt">}</tspan></text>
<text x="10" y="340" />
<text x="10" y="360" />
<text x="10" y="380"><tspan class="opt">}</tspan></text>
<text x="10" y="400" />
<text x="10" y="420" />
</g>
</svg><svg version="1.2" baseProfile="full" xml:space="preserve" x="700" y="700">
<desc>./code/swift/hello/HelloWorld.swift</desc>
<defs>
<style type="text/css">

rect { fill:#303030; } 
g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f0; }
tspan.num { fill:#92d4ff; }
tspan.esc { fill:#ffc890; }
tspan.str { fill:#92d4ff; }
tspan.pps { fill:#92d4ff; }
tspan.slc { fill:#c0c0c0; }
tspan.com { fill:#c0c0c0; }
tspan.ppc { fill:#7979db; }
tspan.opt { fill:#d86acd; }
tspan.ipl { fill:#ffc890; }
tspan.lin { fill:#c0c0c0; }
tspan.kwa { fill:#dcdc78; }
tspan.kwb { fill:#60f0a8; }
tspan.kwc { fill:#7979db; }
tspan.kwd { fill:#db79aa; }

</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" />
<text x="10" y="20"><tspan class="slc">//</tspan></text>
<text x="10" y="40" />
<text x="10" y="60"><tspan class="slc">//</tspan></text>
<text x="10" y="80" />
<text x="10" y="100"><tspan class="kwa">import&#160;</tspan>Foundation</text>
<text x="10" y="120" />
<text x="10" y="140"><tspan class="kwa">public&#160;class&#160;</tspan>HelloWorld&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="160" />
<text x="10" y="180">&#160;&#160;&#160;&#160;<tspan class="kwa">let&#160;</tspan><tspan class="kwc">c_instance&#160;</tspan><tspan class="opt">:&#160;</tspan>_baseRef</text>
<text x="10" y="200" />
<text x="10" y="220">&#160;&#160;&#160;&#160;<tspan class="kwa">init</tspan><tspan class="opt">(</tspan>cHelloWorld<tspan class="opt">:&#160;</tspan>_baseRef<tspan class="opt">)&#160;{</tspan></text>
<text x="10" y="240">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">guard&#160;</tspan>cHelloWorld&#160;<tspan class="opt">!=&#160;</tspan><tspan class="num">0&#160;</tspan><tspan class="kwa">else&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="260">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwd">fatalError</tspan><tspan class="opt">(</tspan><tspan class="str">"Nullptr&#160;value&#160;is&#160;not&#160;supported&#160;for&#160;initializers"</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="280">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="300">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwc">c_instance&#160;</tspan><tspan class="opt">=&#160;</tspan>cHelloWorld</text>
<text x="10" y="320">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="340" />
<text x="10" y="360">&#160;&#160;&#160;&#160;<tspan class="kwa">deinit&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="380">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwd">hello_HelloWorld_release_handle</tspan><tspan class="opt">(</tspan><tspan class="kwc">c_instance</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="400">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="420" />
<text x="10" y="440">&#160;&#160;&#160;&#160;<tspan class="slc">///&#160;Example&#160;static&#160;method&#160;for&#160;HelloWorld&#160;0.1&#160;which&#160;takes&#160;a&#160;String&#160;and&#160;returns&#160;a&#160;String</tspan></text>
<text x="10" y="460">&#160;&#160;&#160;&#160;<tspan class="slc">///&#160;-&#160;Parameter&#160;inputString:&#160;Input&#160;string</tspan></text>
<text x="10" y="480">&#160;&#160;&#160;&#160;<tspan class="slc">///&#160;-&#160;Returns:&#160;Output&#160;string</tspan></text>
<text x="10" y="500">&#160;&#160;&#160;&#160;<tspan class="kwa">public&#160;static&#160;func&#160;</tspan><tspan class="kwd">helloWorldMethod</tspan><tspan class="opt">(</tspan>inputString<tspan class="opt">:&#160;</tspan><tspan class="kwb">String</tspan><tspan class="opt">)&#160;-&gt;&#160;</tspan><tspan class="kwb">String&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="520" />
<text x="10" y="540">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">let&#160;</tspan><tspan class="kwc">c_inputString&#160;</tspan><tspan class="opt">=&#160;</tspan><tspan class="kwd">moveToCType</tspan><tspan class="opt">(</tspan>inputString<tspan class="opt">)</tspan></text>
<text x="10" y="560">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">moveFromCType</tspan><tspan class="opt">(</tspan><tspan class="kwd">hello_HelloWorld_helloWorldMethod</tspan><tspan class="opt">(</tspan><tspan class="kwc">c_inputString</tspan><tspan class="opt">.</tspan>ref<tspan class="opt">))</tspan></text>
<text x="10" y="580" />
<text x="10" y="600">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="620" />
<text x="10" y="640"><tspan class="opt">}</tspan></text>
<text x="10" y="660" />
<text x="10" y="680"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">getRef</tspan><tspan class="opt">(</tspan>_&#160;ref<tspan class="opt">:&#160;</tspan>HelloWorld?<tspan class="opt">,&#160;</tspan>owning<tspan class="opt">:&#160;</tspan><tspan class="kwb">Bool&#160;</tspan><tspan class="opt">=&#160;</tspan><tspan class="kwb">true</tspan><tspan class="opt">)&#160;-&gt;&#160;</tspan>RefHolder&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="700">&#160;&#160;&#160;&#160;<tspan class="kwa">guard&#160;let&#160;</tspan><tspan class="kwc">c_handle&#160;</tspan><tspan class="opt">=&#160;</tspan>ref?<tspan class="opt">.</tspan><tspan class="kwc">c_instance&#160;</tspan><tspan class="kwa">else&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="720">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">RefHolder</tspan><tspan class="opt">(</tspan><tspan class="num">0</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="740">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="760">&#160;&#160;&#160;&#160;<tspan class="kwa">let&#160;</tspan><tspan class="kwc">handle_copy&#160;</tspan><tspan class="opt">=&#160;</tspan><tspan class="kwd">hello_HelloWorld_copy_handle</tspan><tspan class="opt">(</tspan><tspan class="kwc">c_handle</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="780">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan>owning</text>
<text x="10" y="800">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;?&#160;<tspan class="kwd">RefHolder</tspan><tspan class="opt">(</tspan>ref<tspan class="opt">:&#160;</tspan><tspan class="kwc">handle_copy</tspan><tspan class="opt">,&#160;</tspan>release<tspan class="opt">:&#160;</tspan>hello_HelloWorld_release_handle<tspan class="opt">)</tspan></text>
<text x="10" y="820">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="opt">:&#160;</tspan><tspan class="kwd">RefHolder</tspan><tspan class="opt">(</tspan><tspan class="kwc">handle_copy</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="840"><tspan class="opt">}</tspan></text>
<text x="10" y="860" />
<text x="10" y="880"><tspan class="kwa">extension&#160;</tspan>HelloWorld<tspan class="opt">:&#160;</tspan>NativeBase&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="900">&#160;&#160;&#160;&#160;<tspan class="kwa">var&#160;</tspan><tspan class="kwc">c_handle</tspan><tspan class="opt">:&#160;</tspan>_baseRef&#160;<tspan class="opt">{&#160;</tspan><tspan class="kwa">return&#160;</tspan><tspan class="kwc">c_instance&#160;</tspan><tspan class="opt">}</tspan></text>
<text x="10" y="920"><tspan class="opt">}</tspan></text>
<text x="10" y="940"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">HelloWorld_copyFromCType</tspan><tspan class="opt">(</tspan>_&#160;handle<tspan class="opt">:&#160;</tspan>_baseRef<tspan class="opt">)&#160;-&gt;&#160;</tspan>HelloWorld&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="960">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">(</tspan>cHelloWorld<tspan class="opt">:&#160;</tspan><tspan class="kwd">hello_HelloWorld_copy_handle</tspan><tspan class="opt">(</tspan>handle<tspan class="opt">))</tspan></text>
<text x="10" y="980"><tspan class="opt">}</tspan></text>
<text x="10" y="1000"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">HelloWorld_moveFromCType</tspan><tspan class="opt">(</tspan>_&#160;handle<tspan class="opt">:&#160;</tspan>_baseRef<tspan class="opt">)&#160;-&gt;&#160;</tspan>HelloWorld&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1020">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">HelloWorld</tspan><tspan class="opt">(</tspan>cHelloWorld<tspan class="opt">:&#160;</tspan>handle<tspan class="opt">)</tspan></text>
<text x="10" y="1040"><tspan class="opt">}</tspan></text>
<text x="10" y="1060" />
<text x="10" y="1080"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">HelloWorld_copyFromCType</tspan><tspan class="opt">(</tspan>_&#160;handle<tspan class="opt">:&#160;</tspan>_baseRef<tspan class="opt">)&#160;-&gt;&#160;</tspan>HelloWorld?&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1100">&#160;&#160;&#160;&#160;<tspan class="kwa">guard&#160;</tspan>handle&#160;<tspan class="opt">!=&#160;</tspan><tspan class="num">0&#160;</tspan><tspan class="kwa">else&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="1120">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwb">nil</tspan></text>
<text x="10" y="1140">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="1160">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">HelloWorld_moveFromCType</tspan><tspan class="opt">(</tspan>handle<tspan class="opt">)&#160;</tspan><tspan class="kwb">as&#160;</tspan>HelloWorld</text>
<text x="10" y="1180"><tspan class="opt">}</tspan></text>
<text x="10" y="1200"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">HelloWorld_moveFromCType</tspan><tspan class="opt">(</tspan>_&#160;handle<tspan class="opt">:&#160;</tspan>_baseRef<tspan class="opt">)&#160;-&gt;&#160;</tspan>HelloWorld?&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1220">&#160;&#160;&#160;&#160;<tspan class="kwa">guard&#160;</tspan>handle&#160;<tspan class="opt">!=&#160;</tspan><tspan class="num">0&#160;</tspan><tspan class="kwa">else&#160;</tspan><tspan class="opt">{</tspan></text>
<text x="10" y="1240">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwb">nil</tspan></text>
<text x="10" y="1260">&#160;&#160;&#160;&#160;<tspan class="opt">}</tspan></text>
<text x="10" y="1280">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">HelloWorld_moveFromCType</tspan><tspan class="opt">(</tspan>handle<tspan class="opt">)&#160;</tspan><tspan class="kwb">as&#160;</tspan>HelloWorld</text>
<text x="10" y="1300"><tspan class="opt">}</tspan></text>
<text x="10" y="1320" />
<text x="10" y="1340"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">copyToCType</tspan><tspan class="opt">(</tspan>_&#160;swiftClass<tspan class="opt">:&#160;</tspan>HelloWorld<tspan class="opt">)&#160;-&gt;&#160;</tspan>RefHolder&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1360">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">getRef</tspan><tspan class="opt">(</tspan>swiftClass<tspan class="opt">,&#160;</tspan>owning<tspan class="opt">:&#160;</tspan><tspan class="kwb">false</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="1380"><tspan class="opt">}</tspan></text>
<text x="10" y="1400" />
<text x="10" y="1420"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">moveToCType</tspan><tspan class="opt">(</tspan>_&#160;swiftClass<tspan class="opt">:&#160;</tspan>HelloWorld<tspan class="opt">)&#160;-&gt;&#160;</tspan>RefHolder&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1440">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">getRef</tspan><tspan class="opt">(</tspan>swiftClass<tspan class="opt">,&#160;</tspan>owning<tspan class="opt">:&#160;</tspan><tspan class="kwb">true</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="1460"><tspan class="opt">}</tspan></text>
<text x="10" y="1480" />
<text x="10" y="1500"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">copyToCType</tspan><tspan class="opt">(</tspan>_&#160;swiftClass<tspan class="opt">:&#160;</tspan>HelloWorld?<tspan class="opt">)&#160;-&gt;&#160;</tspan>RefHolder&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1520">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">getRef</tspan><tspan class="opt">(</tspan>swiftClass<tspan class="opt">,&#160;</tspan>owning<tspan class="opt">:&#160;</tspan><tspan class="kwb">false</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="1540"><tspan class="opt">}</tspan></text>
<text x="10" y="1560" />
<text x="10" y="1580"><tspan class="kwa">internal&#160;func&#160;</tspan><tspan class="kwd">moveToCType</tspan><tspan class="opt">(</tspan>_&#160;swiftClass<tspan class="opt">:&#160;</tspan>HelloWorld?<tspan class="opt">)&#160;-&gt;&#160;</tspan>RefHolder&#160;<tspan class="opt">{</tspan></text>
<text x="10" y="1600">&#160;&#160;&#160;&#160;<tspan class="kwa">return&#160;</tspan><tspan class="kwd">getRef</tspan><tspan class="opt">(</tspan>swiftClass<tspan class="opt">,&#160;</tspan>owning<tspan class="opt">:&#160;</tspan><tspan class="kwb">true</tspan><tspan class="opt">)</tspan></text>
<text x="10" y="1620"><tspan class="opt">}</tspan></text>
<text x="10" y="1640" />
<text x="10" y="1660" />
</g>
</svg></svg>
  <defs id="defs2">
    <pattern xlink:href="#Strips1_3" id="pattern6680" patternTransform="matrix(-0.74267474,-1.415176,10.193483,-5.3494704,87.258604,280.63622)" />
    <pattern id="Strips1_3" patternTransform="translate(0,0) scale(10,10)" height="1" width="4" patternUnits="userSpaceOnUse">
      <rect id="rect5882" height="2" width="1" y="-0.5" x="0" style="fill:black;stroke:none" />
    </pattern>
    <pattern xlink:href="#Strips1_1" id="pattern6598" patternTransform="matrix(2.4404762,0,0,16.047619,-287.53219,-53.14378)" />
    <pattern id="Strips1_1" patternTransform="translate(0,0) scale(10,10)" height="1" width="2" patternUnits="userSpaceOnUse">
      <rect id="rect5864" height="2" width="1" y="-0.5" x="0" style="fill:black;stroke:none" />
    </pattern>
    <linearGradient id="linearGradient6590" osb:paint="solid">
      <stop style="stop-color:#000000;stop-opacity:1;" offset="0" id="stop6588" />
    </linearGradient>
    <pattern patternUnits="userSpaceOnUse" width="541.7125" height="584.56967" patternTransform="matrix(0.26458333,0,0,0.26458333,46.6425,59.404406)" id="pattern5122">
      <rect ry="82.85714" y="3.7133856" x="3.7133856" height="577.14288" width="534.28571" id="rect815" style="fill:none;stroke:#000000;stroke-width:7.42677116;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none" />
    </pattern>
    <pattern patternUnits="userSpaceOnUse" width="3.8569294" height="140.02041" patternTransform="matrix(0.26458333,0,0,0.26458333,-74.215596,24.854443)" id="pattern5845">
      <path id="path5843" d="M 0.49989588,0.01020194 3.3570335,140.01021 v 0" style="fill:none;stroke:#000000;stroke-width:0.99999994px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    </pattern>
  </defs>
  <metadata id="metadata5">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g id="layer3" style="display:inline" transform="translate(94.512518,23.128154)">
    <path style="fill:#ffffff;fill-opacity:0.31527094;fill-rule:nonzero;stroke:#000000;stroke-width:2.86500001;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" id="path6808" d="M 316.55033,93.662073 A 181.80655,181.80655 0 0 1 154.31365,293.08469 181.80655,181.80655 0 0 1 -45.150978,130.89967 181.80655,181.80655 0 0 1 116.98238,-68.606961 181.80655,181.80655 0 0 1 316.53099,93.474717" transform="translate(-46.954411,47.890832)" />
  </g>
  <g id="layer1" transform="translate(47.558107,71.018986)" style="display:inline">
    <path transform="translate(46.95441,-47.890832)" style="display:inline;fill:#ffff00;stroke:#000000;stroke-width:2.46499991;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="m 14.445893,155.54894 c 0,0 94.469367,-45.47185 168.159267,-98.836758 8.72834,-6.320906 56.90797,108.438848 56.90797,108.438848 C 143.91625,195.71266 59.719673,239.7319 59.719673,239.7319 Z" id="path6813" />
    <flowRoot xml:space="preserve" id="flowRoot6607" style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none" transform="matrix(0.26458333,0,0,0.26458333,48.154411,-47.890832)"><flowRegion id="flowRegion6609"><rect id="rect6611" width="371.42856" height="242.85715" x="-1814.2858" y="32.952053" /></flowRegion><flowPara id="flowPara6613" /></flowRoot>    <flowRoot xml:space="preserve" id="flowRoot6631" style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none" transform="matrix(0.26458333,0,0,0.26458333,48.154411,-47.890832)"><flowRegion id="flowRegion6633"><rect id="rect6635" width="568.57141" height="360" x="-751.42859" y="-549.90509" /></flowRegion><flowPara id="flowPara6637" /></flowRoot>    <rect style="fill:#ffff00;fill-rule:nonzero;stroke:#000000;stroke-width:2.86500001;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" id="rect6776" width="122.46429" height="16.63096" x="-236.94946" y="199.16968" ry="0" transform="rotate(-117.69018)" />
    <path style="fill:#cccccc;fill-rule:nonzero;stroke:#000000;stroke-width:1.86500001;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" id="path6772" d="m -122.9948,5.2678733 a 48.186794,4.9136906 0 0 1 -47.81959,4.9135477 48.186794,4.9136906 0 0 1 -48.5484,-4.8386605 48.186794,4.9136906 0 0 1 47.07966,-4.98729375 48.186794,4.9136906 0 0 1 49.26594,4.76264955" transform="rotate(-117.69018)" />
    <path style="display:inline;fill:#ff0000;fill-opacity:1;stroke:#000000;stroke-width:1.86500001;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="m 48.529355,146.83814 c -16.734376,8.78212 -61.701498,43.47897 -61.701498,43.47897 l 7.025698,13.38751 c 0,0 52.707627,-17.42247 70.13231,-27.41396 z" id="path5081-0" />
    <rect style="display:inline;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.96500003;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none" id="rect817-3" width="62.744045" height="27.214285" x="-200.59769" y="-22.465807" ry="13.607142" rx="1.5119047" transform="rotate(-117.69018)" />
    <rect style="fill:url(#pattern6598);fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.96499991;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none" id="rect817" width="62.744045" height="27.214285" x="-200.59767" y="-22.465803" ry="13.607142" rx="1.5119047" transform="rotate(-117.69018)" />
    <path style="fill:url(#pattern6680);fill-opacity:1;stroke:#000000;stroke-width:1.86500001;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="m 48.529347,146.83814 c -16.734376,8.78212 -61.701497,43.47898 -61.701497,43.47898 l 7.025698,13.3875 c 0,0 52.707627,-17.42246 70.132309,-27.41396 z" id="path5081" />
  </g>
  <g id="layer4" style="display:inline" transform="translate(33.196417,70.67964)">
    <g id="text6787" style="font-style:normal;font-weight:normal;font-size:17.15381622px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.42884538" transform="matrix(0.95000089,-0.43465941,0.49619815,0.82560217,0,0)" aria-label="codium">
      <path id="path3748" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 42.704875,213.68567 q 0.988059,0 0.988059,1.27624 0,0.98806 -2.058458,3.54055 -2.058458,2.51132 -3.581716,3.54055 -3.664056,2.42898 -6.587066,2.42898 -2.140796,0 -4.610946,-1.11157 -2.511318,-1.11157 -3.622886,-3.00535 -1.111567,-1.93495 -1.358582,-5.55783 0,-0.37053 -0.08234,-1.0704 -0.04117,-0.74105 -0.04117,-1.0704 0,-3.17003 3.252363,-6.50473 3.293533,-3.37587 5.88719,-3.99341 1.152736,-0.28818 3.005349,-0.28818 3.540547,0 6.175373,2.1408 2.634827,2.14079 2.634827,4.36393 0,0.74104 -0.452861,1.39975 -0.411692,0.65871 -1.111567,0.65871 -0.164677,0 -0.370523,-0.0412 -0.205846,-0.0412 -0.658706,-0.45286 -0.411692,-0.4117 -0.49403,-1.15274 -0.04117,-0.28819 -0.49403,-0.98806 -0.411692,-0.69988 -0.823383,-1.11157 -0.49403,-0.5352 -0.782214,-0.74104 -0.247015,-0.20585 -1.48209,-0.45286 -1.235075,-0.28819 -3.334702,-0.28819 -1.564428,0 -2.346642,0.49403 -0.782214,0.45286 -2.017289,2.01729 -3.087687,3.82873 -3.087687,6.83408 0,1.56443 0.411692,2.63483 0.411691,1.02923 0.699875,1.31741 0.288185,0.28818 1.152737,0.98806 1.152736,0.98806 1.770274,1.27624 0.617537,0.24702 1.729104,0.24702 3.540548,0 7.945648,-4.69328 2.47015,-2.63483 3.746394,-2.63483 z" />
      <path id="path3750" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 51.88553,205.74002 q 3.45821,-2.96418 5.88719,-3.91107 2.470149,-0.94689 6.175374,-0.94689 5.722513,0 7.163433,3.21119 0.823384,1.81145 0.823384,4.48744 0,4.24043 -2.058458,8.64553 -2.017289,4.4051 -5.146145,6.17537 -3.046518,1.68794 -6.463558,1.68794 -5.022638,0 -7.657464,-2.96418 -1.852612,-2.05846 -2.42898,-3.49938 -0.535199,-1.48209 -0.535199,-4.07575 0,-5.14614 4.240423,-8.8102 z m 7.451618,15.93247 q 3.375871,0 6.216543,-4.2816 2.881841,-4.32276 2.881841,-9.79826 0,-0.57636 -0.123507,-0.90572 -0.08234,-0.32935 -0.205846,-0.45286 -0.123508,-0.16468 -0.452861,-0.41169 -1.48209,-1.0704 -3.128856,-1.0704 -0.247015,0 -0.699876,0.0823 -0.411691,0.0412 -1.276244,0.16468 -0.823383,0.0823 -1.811443,0.16467 -1.358582,0.12351 -2.223134,0.5352 -0.823383,0.37052 -2.140796,1.48209 -2.47015,2.09963 -3.540548,3.8699 -1.029229,1.72911 -1.029229,3.78757 0,3.00534 2.099627,4.94029 2.099627,1.89379 5.434329,1.89379 z" />
      <path id="path3752" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 92.025426,207.34562 q -2.387811,-1.39975 -3.252363,-1.39975 -0.576368,0 -3.540548,2.42898 -2.964179,2.42898 -3.581717,3.70522 -0.370522,0.74105 -0.370522,3.17003 0,2.75833 0.49403,3.58171 0.370522,0.57637 1.93495,1.31742 1.605598,0.74104 3.046518,0.74104 2.758334,0 7.163434,-3.70522 3.087687,-2.59366 3.41704,-3.58172 0,-1.02923 -1.729105,-3.08769 -1.687935,-2.05845 -3.581717,-3.17002 z m 5.969528,10.95099 q -0.04117,0.0412 -0.864552,0.90573 -0.782214,0.82338 -1.770274,1.64676 -0.94689,0.82339 -2.305473,1.77028 -1.317413,0.94689 -3.087687,1.52326 -1.770273,0.57636 -3.581716,0.57636 -1.564428,0 -3.417041,-0.61753 -5.804851,-1.97612 -5.804851,-8.1515 0,-2.51132 0.864552,-4.77562 0.905722,-2.30547 2.264304,-3.91107 1.399752,-1.64677 3.005349,-2.84067 1.646766,-1.19391 3.170025,-1.77028 1.523259,-0.61753 2.634826,-0.61753 1.276244,0 4.075747,1.48209 2.799503,1.48209 3.952239,2.84067 0.658707,0.82338 0.98806,1.0704 0.164677,-1.44092 0.288184,-11.19801 0.123508,-9.79826 0.535199,-10.78632 0.658707,-1.6056 2.099625,-1.6056 h 1.64677 l -0.32935,17.45572 q -0.12351,6.0107 -0.12351,10.74515 0,6.38122 0.28818,9.13956 0.28819,2.71716 0.28819,3.00534 0,0.86456 -0.45286,1.77028 -0.45287,0.90572 -1.52326,0.90572 -1.317417,0 -1.852616,-1.52326 -0.535199,-1.48209 -0.699875,-3.95224 -0.123508,-2.47015 -0.288185,-3.08769 z" />
      <path id="path3754" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 110.75732,200.84089 q 0.69988,-0.49403 1.35859,-0.49403 0.6587,0 1.11156,0.5352 0.65871,1.23508 1.0704,7.16343 0.45286,5.92836 0.45286,11.07451 0,3.70522 -0.24701,4.19925 -0.82339,0.65871 -1.77028,0.65871 -1.44092,0 -1.77027,-0.86455 -0.20585,-0.65871 -0.65871,-8.56319 -0.41169,-7.94565 -0.41169,-10.62164 0,-2.51132 0.86455,-3.08769 z m -0.45286,-9.63358 q 0.0823,-0.78222 0.65871,-1.27625 0.61754,-0.49403 1.19391,-0.49403 0.57636,0 1.48209,0.5352 0.90572,0.5352 0.90572,1.44092 0,0.98806 -0.49403,1.77028 -0.49403,0.78221 -1.31742,0.78221 -0.86455,0 -1.64676,-0.78221 -0.78222,-0.82339 -0.78222,-1.97612 z" />
      <path id="path3756" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 123.14922,202.11714 q 0.74105,0 1.31741,0.61753 0.61754,0.61754 0.61754,1.89378 0,0.45286 -0.0823,1.35859 -0.0823,0.90572 -0.0823,2.01729 0,1.07039 0.1235,3.8699 0.12351,2.75833 0.5352,6.46355 0.45286,3.70523 1.11157,4.19926 0.16468,0.12351 0.41169,0.12351 0.82338,0 2.71717,-1.48209 2.47014,-1.89379 4.77562,-6.05187 2.34664,-4.15809 3.25236,-8.31617 0.69988,-3.17003 1.23508,-4.15809 0.57636,-0.98806 1.52325,-0.98806 0.74105,0 1.15274,0.45287 0.45286,0.45286 0.45286,1.1939 0,0.57637 -0.61754,4.61095 -0.57636,4.03457 -0.57636,5.80485 0,2.42898 1.02923,6.09303 1.07039,3.66406 1.07039,4.19926 -0.1235,0.90572 -0.78221,1.27624 -0.41169,0.24702 -0.90572,0.24702 -1.0704,0 -1.81144,-1.6056 -0.69988,-1.64677 -1.23508,-3.82873 -0.5352,-2.18197 -0.90572,-2.75834 -0.12351,0.12351 -0.32935,0.4117 -0.16468,0.24701 -0.45287,0.6587 -0.24701,0.37052 -0.45286,0.65871 -1.89378,2.7995 -4.4051,4.85796 -2.47015,2.01729 -4.4051,2.01729 -2.96418,0 -3.9934,-1.85261 -1.02923,-1.85262 -1.68794,-7.94565 -0.28818,-2.59366 -0.28818,-6.83408 0,-3.8699 0.37052,-5.51667 0.37052,-1.68793 1.31741,-1.68793 z" />
      <path id="path3758" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 178.80988,215.33244 q 0,3.37587 -0.0823,5.22848 -0.0412,1.81144 -0.28818,2.7995 -0.20585,0.98806 -0.49403,1.23508 -0.28818,0.24701 -0.86455,0.24701 -0.69988,0 -0.94689,-0.74104 -0.16468,-0.57637 -0.20585,-5.68135 0,-5.14614 -0.37052,-9.63358 -0.32936,-4.52861 -1.31741,-4.52861 -0.69988,0 -2.09963,2.26431 -1.39975,2.2643 -2.84067,6.83408 -1.39976,4.5286 -1.68794,9.55124 -0.16468,2.2643 -1.44092,2.2643 -0.90572,0 -1.15274,-0.86455 -0.20584,-0.86455 -0.32935,-3.58171 0,-0.24702 0,-0.37053 0,-0.1235 -0.0412,-0.32935 0,-0.24702 0,-0.41169 -0.28818,-6.29888 -0.86455,-8.76903 -0.57637,-2.47015 -2.1408,-4.44627 -0.86455,-1.23508 -1.23507,-1.23508 -0.65871,0.16468 -3.45821,6.17538 -0.78222,1.64676 -0.78222,3.17002 0,0.98806 -0.41169,2.05846 -0.37052,1.0704 -0.49403,5.26965 0,0.41169 -0.0412,1.19391 0,0.78221 0,1.1939 0,0.37053 -0.0823,0.98806 -0.0412,0.61754 -0.16468,0.90573 -0.0823,0.28818 -0.24702,0.61753 -0.16467,0.32936 -0.45286,0.45286 -0.24701,0.16468 -0.61753,0.16468 -1.11157,0 -1.39976,-1.93495 -0.28818,-1.89378 -0.28818,-8.06916 0,-3.95224 -0.32935,-8.31617 -0.28819,-4.4051 -0.28819,-5.0638 0,-2.75834 1.19391,-2.75834 0.41169,0 0.69987,0.45286 0.32936,0.45287 0.5352,1.27625 0.20585,0.78221 0.32936,1.56443 0.16467,0.78221 0.32935,1.81144 0.16468,1.02923 0.28818,1.52326 0.24702,-0.61754 0.37053,-0.90572 0.16467,-0.28819 0.28818,-0.37053 0.12351,-0.1235 0.45286,-0.61753 0.32935,-0.5352 0.82338,-1.44092 1.02923,-1.89378 1.64677,-2.34665 0.61754,-0.49403 2.1408,-0.49403 1.64676,0 3.54054,1.97612 1.0704,1.19391 1.48209,2.26431 0.4117,1.02923 0.82339,3.58171 l 0.28818,1.52326 q 1.15274,-3.66405 3.41704,-6.50472 2.30547,-2.84068 4.56978,-2.84068 1.39975,0 2.38781,1.27625 1.02923,1.27624 1.44092,3.08769 0.41169,1.93495 0.41169,9.30423 z" />
    </g>
    <g id="text6787-4" style="font-style:normal;font-weight:normal;font-size:17.15381622px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;display:inline;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.42884538" transform="matrix(0.93810506,-0.45977102,0.51797961,0.81211372,0,0)" aria-label="GLUE">
      <path id="path3761" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 60.560556,163.53401 q -0.08234,0 -0.782214,0.45287 -0.699876,0.41169 -2.099627,0.41169 -0.699876,0 -1.440921,-0.12351 -0.741045,-0.12351 -1.523259,-0.37052 -0.741045,-0.28819 -1.235075,-0.82339 -0.49403,-0.57636 -0.49403,-1.31741 0.08234,-0.94689 0.699876,-1.39975 0.617537,-0.45286 1.48209,-0.69988 0.864552,-0.24701 1.111567,-0.49403 0.576368,-0.57636 2.017289,-0.57636 1.646766,0 4.075747,0.49403 2.42898,0.45286 3.293532,1.15273 1.440921,1.19391 2.058458,5.35199 0.617538,4.11692 0.617538,8.89254 0,1.72911 -0.247015,2.63483 -0.247015,0.86455 -1.152737,1.11156 -0.370522,0.12351 -0.576368,0.12351 -0.782214,0 -1.276244,-0.37052 -0.452861,-0.41169 -0.699876,-1.35858 -0.205845,-0.98806 -0.247015,-1.85262 -0.04117,-0.90572 -0.04117,-2.59365 v -2.75834 l -0.329353,0.5352 q -2.552488,3.8699 -5.846021,6.09304 -3.293532,2.22313 -6.463557,2.22313 -1.729105,0 -3.45821,-0.86455 -1.235075,-0.65871 -1.811443,-1.52326 -0.576368,-0.86455 -1.152736,-2.96418 -0.617538,-2.18196 -0.617538,-4.07574 0,-1.31742 0.247015,-3.33471 0.411692,-3.37587 1.193906,-5.31082 0.782214,-1.97612 3.170025,-5.26965 1.687936,-2.30547 3.664055,-3.95224 1.97612,-1.68793 3.375871,-2.34664 1.440921,-0.65871 2.593657,-1.19391 1.152737,-0.5352 1.399752,-0.86455 0.741045,-0.98806 2.634826,-0.98806 1.729105,0 3.293533,0.86455 1.605597,0.82339 1.605597,1.93495 0,0.82339 -0.617538,1.93495 -0.576368,1.11157 -1.44092,1.11157 -0.617538,0 -0.905722,-0.49403 -0.288184,-0.49403 -0.411691,-0.94689 -0.123508,-0.49403 -0.329353,-0.49403 -0.782215,0 -2.140797,0.45286 -1.317413,0.45286 -3.252363,1.52326 -1.893782,1.02923 -4.116916,3.37587 -2.181966,2.30547 -3.993409,5.51667 -1.317413,2.30547 -1.605597,3.45821 -0.247015,1.15274 -0.247015,3.8699 0,3.91107 0.576368,5.18731 0.617538,1.23508 2.387812,1.23508 4.199254,0 6.83408,-3.17003 1.440921,-1.7291 2.346642,-3.54054 0.946891,-1.85262 0.946891,-2.75834 0,-0.41169 -0.370523,-0.74104 -0.329353,-0.37053 -0.699875,-0.37053 z" />
      <path id="path3763" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 75.875437,147.18986 q 0,-1.6056 1.152736,-1.6056 0.5352,0 0.98806,0.45286 0.49403,0.45286 0.699876,0.86455 0.205846,0.4117 0.288184,0.65871 0.535199,1.72911 1.152737,13.62699 0.617537,11.85672 1.235074,12.88595 0.123508,0.24701 0.864553,0.24701 1.276244,0 5.310821,-0.86455 4.034578,-0.86455 7.575125,-1.68793 3.581717,-0.86456 3.746394,-0.86456 0.699876,0 1.399753,0.57637 0.69987,0.5352 0.69987,1.31742 0,0.61753 -0.94689,1.35858 -1.399748,1.11156 -8.192659,2.71716 -6.792912,1.56443 -10.909827,1.56443 -2.881842,0 -3.499379,-2.1408 -0.576368,-2.18196 -1.070398,-13.66816 0,-0.16467 0,-0.28818 0,-0.12351 -0.04117,-0.28819 0,-0.16467 0,-0.28818 -0.452861,-10.5393 -0.452861,-14.57388 z" />
      <path id="path3765" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 124.99018,147.18986 q 0,-0.86455 0.69987,-1.23508 0.74105,-0.41169 1.27624,-0.41169 1.0704,0 1.77028,1.27625 0.74104,1.23507 1.1939,2.88184 0.45286,1.60559 0.69988,1.89378 0.5352,0.69987 0.5352,4.24042 0,3.78756 -0.61754,7.0811 -0.61754,3.25236 -1.6056,5.51666 -0.98806,2.26431 -2.30547,4.07575 -1.27624,1.81144 -2.59366,2.92301 -1.31741,1.0704 -2.67599,1.81144 -1.35858,0.69988 -2.38781,0.9469 -0.98806,0.28818 -1.72911,0.28818 -1.39975,0 -3.25236,-0.65871 -1.85261,-0.69987 -2.92301,-1.68793 -1.97612,-1.89378 -3.00535,-11.11568 -0.98806,-9.26306 -0.98806,-14.82089 0,-1.85262 0.24702,-2.59366 0.28818,-0.78221 1.23507,-1.27624 0.41169,-0.16468 0.61754,-0.16468 1.27624,0 1.64676,3.29353 0.0412,0.57637 0.16468,2.05846 0.5352,6.83408 1.6056,13.95634 1.0704,7.0811 1.77027,8.02799 l 0.0823,0.12351 q 0.0823,0.12351 0.12351,0.24701 0.0823,0.0823 0.24701,0.20585 0.16468,0.12351 0.32936,0.24701 0.20584,0.0823 0.49403,0.16468 0.32935,0.0412 0.69987,0.0412 1.44092,0 3.62289,-1.31741 2.51132,-1.48209 3.95224,-3.70523 1.44092,-2.2643 2.47015,-6.17537 0.90572,-3.3347 0.90572,-5.96953 0,-2.09963 -0.57637,-4.28159 -0.57637,-2.18197 -1.15274,-3.70523 -0.57636,-1.56442 -0.57636,-2.18196 z" />
      <path id="path3767" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:41.16915894px;font-family:Purisa;-inkscape-font-specification:'Purisa Bold';stroke-width:0.42884538" d="m 135.89993,153.4064 q 0,-2.42898 0.6587,-3.49938 0.65871,-1.11156 1.48209,-1.11156 0.32936,0 1.39975,-0.5352 1.11157,-0.5352 2.47015,-1.15274 1.39976,-0.65871 3.82874,-1.19391 2.47015,-0.53519 5.22848,-0.53519 4.32276,0 4.32276,1.64676 0,1.11157 -4.44627,1.77028 -3.58172,0.53519 -6.54589,1.48209 -2.96418,0.94689 -3.91108,1.77027 -0.53519,0.49403 -0.53519,1.31741 0,0.0823 0.20584,2.09963 0.20585,2.01729 0.45286,4.19925 0.24702,2.18197 0.32936,2.47015 1.02922,-0.45286 5.14614,-1.31741 4.15809,-0.86455 5.72251,-0.86455 0.86456,0 1.27625,0.45286 0.41169,0.45286 0.41169,0.98806 0,0.6587 -0.49403,1.0704 -0.94689,0.90572 -6.05187,2.05845 -5.10497,1.11157 -5.599,1.39976 -0.24702,0.16467 -0.24702,0.53519 0,3.00535 0.0823,4.9403 l 0.12351,2.92301 h 1.7291 q 1.93495,0 4.9403,-0.74104 3.00535,-0.74105 4.98147,-1.72911 1.39975,-0.78221 1.93495,-0.78221 0.69988,0 1.23508,0.65871 0.57636,0.6587 0.57636,1.27624 0,1.27625 -2.51132,2.59366 -2.47014,1.31741 -5.88718,2.09963 -3.37588,0.78221 -6.13421,0.78221 -3.25236,0 -3.95224,-1.19391 -0.45286,-0.78221 -0.69987,-3.49937 -0.24702,-2.71717 -0.57637,-7.82215 -0.28819,-5.14614 -0.65871,-8.85136 -0.28818,-3.45821 -0.28818,-3.70523 z" />
    </g>
  </g>
</svg>