/*
 * Copyright (C) 2018 HERE Global B.V. and its affiliate(s). All rights reserved.
 *
 * This software, including documentation, is protected by copyright controlled by
 * HERE Global B.V. All rights are reserved. Copying, including reproducing, storing,
 * adapting or translating, any or all of this material requires the prior written
 * consent of HERE Global B.V. This material also contains confidential information,
 * which may not be disclosed to others without prior written consent of HERE Global B.V.
 *
 */

package test

interface ParentInterface {

    version {
        major 0
        minor 1
    }

    typedef ParentInterface is undefined

    <** @description:
    Example method that returns a name. Should be overridden in child implementations.
    **>
    method getName {
        out {
            String output
        }
    }

    <** @description: Returns the current instance that is cast to ParentInterface type. **>
    method castToParent {
        out {
            ParentInterface self
        }
    }

     <** @description: Example attribute that represents a number. **>
     attribute Int32 luckyNumber
}

interface ChildClass extends ParentInterface {

    version {
        major 0
        minor 1
    }

    typedef ChildClass is undefined

    <** @description: Creates an instance of ChildClass. **>
    method createChildClass {
      out {
          ChildClass output
      }
    }
}

interface GrandchildClass extends ChildClass {

    version {
        major 0
        minor 1
    }

    typedef GrandchildClass is undefined

    <** @description: Creates an instance of GrandchildClass. **>
    method createGrandchildClass {
      out {
          GrandchildClass output
      }
    }

    method doSomething {
        in {
            String value
        }
    }
}

interface RootInterface {

    version {
        major 0
        minor 1
    }

    public typedef RootInterface is undefined

    method rootMethod {
        in {
            String data
        }
    }
}

interface ChildInterface extends RootInterface {

    version {
        major 0
        minor 1
    }

    method getData {
        out {
            String data
        }
    }

    public typedef ChildInterface is undefined
}

interface AnotherChildInterface extends RootInterface {

    version {
        major 0
        minor 1
    }

    method getData {
        out {
            String data
        }
    }

    public typedef AnotherChildInterface is undefined
}

interface ConcreteChild extends ChildInterface {

    version {
        major 0
        minor 1
    }

    public typedef ConcreteChild is undefined
}

interface AnotherConcreteChild extends AnotherChildInterface {

    version {
        major 0
        minor 1
    }

    public typedef AnotherConcreteChild is undefined
}

interface ConcreteGrandChild extends ConcreteChild {

    version {
        major 0
        minor 1
    }

    public typedef ConcreteGrandChild is undefined
}

interface AnotherConcreteGrandChild extends AnotherConcreteChild {

    version {
        major 0
        minor 1
    }

    public typedef AnotherConcreteGrandChild is undefined
}

interface InheritanceTestHelper {

    version {
        major 0
        minor 1
    }
    method callRootMethod {
      in {
          RootInterface.RootInterface object
          String data
      }
    }

    method createChild {
        out {
            ChildInterface.ChildInterface instance
        }
    }

    method createAnotherChild {
        out {
            AnotherChildInterface.AnotherChildInterface instance
        }
    }

    method createConcreteChild {
        out {
            ConcreteChild.ConcreteChild instance
        }
    }

    method createAnotherConcreteChild {
        out {
            AnotherConcreteChild.AnotherConcreteChild instance
        }
    }

    method createConcreteGrandChild {
        out {
            ConcreteGrandChild.ConcreteGrandChild instance
        }
    }

    method createAnotherConcreteGrandChild {
        out {
            AnotherConcreteGrandChild.AnotherConcreteGrandChild instance
        }
    }
}
