/*
 * Copyright (C) 2017 HERE Global B.V. and its affiliate(s). All rights reserved.
 *
 * This software, including documentation, is protected by copyright controlled by
 * HERE Global B.V. All rights are reserved. Copying, including reproducing, storing,
 * adapting or translating, any or all of this material requires the prior written
 * consent of HERE Global B.V. This material also contains confidential information,
 * which may not be disclosed to others without prior written consent of HERE Global B.V.
 *
 */

package test

interface StaticIntMethodsTest {

    version {
        major 0
        minor 1
    }

    // INT8 methods
    <** @description:
    Test method that takes a int8 as input and returns next integer to input as output where input
    must be less than 127
    **>
    method returnNextNumberINT8 {
        in { Int8 inputNumber }
        out { Int8 outputNumber }
    }

    <** @description:
    Test method that takes 2 Int8 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersINT8 {
        in {
            Int8 inputNumber1
            Int8 inputNumber2
        }
        out { Int8 sum }
    }

    <** @description:
    Test method that always returns 2
    **>
    method returnPrimeINT8 {
        out { Int8 firstPrime }
    }

    // UINT8 methods
    <** @description:
    Test method that takes a UInt8 as input and returns next integer to input as output where input
    must be less than 255
    **>
    method returnNextNumberUINT8 {
        in { UInt8 inputNumber }
        out { UInt8 outputNumber }
    }

    <** @description:
    Test method that takes 2 UInt8 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersUINT8 {
        in {
            UInt8 inputNumber1
            UInt8 inputNumber2
        }
        out { UInt8 sum }
    }

    <** @description:
    Test method that always returns 131
    **>
    method returnPrimeUINT8 {
        out { UInt8 prime }
    }

    // INT16 methods
    <** @description:
    Test method that takes a UInt16 as input and returns next integer to input as output where input
    must be less than 32767
    **>
    method returnNextNumberINT16 {
        in { Int16 inputNumber }
        out { Int16 outputNumber }
    }

    <** @description:
    Test method that takes 2 Int16 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersINT16 {
        in {
            Int16 inputNumber1
            Int16 inputNumber2
        }
        out { Int16 sum }
    }

    <** @description:
    Test method that always returns 257
    **>
    method returnPrimeINT16 {
        out { Int16 prime }
    }

    // UINT16 methods
    <** @description:
    Test method that takes a UInt16 as input and returns next integer to input as output where input
    must be less than 65535
    **>
    method returnNextNumberUINT16 {
        in { UInt16 inputNumber }
        out { UInt16 outputNumber }
    }

    <** @description:
    Test method that takes 2 UInt16 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersUINT16 {
        in {
            UInt16 inputNumber1
            UInt16 inputNumber2
        }
        out { UInt16 sum }
    }

    <** @description:
    Test method that always returns 32771
    **>
    method returnPrimeUINT16 {
        out { UInt16 prime }
    }

    // INT32 methods
    <** @description:
    Test method that takes a INT32 as input and returns next integer to input as output where input
    must be less than 2147483647
    **>
    method returnNextNumberINT32 {
        in { Int32 inputNumber }
        out { Int32 outputNumber }
    }

    <** @description:
    Test method that takes 2 INT32 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersINT32 {
        in {
            Int32 inputNumber1
            Int32 inputNumber2
        }
        out { Int32 sum }
    }

    <** @description:
    Test method that always returns 65537
    **>
    method returnPrimeINT32 {
        out { Int32 prime }
    }

    // UINT32 methods
    <** @description:
    Test method that takes a UINT32 as input and returns next integer to input as output where input
    must be less than 4294967295
    **>
    method returnNextNumberUINT32 {
        in { UInt32 inputNumber }
        out { UInt32 outputNumber }
    }

    <** @description:
    Test method that takes 2 UINT32 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersUINT32 {
        in {
            UInt32 inputNumber1
            UInt32 inputNumber2
        }
        out { UInt32 sum }
    }

    <** @description:
    Test method that always returns 2147483659
    **>
    method returnPrimeUINT32 {
        out { UInt32 prime }
    }

    // INT64 methods
    <** @description:
    Test method that takes a INT64 as input and returns next integer to input as output where input
    must be less than 2^63-1
    **>
    method returnNextNumberINT64 {
        in { Int64 inputNumber }
        out { Int64 outputNumber }
    }

    <** @description:
    Test method that takes 2 INT64 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersINT64 {
        in {
            Int64 inputNumber1
            Int64 inputNumber2
        }
        out { Int64 sum }
    }

    <** @description:
    Test method that always returns 4294967311
    **>
    method returnPrimeINT64 {
        out { Int64 prime }
    }

    // UINT64 methods
    <** @description:
    Test method that takes a UINT64 as input and returns next integer to input as output where input
    must be less than 2^64-1
    **>
    method returnNextNumberUINT64 {
        in { UInt64 inputNumber }
        out { UInt64 outputNumber }
    }

    <** @description:
    Test method that takes 2 UINT64 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersUINT64 {
        in {
            UInt64 inputNumber1
            UInt64 inputNumber2
        }
        out { UInt64 sum }
    }

    <** @description:
    Test method that always returns 4294967311
    **>
    method returnPrimeUINT64 {
        out { UInt64 prime }
    }
}

