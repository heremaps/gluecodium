dist: bionic
branches:
  except:
    - gh-pages
notifications:
  email:
    recipients:
      - gluecodium_team@here.com
    if: branch = master
    on_success: never # default: change
    on_failure: always # default: always
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches
    - $HOME/.gradle/wrapper
    - $HOME/.android/build-cache
install:
  - source ./scripts/install-cmake.sh
jobs:
  include:
    - name: "Build and unit tests"
      language: java
      install: skip
      script:
        - ./gradlew build

    - name: "C++ functional tests"
      language: cpp
      addons:
        apt:
          packages:
            - ninja-build
            - valgrind
      script:
        - cd examples
        - ./scripts/build-cpp --valgrind --buildGluecodium

    - name: "Android functional tests"
      dist: xenial
      language: java
      jdk: openjdk8
      env:
        - PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:$PATH
        - JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - ninja-build
      before_install:
        - export ANDROID_HOME=${HOME}/android-sdk-linux
        - export ANDROID_NDK_HOME=${ANDROID_HOME}/ndk-bundle
        - export SDK_ROOT=${ANDROID_HOME}
        - export NDK_ROOT=${ANDROID_NDK_HOME}
        - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 60
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60
      install:
        - source ./scripts/install-cmake.sh
        - ANDROID_API_LEVEL=android-28
        - ANDROID_BUILD_TOOLS_VERSION=28.0.3
        - ANDROID_CMAKE_VERSION=3.10.2.4988404
        - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip" -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        - yes | sdkmanager --licenses
        - yes | sdkmanager "platforms;${ANDROID_API_LEVEL}" > /dev/null
        - yes | sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" > /dev/null
        - yes | sdkmanager "cmake;${ANDROID_CMAKE_VERSION}" > /dev/null
      script:
        - pushd examples
        - ./scripts/build-android --hostOnly --buildGluecodium
        - popd
        - pushd functional-tests
        - ./scripts/build-android --publish
        - popd
        - pushd cmake
        - GLUECODIUM_BUILD_ENVIRONMENT=android-host cmake -P run-cmake-unit-test.cmake
        - popd

    - name: "Swift functional tests"
      language: cpp
      addons:
        apt:
          packages:
            - libcurl4
            - ninja-build
            - valgrind
      install:
        - source ./scripts/install-cmake.sh
        - SWIFT_BRANCH=swift-5.2.5-release
        - SWIFT_VERSION=swift-5.2.5-RELEASE
        - SWIFT_PLATFORM=ubuntu18.04
        - SWIFT_ARCHIVE_NAME=${SWIFT_VERSION}-${SWIFT_PLATFORM}
        - SWIFT_URL=https://swift.org/builds/${SWIFT_BRANCH}/$(echo "${SWIFT_PLATFORM}" | tr -d .)/${SWIFT_VERSION}/${SWIFT_ARCHIVE_NAME}.tar.gz
        - CMAKE_VERSION=3.15.7
        - wget -nv https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
        - tar xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz > /dev/null
        - mv cmake-${CMAKE_VERSION}-Linux-x86_64 cmake-install
        - wget -nv ${SWIFT_URL}
        - sudo tar xf ${SWIFT_ARCHIVE_NAME}.tar.gz --directory / --strip-components=1
        - sudo chmod -R o+r /usr/lib/swift/CoreFoundation
      script:
        - pushd examples
        - ./scripts/build-swift --valgrind --buildGluecodium
        - popd
        - pushd functional-tests
        - ./scripts/build-swift --valgrind --publish
        - popd

    - stage: test
      name: "Dart functional tests"
      language: cpp
      addons:
        apt:
          packages:
            - ninja-build
      before_install:
        - export PATH="${PATH}:/usr/lib/dart/bin"
      install:
        - wget -nv https://storage.googleapis.com/dart-archive/channels/stable/release/2.9.0/linux_packages/dart_2.9.0-1_amd64.deb
        - sudo apt -y install ./dart_2.9.0-1_amd64.deb
      script:
        - cd examples
        - ./scripts/build-dart --buildGluecodium
