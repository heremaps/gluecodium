# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

class Enums {
    struct ErrorStruct {
        type: InternalErrorCode
        message: String
    }

    enum SimpleEnum {
        First,
        SECOND
    }
    enum InternalErrorCode {
        ERROR_NONE,
        ERROR_FATAL = 999
    }

    typealias ExampleMap = Map<SimpleEnum, ULong>

    static fun methodWithEnumeration(input: SimpleEnum): SimpleEnum
    static fun flipEnumValue(input: InternalErrorCode): InternalErrorCode
    static fun extractEnumFromStruct(input: ErrorStruct): InternalErrorCode
    static fun createStructWithEnumInside(
        type: InternalErrorCode,
        message: String
    ): ErrorStruct
}

class EnumsInTypeCollectionInterface {
    static fun flipEnumValue(input: EnumsInTypeCollection.TCEnum): EnumsInTypeCollection.TCEnum
}

types EnumsInTypeCollection {
    enum TCEnum {
        FIRST,
        SECOND
    }
}

enum EnumStartsWithOne {
    FIRST = 1,
    SECOND
}
