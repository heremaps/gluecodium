# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

struct DeclarationOrder {
    struct MainStruct {
        structField: NestedStruct
        typeDefField: SomeTypeDef
        structArrayField: NestedStructArray
        mapField: ErrorCodeToMessageMap
        enumField: SomeEnum
    }
    struct NestedStruct {
        someField: String
    }

    enum SomeEnum {
        FOO,
        BAR = 7
    }

    typealias SomeTypeDef = Int
    typealias ErrorCodeToMessageMap = Map<Int, NestedStructArray>
    typealias NestedStructArray = List<NestedStruct>
}

struct DeclarationOrderWithFunctions {
    struct MainStructWithFunctions {
        structField: FieldStruct
        fun withParameter(input: ParameterStruct)
        fun withReturn(): ReturnStruct
        fun withThrown() throws FooBar
    }
    struct FieldStruct {
        someField: String
    }
    struct ParameterStruct {
        someField: String
    }
    struct ReturnStruct {
        someField: String
    }
    struct ThrownStruct {
        someField: String
    }
    exception FooBar(ThrownStruct)
}
