# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

types Equatable {
    @Equatable
    struct EquatableStruct {
        boolField: Boolean
        intField: Int
        longField: Long
        floatField: Float
        doubleField: Double
        stringField: String
        structField: NestedEquatableStruct
        enumField: SomeEnum
        arrayField: List<String>
        mapField: ErrorCodeToMessageMap
    }
    @Equatable
    struct EquatableNullableStruct {
        boolField: Boolean?
        intField: Int?
        uintField: UShort?
        floatField: Float?
        stringField: String?
        structField: NestedEquatableStruct?
        enumField: SomeEnum?
        arrayField: List<String>?
        mapField: ErrorCodeToMessageMap?
    }
    @Equatable
    struct NestedEquatableStruct {
        fooField: String
    }

    enum SomeEnum {
        FOO,
        BAR
    }

    typealias ErrorCodeToMessageMap = Map<Int, String>
}

@Equatable
class EquatableClass {
    @Equatable
    struct EquatableStruct {
        intField: Int
        stringField: String
        nestedEquatableInstance: EquatableClass
        nestedPointerEquatableInstance: PointerEquatableClass
    }
}

class PointerEquatableClass {
}

@Equatable
@Cpp(Accessors)
struct EquatableStructWithAccessors {
    fooField: String
}

@Equatable
struct EquatableStructWithInternalFields {
    publicField: String
    internal internalField: String
    internal internalListField: List<String>
    internal internalMapField: Map<String, String>
    internal internalSetField: Set<String>
}

@Equatable
interface EquatableInterface {
}
