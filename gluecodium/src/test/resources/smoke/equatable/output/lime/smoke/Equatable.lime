package smoke

struct Equatable {
    typealias ErrorCodeToMessageMap = Map<Int, String>

    enum SomeEnum {
        FOO,
        BAR
    }

    @Equatable
    struct EquatableStruct {
        boolField: Boolean
        intField: Int
        longField: Long
        floatField: Float
        doubleField: Double
        stringField: String
        structField: NestedEquatableStruct
        enumField: SomeEnum
        arrayField: List<String>
        mapField: ErrorCodeToMessageMap
    }
    @Equatable
    struct EquatableNullableStruct {
        boolField: Boolean?
        intField: Int?
        uintField: UShort?
        floatField: Float?
        stringField: String?
        structField: NestedEquatableStruct?
        enumField: SomeEnum?
        arrayField: List<String>?
        mapField: ErrorCodeToMessageMap?
    }
    @Equatable
    struct NestedEquatableStruct {
        fooField: String
    }
}
