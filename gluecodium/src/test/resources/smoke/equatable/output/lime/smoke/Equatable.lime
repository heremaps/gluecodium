package smoke

struct Equatable {
    typealias ErrorCodeToMessageMap = Map<Int, String>
    enum SomeEnum {
        FOO,
        BAR
    }
    @Equatable
    struct EquatableStruct {
        boolField: Boolean
        intField: Int
        longField: Long
        floatField: Float
        doubleField: Double
        stringField: String
        structField: NestedEquatableStruct
        enumField: SomeEnum
        arrayField: List<String>
        mapField: ErrorCodeToMessageMap
    }
    @Equatable
    struct EquatableNullableStruct {
        boolField: Boolean? = null
        intField: Int? = null
        uintField: UShort? = null
        floatField: Float? = null
        stringField: String? = null
        structField: NestedEquatableStruct? = null
        enumField: SomeEnum? = null
        arrayField: List<String>? = null
        mapField: ErrorCodeToMessageMap? = null
    }
    @Equatable
    struct NestedEquatableStruct {
        fooField: String
    }
}
