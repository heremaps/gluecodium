# Copyright (C) 2016-2022 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

@Skip(Java, Swift)
enum AsyncErrorCode {
    VALUE1 = 1
}

@Skip(Java, Swift)
exception Async(AsyncErrorCode)

@Skip(Java, Swift)
exception ThrowMe(String)

@Skip(Java, Swift)
class AsyncClass {
    @Async
    fun asyncVoid(input: Boolean)
    @Async
    fun asyncVoidThrows(input: Boolean) throws Async
    @Async
    fun asyncInt(input: Boolean): Int
    @Async
    fun asyncIntThrows(input: Boolean): Int throws Async
    @Async
    static fun asyncStatic(input: Boolean)
}

@Skip(Java, Swift)
struct AsyncStruct {
    stringField: String

    @Async
    fun asyncVoid(input: Boolean)
    @Async
    fun asyncVoidThrows(input: Boolean) throws ThrowMe
    @Async
    fun asyncInt(input: Boolean): Int
    @Async
    fun asyncIntThrows(input: Boolean): Int throws ThrowMe
    @Async
    static fun asyncStatic(input: Boolean)
}

@Skip(Java, Swift)
class AsyncRenamed {
    @Async
    @Cpp("callDispose")
    fun dispose()
}

class AsyncWithSkips {
    @Skip(Swift) @Skip(Dart)
    static fun make_shared_instance(androidContext: String)

    @Skip(Java) @Async
    static fun make_shared_instance()
}
