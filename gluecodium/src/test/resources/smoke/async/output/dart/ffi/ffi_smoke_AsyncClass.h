#pragma once
#include "Export.h"
#include "OpaqueHandle.h"
#include "dart_api_dl.h"
#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_asyncVoid__asyncVoid__resultLambda_Boolean(FfiOpaqueHandle _self, int32_t _isolate_id, FfiOpaqueHandle Resultlambda, bool input);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_asyncVoidThrows__asyncVoidThrows__resultLambda_asyncVoidThrows__errorLambda_Boolean(FfiOpaqueHandle _self, int32_t _isolate_id, FfiOpaqueHandle Resultlambda, FfiOpaqueHandle Errorlambda, bool input);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_asyncInt__asyncInt__resultLambda_Boolean(FfiOpaqueHandle _self, int32_t _isolate_id, FfiOpaqueHandle Resultlambda, bool input);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_asyncIntThrows__asyncIntThrows__resultLambda_asyncIntThrows__errorLambda_Boolean(FfiOpaqueHandle _self, int32_t _isolate_id, FfiOpaqueHandle Resultlambda, FfiOpaqueHandle Errorlambda, bool input);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_asyncStatic__asyncStatic__resultLambda_Boolean(int32_t _isolate_id, FfiOpaqueHandle Resultlambda, bool input);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidResultlambda_call(FfiOpaqueHandle _self, int32_t _isolate_id);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidthrowsResultlambda_call(FfiOpaqueHandle _self, int32_t _isolate_id);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidthrowsErrorlambda_call__AsyncErrorCode(FfiOpaqueHandle _self, int32_t _isolate_id, uint32_t p0);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintResultlambda_call__Int(FfiOpaqueHandle _self, int32_t _isolate_id, int32_t p0);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintthrowsResultlambda_call__Int(FfiOpaqueHandle _self, int32_t _isolate_id, int32_t p0);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintthrowsErrorlambda_call__AsyncErrorCode(FfiOpaqueHandle _self, int32_t _isolate_id, uint32_t p0);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncstaticResultlambda_call(FfiOpaqueHandle _self, int32_t _isolate_id);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_register_finalizer(FfiOpaqueHandle ffi_handle, int32_t isolate_id, Dart_Handle dart_handle);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_copy_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidResultlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidthrowsResultlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncvoidthrowsErrorlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintResultlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintthrowsResultlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncintthrowsErrorlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT void library_smoke_AsyncClass_AsyncstaticResultlambda_release_handle(FfiOpaqueHandle handle);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncvoidResultlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncvoidthrowsResultlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncvoidthrowsErrorlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncintResultlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncintthrowsResultlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncintthrowsErrorlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
_GLUECODIUM_FFI_EXPORT FfiOpaqueHandle library_smoke_AsyncClass_AsyncstaticResultlambda_create_proxy(uint64_t token, int32_t isolate_id, Dart_Handle dart_handle, FfiOpaqueHandle f0);
#ifdef __cplusplus
}
#endif
