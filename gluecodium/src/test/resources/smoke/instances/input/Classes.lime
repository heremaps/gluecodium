# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

class SimpleClass {
    fun getStringValue(): String
    fun useSimpleClass(input: SimpleClass): SimpleClass
}

struct StructWithClass {
    classInstance: SimpleClass
}

@Cpp(ExternalType = "foo/Bar.h", ExternalName = "::fire::Baz")
class ExternalClass {
    struct some_Struct {
        some_Field: String
    }

    enum some_Enum {
        some_Value
    }

    fun some_Method(some_Parameter: Byte)

    property some_Property: String {
        @Cpp(ExternalName = "get_Me")
        get
    }
}

@Cpp(ExternalType = "include/ExternalTypes.h")
class ClassWithOverloads {
    fun oneOverloadNotExposed(): String
    fun allOverloadsExposed(input: String): String
    @Dart("allOverloadsExposedList")
    fun allOverloadsExposed(inputList: List<String>): String
    @Dart("allOverloadsExposedTwo")
    fun allOverloadsExposed(inputString: String, inputBool: Boolean): String
}
