package smoke
class DurationMilliseconds {
    typealias DurationTypeAlias = @Cpp(Type = "std::chrono::milliseconds") Duration
    typealias DurationList = List<@Cpp(Type = "std::chrono::milliseconds") Duration>
    typealias DurationSet = Set<@Cpp(Type = "std::chrono::milliseconds") Duration>
    typealias DurationMap = Map<String, @Cpp(Type = "std::chrono::milliseconds") Duration>
    typealias DurationKeyMap = Map<@Cpp(Type = "std::chrono::milliseconds") Duration, String>
    struct DurationStruct {
        durationField: @Cpp(Type = "std::chrono::milliseconds") Duration
    }
    fun durationFunction(
        input: @Cpp(Type = "std::chrono::milliseconds") Duration
    ): @Cpp(Type = "std::chrono::milliseconds") Duration
    fun nullableDurationFunction(
        input: @Cpp(Type = "std::chrono::milliseconds") Duration?
    ): @Cpp(Type = "std::chrono::milliseconds") Duration?
    property durationProperty: @Cpp(Type = "std::chrono::milliseconds") Duration
}
