# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

open class Constructors {
    enum ErrorEnum {
        NONE,
        CRASHED
    }

    @Dart(Default)
    constructor create()
    @Dart("fromOther")
    constructor create(other: Constructors)
    @Dart("fromMulti")
    constructor create(
        foo: String,
        bar: ULong
    )
    @Dart("fromString")
    constructor create(input: String) throws ConstructorExploded
    @Dart("fromList")
    constructor create(input: List<Double>)
    @Java(Skip) @Swift(Skip)
    constructor create(input: ULong)

    exception ConstructorExploded(ErrorEnum)
}

class ChildConstructors : Constructors {
    @Java(Name = "createNoArgsChild")
    constructor create()
    @Java(Name = "createCopyFromParent")
    constructor create(other: Constructors)
}

@Java(Skip) @Swift(Skip)
class SingleNamelessConstructor {
    constructor create()
}

@Java(Skip) @Swift(Skip)
class SingleNamedConstructor {
    @Dart("fooBar")
    constructor create()
}
