# Copyright (C) 2016-2020 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

@Java(Skip) @Swift(Skip) @Dart(Skip)
class MultipleAttributesCpp {
    @Cpp(Attribute = "Foo")
    @Cpp(Attribute = "Bar")
    fun noLists2()
    @Cpp(Attribute = "Foo")
    @Cpp(Attribute = "Bar")
    @Cpp(Attribute = "Baz")
    fun noLists3()
    @Cpp(Attribute = ["Foo", "Bar"])
    @Cpp(Attribute = "Baz")
    fun listFirst()
    @Cpp(Attribute = "Foo")
    @Cpp(Attribute = ["Bar", "Baz"])
    fun listSecond()
    @Cpp(Attribute = ["Foo", "Bar"])
    @Cpp(Attribute = ["Baz", "Fizz"])
    fun twoLists()
}

@Swift(Skip) @Dart(Skip)
class MultipleAttributesJava {
    @Java(Attribute = "Foo")
    @Java(Attribute = "Bar")
    fun noLists2()
    @Java(Attribute = "Foo")
    @Java(Attribute = "Bar")
    @Java(Attribute = "Baz")
    fun noLists3()
    @Java(Attribute = ["Foo", "Bar"])
    @Java(Attribute = "Baz")
    fun listFirst()
    @Java(Attribute = "Foo")
    @Java(Attribute = ["Bar", "Baz"])
    fun listSecond()
    @Java(Attribute = ["Foo", "Bar"])
    @Java(Attribute = ["Baz", "Fizz"])
    fun twoLists()
}

@Java(Skip) @Dart(Skip)
class MultipleAttributesSwift {
    @Swift(Attribute = "Foo")
    @Swift(Attribute = "Bar")
    fun noLists2()
    @Swift(Attribute = "Foo")
    @Swift(Attribute = "Bar")
    @Swift(Attribute = "Baz")
    fun noLists3()
    @Swift(Attribute = ["Foo", "Bar"])
    @Swift(Attribute = "Baz")
    fun listFirst()
    @Swift(Attribute = "Foo")
    @Swift(Attribute = ["Bar", "Baz"])
    fun listSecond()
    @Swift(Attribute = ["Foo", "Bar"])
    @Swift(Attribute = ["Baz", "Fizz"])
    fun twoLists()
}

@Java(Skip) @Swift(Skip)
class MultipleAttributesDart {
    @Dart(Attribute = "Foo")
    @Dart(Attribute = "Bar")
    fun noLists2()
    @Dart(Attribute = "Foo")
    @Dart(Attribute = "Bar")
    @Dart(Attribute = "Baz")
    fun noLists3()
    @Dart(Attribute = ["Foo", "Bar"])
    @Dart(Attribute = "Baz")
    fun listFirst()
    @Dart(Attribute = "Foo")
    @Dart(Attribute = ["Bar", "Baz"])
    fun listSecond()
    @Dart(Attribute = ["Foo", "Bar"])
    @Dart(Attribute = ["Baz", "Fizz"])
    fun twoLists()
}
