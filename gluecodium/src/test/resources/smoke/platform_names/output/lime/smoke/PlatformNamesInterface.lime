package smoke
import smoke.PlatformNames.BasicStruct
@Cpp("fooInterface")
@Java("barInterface")
@Swift("bazInterface")
@Dart("weeInterface")
class PlatformNamesInterface {
    @Cpp("FooMethod")
    @Java("BarMethod")
    @Swift("BazMethod")
    @Dart("WeeMethod")
    fun basicMethod(
        @Cpp("FooParameter")
        @Java("BarParameter")
        @Swift("BazParameter", Label = "_")
        @Dart("WeeParameter")
        basicParameter: String
    ): BasicStruct
    @Cpp("make")
    @Java("make")
    @Swift("make")
    @Dart("make")
    constructor create(
        @Cpp("makeParameter")
        @Java("makeParameter")
        @Swift("makeParameter", Label = "_")
        @Dart("makeParameter")
        basicParameter: String
    )
    @Swift("BAZ_PROPERTY")
    @Dart("WEE_PROPERTY")
    property basicProperty: UInt {
        @Cpp("GET_FOO_PROPERTY")
        @Java("GET_BAR_PROPERTY")
        get
        @Cpp("SET_FOO_PROPERTY")
        @Java("SET_BAR_PROPERTY")
        set
    }
}
