package smoke
@Deprecated("Unfortunately, this interface is deprecated.")
interface DeprecationCommentsOnly {
    @Deprecated("Unfortunately, this typedef is deprecated.")
    typealias Usefulness = Boolean
    @Deprecated("Unfortunately, this enum is deprecated.")
    enum SomeEnum {
        @Deprecated("Unfortunately, this item is deprecated.")
        Useless
    }
    @Deprecated("Unfortunately, this struct is deprecated.")
    struct SomeStruct {
        @Deprecated("Unfortunately, this field is deprecated.")
        someField: Usefulness = false
    }
    @Deprecated("Unfortunately, this constant is deprecated.")
    const VeryUseful: Usefulness = true
    // @param[input] Very useful input parameter
    // @return Usefulness of the input
    @Deprecated("Unfortunately, this method is deprecated.")
    fun someMethodWithAllComments(
        input: String
    ): Usefulness
    @Deprecated("Unfortunately, this property is deprecated.")
    property SomeProperty: Usefulness {
        @Deprecated("Unfortunately, this property's getter is deprecated.")
        get
        @Deprecated("Unfortunately, this property's setter is deprecated.")
        set
    }
}
