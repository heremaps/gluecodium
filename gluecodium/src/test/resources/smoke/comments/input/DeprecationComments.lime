# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

// This is some very useful interface.
@Deprecated("Unfortunately, this interface is deprecated. Use [comments] instead.")
interface DeprecationComments {
    // This is some very useful struct.
    @Deprecated("Unfortunately, this struct is deprecated. Use [comments.SomeStruct] instead.")
    struct SomeStruct {
        // How useful this struct is.
        @Deprecated("Unfortunately, this field is deprecated.\nUse [comments.SomeStruct.someField] instead.")
        someField: Usefulness
    }
    // This is some very useful enum.
    @Deprecated("Unfortunately, this enum is deprecated. Use [comments.SomeEnum] instead.")
    enum SomeEnum {
        // Not quite useful
        @Deprecated("Unfortunately, this item is deprecated.\nUse [comments.SomeEnum.Useless] instead.")
        Useless
    }
    @Deprecated("Unfortunately, this exception is deprecated, please use [comments.SomethingWrong] instead.")
    exception SomethingWrong(SomeEnum)
    // This is some very useful typedef.
    @Deprecated("Unfortunately, this typedef is deprecated. Use [comments.Usefulness] instead.")
    typealias Usefulness = Boolean
    // This is some very useful constant.
    @Deprecated("Unfortunately, this constant is deprecated. Use [comments.VeryUseful] instead.")
    const VeryUseful: Usefulness = true
    // This is some very useful method that measures the usefulness of its input.
    @Deprecated("Unfortunately, this method is deprecated.\nUse [comments.someMethodWithAllComments] instead.")
    fun someMethodWithAllComments(
        // Very useful input parameter
        input: String
    ): /* Usefulness of the input */ Usefulness
    // Some very useful property.
    @Deprecated("Unfortunately, this property is deprecated.\nUse [comments.SomeProperty] instead.")
    property SomeProperty: Usefulness {
        // Gets some very useful property.
        @Deprecated("Unfortunately, this property's getter is deprecated.\nUse [comments.SomeProperty.get] instead.")
        get
        // Sets some very useful property.
        @Deprecated("Unfortunately, this property's setter is deprecated.\nUse [comments.SomeProperty.set] instead.")
        set
    }
    // Describes the property but not accessors.
    // @get Gets the property but not accessors.
    @Deprecated("Will be removed in v3.2.1.")
    property PropertyButNotAccessors: String
}

@Deprecated("Unfortunately, this interface is deprecated.")
interface DeprecationCommentsOnly {
    @Deprecated("Unfortunately, this struct is deprecated.")
    struct SomeStruct {
        @Deprecated("Unfortunately, this field is deprecated.")
        someField: Usefulness
    }
    @Deprecated("Unfortunately, this enum is deprecated.")
    enum SomeEnum {
        @Deprecated("Unfortunately, this item is deprecated.")
        Useless
    }
    @Deprecated("Unfortunately, this typedef is deprecated.")
    typealias Usefulness = Boolean
    @Deprecated("Unfortunately, this constant is deprecated.")
    const VeryUseful: Usefulness = true
    @Deprecated("Unfortunately, this method is deprecated.")
    fun someMethodWithAllComments(
        // Very useful input parameter
        input: String
    ): /* Usefulness of the input */ Usefulness
    @Deprecated("Unfortunately, this property is deprecated.")
    property SomeProperty: Usefulness {
        @Deprecated("Unfortunately, this property's getter is deprecated.")
        get
        @Deprecated("Unfortunately, this property's setter is deprecated.")
        set
    }
}

@Deprecated
struct DeprecatedWithNoMessage {
    `field`: String
}
