package smoke
class DefaultValues {
    typealias LongTypedef = Long
    typealias BooleanTypedef = Boolean
    typealias StringTypedef = String
    typealias FloatArray = List<Float>
    typealias IdToStringMap = Map<UInt, String>
    typealias StringSet = Set<String>
    struct StructWithDefaults {
        intField: Int = 42
        uintField: UInt = 4294967295
        floatField: Float = 3.14
        doubleField: Double = -1.4142
        boolField: Boolean = true
        stringField: String = "\\Jonny \"Magic\" Smith\n"
    }
    struct NullableStructWithDefaults {
        intField: Int? = null
        uintField: UInt? = null
        floatField: Float? = null
        boolField: Boolean? = null
        stringField: String? = null
    }
    struct StructWithSpecialDefaults {
        floatNanField: Float = NaN
        floatInfinityField: Float = Infinity
        floatNegativeInfinityField: Float = -Infinity
        doubleNanField: Double = NaN
        doubleInfinityField: Double = Infinity
        doubleNegativeInfinityField: Double = -Infinity
    }
    struct StructWithEmptyDefaults {
        intsField: List<Int> = []
        floatsField: FloatArray = []
        mapField: IdToStringMap = []
        structField: StructWithDefaults = {}
        setTypeField: StringSet = []
    }
    struct StructWithTypedefDefaults {
        longField: LongTypedef = 42
        boolField: BooleanTypedef = true
        stringField: StringTypedef = "\\Jonny \"Magic\" Smith\n"
    }
    static fun processStructWithDefaults(
        input: StructWithDefaults
    ): StructWithDefaults
}
