{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>cbridge/CopyrightHeader}}

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "cbridge/include/BaseHandle.h"
#include "cbridge/include/Export.h"
{{#includes}}{{>common/Include}}{{/includes}}

{{#lists}}
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_handle();
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_copy_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT uint64_t {{resolveName}}_count(_baseRef handle);
_GLUECODIUM_C_EXPORT {{resolveName elementType}} {{resolveName}}_get(_baseRef handle, uint64_t index);
_GLUECODIUM_C_EXPORT void {{resolveName}}_append(_baseRef handle, {{resolveName elementType}} item);

_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_optional_handle();
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_optional_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_unwrap_optional_handle(_baseRef handle);

{{/lists}}
{{#maps}}
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_handle();
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_iterator(_baseRef handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_iterator_release_handle(_baseRef iterator_handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_put(_baseRef handle, {{resolveName keyType}} key, {{resolveName valueType}} value);
_GLUECODIUM_C_EXPORT bool {{resolveName}}_iterator_is_valid(_baseRef handle, _baseRef iterator_handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_iterator_increment(_baseRef iterator_handle);
_GLUECODIUM_C_EXPORT {{resolveName keyType}} {{resolveName}}_iterator_key(_baseRef iterator_handle);
_GLUECODIUM_C_EXPORT {{resolveName valueType}} {{resolveName}}_iterator_value(_baseRef iterator_handle);

_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_optional_handle();
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_optional_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_unwrap_optional_handle(_baseRef handle);

{{/maps}}
{{#sets}}
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_handle();
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_insert(_baseRef handle, {{resolveName elementType}} value);
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_iterator(_baseRef handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_iterator_release_handle(_baseRef iterator_handle);
_GLUECODIUM_C_EXPORT bool {{resolveName}}_iterator_is_valid(_baseRef handle, _baseRef iterator_handle);
_GLUECODIUM_C_EXPORT void {{resolveName}}_iterator_increment(_baseRef iterator_handle);
_GLUECODIUM_C_EXPORT {{resolveName elementType}} {{resolveName}}_iterator_get(_baseRef iterator_handle);

_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_create_optional_handle();
_GLUECODIUM_C_EXPORT void {{resolveName}}_release_optional_handle(_baseRef handle);
_GLUECODIUM_C_EXPORT _baseRef {{resolveName}}_unwrap_optional_handle(_baseRef handle);

{{/sets}}

#ifdef __cplusplus
}
#endif
