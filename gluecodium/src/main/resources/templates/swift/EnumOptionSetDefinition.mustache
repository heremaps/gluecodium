{{!!
  !
  ! Copyright (C) 2016-2022 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>swift/TypeVisibility}} struct {{resolveName}}{{#if external.swift.converter}}_internal{{/if}} : OptionSet, CaseIterable, Codable {
    public let rawValue: UInt32

    public init(rawValue: UInt32) {
        self.rawValue = rawValue
    }

{{#set enum=this}}{{#enumerators}}
{{prefixPartial "optionSetEnumerator" "    "}}
{{/enumerators}}{{/set}}

    {{resolveName "visibility"}} static var allCases: [{{resolveName}}] {
        return [{{#enumerators}}.{{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/enumerators}}]
    }
}
{{!!

}}{{+optionSetEnumerator}}
{{>swift/SwiftComment}}{{>swift/SwiftAttributes}}
{{resolveName "visibility"}} static let {{resolveName}} = {{!!
}}{{#if isAlias}}{{resolveName explicitValue}}{{/if}}{{!!
}}{{#unless isAlias}}{{resolveName enum}}(rawValue: {{resolveName explicitValue}}){{/unless}}
{{/optionSetEnumerator}}
