{{!!
  !
  ! Copyright (C) 2016-2025 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
interface {{resolveName}} {{!!
}}{{#if this.parents}}: {{#parents}}{{resolveName this "" "ref"}}{{#if iter.hasNext}}, {{/if}}{{/parents}} {{/if}}{
{{>kotlin/KotlinContainerContents}}

{{#set isInterface=true classElement=this}}
{{#functions}}
{{#unless isStatic}}
{{prefixPartial "kotlin/KotlinFunction" "    "}}
{{/unless}}
{{/functions}}
{{/set}}

{{#set isInterface=true}}
{{#properties}}
{{#unless isStatic}}
{{prefixPartial "kotlin/KotlinProperty" "    "}}
{{/unless}}
{{/properties}}
{{/set}}

{{#ifPredicate "needsCompanionObject"}}
    companion object {
{{#constants}}{{prefixPartial "kotlin/KotlinConstant" "        "}}
{{/constants}}
{{#ifPredicate "hasStaticFunctions"}}
{{#set isInterface=true interface=this}}
{{#functions}}
{{#if isStatic}}
{{prefixPartial "kotlin/KotlinFunction" "        "}}{{prefixPartial "redirectToImpl" "    " skipFirstLine=true}}
{{/if}}
{{/functions}}
{{/set}}
{{/ifPredicate}}
{{#ifPredicate "hasStaticProperties"}}
{{#set isInterface=true interface=this}}
{{#properties}}
{{#set property=this}}
{{#property}}
{{#if isStatic}}
{{#if setter}}        @JvmStatic var{{/if}}{{!!
}}{{#unless setter}}        @JvmStatic val{{/unless}}{{!!
}} {{resolveName}}: {{resolveName typeRef}}
            get() = {{resolveName interface}}Impl.{{resolveName property}}{{#setter}}
            set(value) {
                {{resolveName interface}}Impl.{{resolveName property}} = value
            }{{/setter}}
{{/if}}
{{/property}}
{{/set}}
{{/properties}}
{{/set}}
{{/ifPredicate}}
    }
{{/ifPredicate}}{{!!

}}{{+redirectToImpl}} {
        {{#unless returnType.isVoid}}return {{/unless}}{{resolveName interface}}Impl.{{resolveName}}({{!!
        }}{{#parameters}}{{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/parameters}})
    }
{{/redirectToImpl}}
}
