{{!!
  !
  ! Copyright (C) 2016-2020 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#if copyrightHeader}}{{prefix copyrightHeader "// "}}{{/if}}

{{#imports}}
import 'package:{{libraryName}}/src/{{filePath}}.dart'{{#asAlias}} as {{.}}{{/asAlias}};
{{/imports}}

{{#model}}
int {{resolveName "Ffi"}}_toFfi({{resolveName}} value) {
  switch (value) {
{{#set parent=this}}{{#enumerators}}
  case {{resolveName parent}}.{{resolveName}}:
    return {{>enumeratorValue}};
  break;
{{/enumerators}}{{/set}}
  default:
    throw StateError("Invalid enum value $value for {{resolveName}} enum.");
  }
}

{{resolveName}} {{resolveName "Ffi"}}_fromFfi(int handle) {
  switch (handle) {
{{#set parent=this}}{{#enumerators}}
  case {{>enumeratorValue}}:
    return {{resolveName parent}}.{{resolveName}};
  break;
{{/enumerators}}{{/set}}
  default:
    throw StateError("Invalid numeric value $handle for {{resolveName}} enum.");
  }
}

void {{resolveName "Ffi"}}_releaseFfiHandle(int handle) {}
{{/model}}{{!!

}}{{+enumeratorValue}}{{#value}}{{.}}{{/value}}{{^value}}{{iter.position}}{{/value}}{{/enumeratorValue}}
