{{!!
  !
  ! Copyright (C) 2016-2021 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#set container=this}}{{#eval "optimizedLists" path}}{{#this}}{{#set elementType=elementType.type.actualType}}
final _{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_get_size = {{!!
}}__lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint64 Function(Pointer<Void>),
    int Function(Pointer<Void>)
  >('{{libraryName}}_{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_get_size'));
final _{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_get = {{!!
}}__lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    {{resolveName elementType "FfiApiTypes"}} Function(Pointer<Void>, Uint64),
    {{resolveName elementType "FfiDartTypes"}} Function(Pointer<Void>, int)
  >('{{libraryName}}_{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_get'));
final _{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_release_handle = {{!!
}}__lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('{{libraryName}}_{{resolveName container "Ffi"}}_{{resolveName elementType "Ffi"}}LazyList_release_handle'));
{{/set}}{{/this}}{{/eval}}{{/set}}
