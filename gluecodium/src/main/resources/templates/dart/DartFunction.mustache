{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>dart/DartFunctionSignature}}{{#unless this.attributes.async}}{{>dart/DartFunctionBody}}{{/unless}}{{!!

}}{{#if this.attributes.async}} {
  final $completer = Completer<{{resolveName returnType}}>();
  _{{resolveName}}__async({{#if addThat}}{{#unless isStatic}}$that, {{/unless}}{{/if}}
    ({{#unless returnType.isVoid}}{{resolveName returnType}} $result{{/unless}}) {{!!
    }}=> $completer.complete({{#unless returnType.isVoid}}$result{{/unless}}){{#if this.thrownType}},
    ({{resolveName exception.errorType}} $error) => $completer.completeError({{resolveName exception}}($error)){{/if}}{{#if parameters}},
    {{#parameters}}{{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/parameters}}{{/if}}
  );
  return $completer.future;
}

{{#eval "asyncHelpers.helpers" fullName}}{{>dart/DartFunction}}{{/eval}}{{!!
}}{{/if}}
