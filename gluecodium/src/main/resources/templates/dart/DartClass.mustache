{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
final __release_handle = __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('{{resolveName "Ffi"}}_release_handle');

{{>dart/DartDocumentation}}
class {{resolveName visibility}}{{resolveName}} {{!!
}}{{#if parent}}{{#isEq type parent.type.type}}extends{{/isEq}}{{!!
}}{{#isNoEq type parent.type.type}}implements{{/isNoEq}} {{resolveName parent}} {{/if}}{
  final Pointer<Void> _handle;
  {{resolveName}}._(this._handle);

  void release() => __release_handle(_handle);

{{#constants}}
{{prefixPartial "dart/DartConstant" "  "}}
{{/constants}}
{{#set parent=this}}{{#constructors}}
{{prefixPartial "dart/DartFunctionDocs" "  "}}
{{prefixPartial "dartConstructor" "  "}}
{{/constructors}}
{{#functions}}
{{prefixPartial "dart/DartFunctionDocs" "  "}}
{{prefixPartial "dart/DartFunction" "  "}}
{{/functions}}{{/set}}
{{#properties}}
{{prefixPartial "dart/DartProperty" "  "}}
{{/properties}}
}

Pointer<Void> {{resolveName "Ffi"}}_toFfi({{resolveName}} value) =>
  value != null ? value._handle : Pointer<Void>.fromAddress(0);

{{resolveName}} {{resolveName "Ffi"}}_fromFfi(Pointer<Void> handle) =>
  handle.address != 0 ? {{resolveName}}._(handle) : null;

void {{resolveName "Ffi"}}_releaseFfiHandle(Pointer<Void> handle) {}

{{#enumerations}}
{{>dart/DartEnumeration}}
{{/enumerations}}
{{#exceptions}}
{{>dart/DartException}}
{{/exceptions}}
{{#structs}}
{{>dart/DartStruct}}
{{/structs}}{{!!

}}{{+dartConstructor}}{{resolveName visibility}}{{resolveName parent}}({{!!
}}{{#parameters}}{{resolveName typeRef}} {{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/parameters}}) : {{!!
}}this._(_{{resolveName}}({{#parameters}}{{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/parameters}}));
{{/dartConstructor}}
