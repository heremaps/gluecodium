{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#if copyrightHeader}}{{prefix copyrightHeader "// "}}{{/if}}

import 'dart:ffi';
import 'package:ffi/ffi.dart';

import '_library_init.dart' as __lib;

final _create_handle = __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Utf8>),
    Pointer<Void> Function(Pointer<Utf8>)
  >('std_string_create_handle');
final _release_handle = __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('std_string_release_handle');
final _get_value = __lib.nativeLibrary.lookupFunction<
    Pointer<Utf8> Function(Pointer<Void>),
    Pointer<Utf8> Function(Pointer<Void>)
  >('std_string_get_value');

Pointer<Void> String_toFfi(String value) {
   final cValue = Utf8.toUtf8(value);
   final result = _create_handle(cValue);
   free(cValue);
   return result;
}

String String_fromFfi(Pointer<Void> handle) => Utf8.fromUtf8(_get_value(handle));

void String_releaseFfiHandle(Pointer<Void> handle) => _release_handle(handle);
