{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#unlessPredicate "skipDeclaration"}}
{{>dart/DartDocumentation}}
enum {{resolveName}}{{#if external.dart.converter}}_internal{{/if}} {
{{#enumerators}}
{{prefixPartial "dart/DartEnumerator" "    "}}
{{/enumerators}}
}
{{/unlessPredicate}}

// {{resolveName}} "private" section, not exported.

int {{resolveName "Ffi"}}_toFfi({{resolveName this "" "ref"}} value{{#if external.dart.converter}}_ext{{/if}}) {
{{#if external.dart.converter}}
  final value = {{external.dart.converter}}.convertToInternal(value_ext);
{{/if}}
  switch (value) {
{{#set parent=this}}{{#enumerators}}
  case {{resolveName parent "" "ref"}}{{#if external.dart.converter}}_internal{{/if}}.{{resolveName}}:
    return {{value}};
  break;
{{/enumerators}}{{/set}}
  default:
    throw StateError("Invalid enum value $value for {{resolveName}} enum.");
  }
}

{{resolveName this "" "ref"}} {{resolveName "Ffi"}}_fromFfi(int handle) {
  switch (handle) {
{{#set parent=this}}{{#enumerators}}
  case {{value}}:
{{#if external.dart.converter}}
    return {{external.dart.converter}}.convertFromInternal({{resolveName parent}}_internal.{{resolveName}});
{{/if}}{{#unless external.dart.converter}}
    return {{resolveName parent "" "ref"}}.{{resolveName}};
{{/unless}}
  break;
{{/enumerators}}{{/set}}
  default:
    throw StateError("Invalid numeric value $handle for {{resolveName}} enum.");
  }
}

void {{resolveName "Ffi"}}_releaseFfiHandle(int handle) {}

{{>dart/DartNullableTypeConversion}}

// End of {{resolveName}} "private" section.
