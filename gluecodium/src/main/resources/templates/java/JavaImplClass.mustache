{{!!
  !
  ! Copyright (C) 2016-2020 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#if forceStatic}}
/**
 * @exclude
 */
static {{/if}}class {{resolveName}}Impl extends NativeBase implements {{resolveName}} {
{{#unless stubs}}
    protected {{resolveName}}Impl(final long nativeHandle, final Object dummy) {
        super(nativeHandle, new Disposer() {
            @Override
            public void disposeNative(long handle) {
                disposeNativeHandle(handle);
            }
        });
    }

    private static native void disposeNativeHandle(long nativeHandle);

{{#if attributes.equatable attributes.pointerEquatable logic="or"}}
    @Override
    public native boolean equals(Object rhs);

    @Override
    public native int hashCode();

{{/if}}{{/unless}}

{{#set isImpl=true interface=this}}{{#functions}}{{#unless attributes.java.skip}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/unless}}{{/functions}}
{{#interface.properties}}{{#unless attributes.java.skip}}{{#set isCached=attributes.cached}}
{{#getter}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/getter}}
{{#setter}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/setter}}
{{/set}}{{/unless}}{{/interface.properties}}

{{#if parent}}{{#set override=true}}
{{#interface.inheritedFunctions}}{{#unless attributes.java.skip}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/unless}}{{/interface.inheritedFunctions}}
{{#interface.inheritedProperties}}{{#unless attributes.java.skip}}{{#set isCached=attributes.cached}}
{{#getter}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/getter}}
{{#setter}}
{{prefixPartial "java/JavaFunction" "    "}}
{{/setter}}
{{/set}}{{/unless}}{{/interface.inheritedProperties}}
{{/set}}{{/if}}{{/set}}
}
