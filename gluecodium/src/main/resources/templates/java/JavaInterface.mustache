{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>java/JavaDocComment}}{{>java/JavaAttributes}}
{{resolveName visibility}}interface {{resolveName}} {{!!
}}{{#if this.parents}}extends {{#parents}}{{resolveName this "" "ref"}}{{#if iter.hasNext}}, {{/if}}{{/parents}} {{/if}}{
{{#constants}}{{prefixPartial "java/JavaConstant" "    "}}
{{/constants}}
{{>java/JavaContainerContents}}
{{#set isInterface=true}}
{{#functions}}{{#unless isStatic}}
{{prefixPartial "java/JavaMethodSignature" "    "}};
{{/unless}}{{/functions}}
{{#properties}}{{#unless isStatic}}{{#set property=this}}
{{#set isGetter=true}}{{#getter}}
{{prefixPartial "java/JavaMethodSignature" "    "}};
{{/getter}}{{/set}}
{{#setter}}
{{prefixPartial "java/JavaMethodSignature" "    "}};
{{/setter}}
{{/set}}{{/unless}}{{/properties}}
{{/set}}{{!!

}}{{#ifPredicate "hasStaticFunctions"}}
{{#set isInterface=true interface=this}}
{{#functions}}{{#if isStatic}}
{{prefixPartial "java/JavaMethodSignature" "    "}}{{prefixPartial "redirectToImpl" "    " skipFirstLine=true}}
{{/if}}{{/functions}}
{{#properties}}{{#if isStatic}}{{#set property=this}}
{{#set isGetter=true}}{{#getter}}
{{prefixPartial "java/JavaMethodSignature" "    "}}{{prefixPartial "redirectToImpl" "    " skipFirstLine=true}}
{{/getter}}{{/set}}
{{#setter}}
{{prefixPartial "java/JavaMethodSignature" "    "}}{{prefixPartial "redirectToImpl" "    " skipFirstLine=true}}
{{/setter}}
{{/set}}{{/if}}{{/properties}}
{{/set}}
{{/ifPredicate}}
}{{!!

}}{{+redirectToImpl}} {
    {{#unless returnType.isVoid}}return {{/unless}}{{resolveName interface}}Impl.{{resolveName}}({{!!
    }}{{#parameters}}{{resolveName}}{{#if iter.hasNext}}, {{/if}}{{/parameters}});
}
{{/redirectToImpl}}
