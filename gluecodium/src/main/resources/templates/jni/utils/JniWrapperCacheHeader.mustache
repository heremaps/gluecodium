{{!!
  !
  ! Copyright (C) 2016-2020 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>java/CopyrightHeader}}

#pragma once

#include "JniReference.h"

{{#internalNamespace}}
namespace {{.}}
{
{{/internalNamespace}}
namespace jni
{

class JNIEXPORT JniWrapperCache final
{
public:
    template<class T>
    static void cache_wrapper(JNIEnv* jenv, const std::shared_ptr<T>& nobj, const JniReference<jobject>& jobj) {
        cache_wrapper_impl(jenv, nobj.get(), jobj);
    }

    template<class T>
    static JniReference<jobject> get_cached_wrapper(JNIEnv* jenv, const std::shared_ptr<T>& nobj) {
        return get_cached_wrapper_impl(jenv, nobj.get());
    }

    template<class T>
    static void remove_cached_wrapper(JNIEnv* jenv, const std::shared_ptr<T>& nobj) {
        remove_cached_wrapper_impl(jenv, nobj.get());
    }

private:
    static void cache_wrapper_impl(JNIEnv* jenv, const void* obj_ptr, const JniReference<jobject>& jobj);
    static JniReference<jobject> get_cached_wrapper_impl(JNIEnv* jenv, const void* obj_ptr);
    static void remove_cached_wrapper_impl(JNIEnv* jenv, const void* obj_ptr);
};

} // namespace jni
{{#internalNamespace}}
} // namespace {{.}}
{{/internalNamespace}}
