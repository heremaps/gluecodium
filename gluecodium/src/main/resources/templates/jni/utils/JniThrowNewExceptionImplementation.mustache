{{!!
  !
  ! Copyright (C) 2016-2024 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>java/CopyrightHeader}}

#include "JniReference.h"

{{#internalNamespace}}
namespace {{.}}
{
{{/internalNamespace}}
namespace jni
{

void throw_new_exception(JNIEnv * const jni_env,
                         const char* const exception_class,
                         const char* const exception_text) noexcept
{
    const auto exceptionClass = find_class(jni_env, exception_class);
    jni_env->ThrowNew(exceptionClass.get(), exception_text);
}

void throw_new_out_of_memory_exception(JNIEnv * const jni_env) noexcept
{
    throw_new_exception(jni_env, "java/lang/OutOfMemoryError", "Cannot allocate native memory.");
}

void throw_new_null_pointer_exception(JNIEnv * const jni_env) noexcept\
{
    throw_new_exception(jni_env, "java/lang/NullPointerException", "");
}

void throw_new_index_out_of_bounds_exception(JNIEnv * const jni_env) noexcept
{
    throw_new_exception(jni_env, "java/lang/IndexOutOfBoundsException", "List index out of bounds.");
}

void throw_new_runtime_exception(JNIEnv* const jni_env, const char* const message) noexcept
{
    throw_new_exception(jni_env, "java/lang/RuntimeException", message);
}

} // namespace jni
{{#internalNamespace}}
} // namespace {{.}}
{{/internalNamespace}}
