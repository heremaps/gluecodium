{{!!
  !
  ! Copyright (C) 2016-2024 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>java/CopyrightHeader}}

#include "JniExceptionThrower.h"

{{#internalNamespace}}
namespace {{.}}
{
{{/internalNamespace}}
namespace jni
{

JniExceptionThrower::JniExceptionThrower(JNIEnv* jni_env) noexcept : m_jni_env(jni_env)
{
}

JniExceptionThrower::~JniExceptionThrower()
{
    if (m_exception)
    {
        m_jni_env->Throw(static_cast<jthrowable>(m_exception.release()));
    }
}

void JniExceptionThrower::register_exception(JniReference<jobject> exception) noexcept
{
    m_exception = std::move(exception);
}

} // namespace jni

{{#internalNamespace}}
} // namespace {{.}}
{{/internalNamespace}}
