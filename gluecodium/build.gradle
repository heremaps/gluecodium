/*
 * Copyright (C) 2016-2019 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

plugins {
    id "com.lazan.dependency-export" version "0.5"
}
dependencies {
    api project(":lime-runtime")
    implementation project(":lime-loader")

    compileOnly 'com.android.tools:annotations:25.3.0'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.natpryce:konfig:1.6.10.0'
    implementation 'com.vladsch.flexmark:flexmark-util:0.62.2'
    implementation 'com.vladsch.flexmark:flexmark:0.62.2'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
    implementation 'org.jetbrains:annotations:13.0'
    implementation 'org.slf4j:slf4j-api:1.7.31'
    implementation 'org.slf4j:slf4j-log4j12:1.7.31'
    implementation 'org.trimou:trimou-core:2.5.0.Final'

    testImplementation files({ project(":lime-runtime").sourceSets.test.output })
    testImplementation 'io.mockk:mockk-dsl-jvm:1.12.0'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'junit:junit:4.13.2'
}

apply plugin: 'application'
mainClassName = 'com.here.gluecodium.Gluecodium'

jar {
    manifest {
        attributes('Main-Class': 'com.here.gluecodium.Gluecodium',
                   'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '))
    }
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.8.4'
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            limit {
                counter = 'LINE'
                minimum = 0.90
            }
        }
    }
}
jacocoTestReport {
    reports {
        csv.enabled true
        html.enabled true
        xml.enabled true

        csv.destination file("${buildDir}/reports/coverage/coverageReport.csv")
        html.destination file("${buildDir}/reports/coverage/html")
        xml.destination file("${buildDir}/reports/coverage/coverageReport.xml")
    }
}

apply from: "$rootDir/gradle/spotless.gradle"
spotless {
    format 'cpp', {
        target project.fileTree(project.projectDir) {
            include '**/*.h', '**/*.cpp'
            exclude '**/build', '**/test/resources'
        }
        licenseHeaderFile rootProject.file('config/spotless/here_cpp.license'),
                '(#pragma|#include)'
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'swift', {
        target project.fileTree(project.projectDir) {
            include '**/*.swift'
            exclude '**/build', '**/test/resources'
        }
        licenseHeaderFile rootProject.file('config/spotless/here_cpp.license'),
                '(import|class|public class|protocol|///)'
        trimTrailingWhitespace()
        endWithNewline()
    }
}

project.ext.longName = 'Gluecodium command-line tool'
apply from: "$rootDir/gradle/publishing.gradle"

apply plugin: "com.lazan.dependency-export"
mavenDependencyExport {
    configuration 'runtime'
}
