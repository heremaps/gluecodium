# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

class SetType {
    enum SomeEnum {
        OFF,
        ON
    }
    typealias IntSet = Set<Int>
    typealias StringSet = Set<String>
    typealias EnumSet = Set<SomeEnum>

    @Equatable
    struct EquatableStruct {
        id: String
    }
    typealias StructSet = Set<EquatableStruct>
    typealias ClassSet = Set<SomeEquatableClass>
    typealias PointerEquatableSet = Set<SomePointerEquatableClass>

    static fun stringSetRoundTrip(
        input: StringSet
    ): StringSet
    static fun enumSetRoundTrip(
        input: EnumSet
    ): EnumSet
    static fun nullableIntSetRoundTrip(
        input: IntSet?
    ): IntSet?
    static fun structSetRoundTrip(
        input: StructSet
    ): StructSet
    static fun classSetRoundTrip(
        input: ClassSet
    ): ClassSet
    static fun pointerEquatableSetRoundTrip(
        input: PointerEquatableSet
    ): PointerEquatableSet
}

@Equatable
class SomeEquatableClass {
    constructor create(
        id: String
    )
    property id: String { get }
}

@PointerEquatable
class SomePointerEquatableClass {
    constructor create(
        id: String
    )
    property id: String { get }
}
