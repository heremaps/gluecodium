# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

types Constants {
    enum StateEnum {
        OFF,
        ON
    }
    const intConstant: Int = -11
    const uintConstant: UInt = 4294967295
    const floatConstant: Float = 2.71
    const doubleConstant: Double = -3.14
    const stringConstant: String = "Foo bar"
    const enumConstant: StateEnum = StateEnum.ON

    const floatNan: Float = NaN
    const floatInfinity: Float = Infinity
    const floatNegativeInfinity: Float = -Infinity
    const doubleNan: Double = NaN
    const doubleInfinity: Double = Infinity
    const doubleNegativeInfinity: Double = -Infinity
}

class ConstantsInterface {
    enum StateEnum {
        OFF,
        ON
    }
    const intConstant: Int = -11
    const uintConstant: UInt = 42
    const floatConstant: Float = 2.71
    const doubleConstant: Double = -3.14
    const stringConstant: String = "Foo bar"
    const enumConstant: StateEnum = StateEnum.ON
}

class StructConstants {
    @Equatable
    struct SomeStruct {
        stringField: String
        floatField: Float
    }
    @Equatable
    struct NestingStruct {
        structField: SomeStruct
    }
    const structConstant: SomeStruct = {"bar Buzz", 1.41}
    const nestingStructConstant: NestingStruct = {{"nonsense", -2.82}}
}

class UseTypeCollectionConstants {
    static fun getIntConstant(): Int
    static fun getUintConstant(): UInt
    static fun getFloatConstant(): Float
    static fun getDoubleConstant(): Double
    static fun getStringConstant(): String
    static fun getEnumConstant(): Constants.StateEnum
}

class UseInterfaceConstants {
    static fun getIntConstant(): Int
    static fun getUintConstant(): UInt
    static fun getFloatConstant(): Float
    static fun getDoubleConstant(): Double
    static fun getStringConstant(): String
    static fun getEnumConstant(): ConstantsInterface.StateEnum
}

class UseStructConstants {
    static fun getStructConstant(): StructConstants.SomeStruct
    static fun getNestingStructConstant(): StructConstants.NestingStruct
}
