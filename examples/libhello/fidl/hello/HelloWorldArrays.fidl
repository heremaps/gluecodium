/*
 * Copyright (C) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package hello

interface HelloWorldArrays {
    version {
        major 0
        minor 1
    }

    <** @description: Basic struct type **>
    struct ExampleStruct {
        Double value
    }

    array StringArray of String

    array StructArray of ExampleStruct

    array Int64Array of Int64


    <** @description:
    Static method which takes an array and returns an array of same type in reversed order.
    **>
    method methodWithArray {
        in {
            <** @description: Input array **>
            StringArray input
        }
        out {
            <** @description: Output array **>
            StringArray output
        }
    }

    <** @description:
    Static method which takes an array and returns an array of same type in reversed order.
    **>
    method methodWithSimpleArray {
        in {
            <** @description: Input array **>
            Int64Array input
        }
        out {
            <** @description: Output array **>
            Int64[] output
        }
    }

    <** @description:
    Static method which takes an array and returns it in reversed order using inline declarations
    **>
    method methodWithArrayInline {
        in {
            <** @description: Input array **>
            UInt32[] input
        }
        out {
            <** @description: Output array **>
            UInt32[] output
        }
    }

    <** @description:
    Static method which takes an inline array of structs and returns it in reversed order
    **>
    method methodWithStructArray {
        in {
            <** @description: Input array **>
            ExampleStruct[] input
        }
        out {
            <** @description: Output array **>
            StructArray output
        }
    }

    <** @description:
    Function takes inline array of int64 arrays and reverses elements in each dimension
    **>
    method methodWithNestedArraysInline {
        in {
            <** @description: Input array **>
            Int64Array[] input
        }
        out {
            <** @description: Output array **>
            Int64Array[] output
        }
    }
}
