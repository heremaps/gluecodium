/*
 * Copyright (C) 2016-2019 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package hello


interface Shape {

    public typedef Shape is undefined

    <** @description:
    Example method that scale shape by a factor
    **>
    method scale {
        in {
            Double factor
        }
    }
}

interface Circle extends Shape {

    public typedef Circle is undefined
}

interface Rectangle extends Shape {

    public typedef Rectangle is undefined
}

interface Square extends Rectangle {

    public typedef Square is undefined
}


interface InheritanceHelper {

    <** @description:
    Example method that creates a circle
    **>
    method createCircle {
        out {
            Circle.Circle instance
        }
    }

    <** @description:
    Example method that creates a rectangle
    **>
    method createRectangle {
        out {
            Rectangle.Rectangle instance
        }
    }

    <** @description:
    Example method that creates a square
    **>
    method createSquare {
        out {
            Square.Square instance
        }
    }

<** @description:
    This method applies scale on each of shape parameters
    **>
    method applyScaleOn {
        in {
            Double scaleFactor
            Shape.Shape[] shapes
        }
    }
}
