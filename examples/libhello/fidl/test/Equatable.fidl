/*
 * Copyright (C) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package test

typeCollection Equatable {

    struct EquatableStruct {
        Boolean boolField
        Int32 intField
        Int64 longField
        Float floatField
        Double doubleField
        String stringField
        NestedEquatableStruct structField
        SomeSomeEnum enumField
        SomeMap mapField
        String[] arrayField
    }

    struct NestedEquatableStruct {
        String fooField
    }

    enumeration SomeSomeEnum {
        FOO
        BAR
    }

    map SomeMap { Int32 to String }

    array EquatableArray of EquatableStruct
}

interface EquatableInterface {

    struct AnotherEquatableStruct {
        Int32 intField
        String stringField
    }

    method areEqual:localStruct {
        in {
            AnotherEquatableStruct lhs
            AnotherEquatableStruct rhs
        }
        out {
            Boolean result
        }
    }

    method areEqual:foreignStruct {
        in {
            Equatable.EquatableStruct lhs
            Equatable.EquatableStruct rhs
        }
        out {
            Boolean result
        }
    }
}
