/*
 * Copyright (c) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package test

interface StaticIntMethods {

    version {
        major 0
        minor 1
    }

    <** @description:
    Method that takes a int8 as input and returns next integer to input as output where input
    must be less than 127
    **>
    method returnNextNumberInt8 {
        in { Int8 inputNumber }
        out { Int8 outputNumber }
    }

    <** @description:
    Method that takes 2 Int8 as input and returns their sum as output.
    **>
    method sumTwoNumbersInt8 {
        in {
            Int8 inputNumber1
            Int8 inputNumber2
        }
        out { Int8 sum }
    }

    <** @description: Method that always returns 2 **>
    method returnPrimeInt8 {
        out { Int8 firstPrime }
    }

    <** @description:
    Method that takes a UInt8 as input and returns next integer to input as output where input
    must be less than 255
    **>
    method returnNextNumberUint8 {
        in { UInt8 inputNumber }
        out { UInt8 outputNumber }
    }

    <** @description:
    Method that takes 2 UInt8 as input and returns their sum as output.
    **>
    method sumTwoNumbersUint8 {
        in {
            UInt8 inputNumber1
            UInt8 inputNumber2
        }
        out { UInt8 sum }
    }

    <** @description: Method that always returns 131 **>
    method returnPrimeUint8 {
        out { UInt8 prime }
    }

    <** @description:
    Method that takes a UInt16 as input and returns next integer to input as output where input
    must be less than 32767
    **>
    method returnNextNumberInt16 {
        in { Int16 inputNumber }
        out { Int16 outputNumber }
    }

    <** @description:
    Method that takes 2 Int16 as input and returns their sum as output.
    **>
    method sumTwoNumbersInt16 {
        in {
            Int16 inputNumber1
            Int16 inputNumber2
        }
        out { Int16 sum }
    }

    <** @description: Method that always returns 257 **>
    method returnPrimeInt16 {
        out { Int16 prime }
    }

    <** @description:
    Method that takes a UInt16 as input and returns next integer to input as output where input
    must be less than 65535
    **>
    method returnNextNumberUint16 {
        in { UInt16 inputNumber }
        out { UInt16 outputNumber }
    }

    <** @description:
    Method that takes 2 UInt16 as input and returns their sum as output.
    **>
    method sumTwoNumbersUint16 {
        in {
            UInt16 inputNumber1
            UInt16 inputNumber2
        }
        out { UInt16 sum }
    }

    <** @description: Method that always returns 32771 **>
    method returnPrimeUint16 {
        out { UInt16 prime }
    }

    <** @description:
    Method that takes a Int32 as input and returns next integer to input as output where input
    must be less than 2147483647
    **>
    method returnNextNumberInt32 {
        in { Int32 inputNumber }
        out { Int32 outputNumber }
    }

    <** @description:
    Method that takes 2 Int32 as input and returns their sum as output.
    **>
    method sumTwoNumbersInt32 {
        in {
            Int32 inputNumber1
            Int32 inputNumber2
        }
        out { Int32 sum }
    }

    <** @description: Method that always returns 65537 **>
    method returnPrimeInt32 {
        out { Int32 prime }
    }

    <** @description:
    Method that takes a Uint32 as input and returns next integer to input as output where input
    must be less than 4294967295
    **>
    method returnNextNumberUint32 {
        in { UInt32 inputNumber }
        out { UInt32 outputNumber }
    }

    <** @description:
    Method that takes 2 Uint32 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersUint32 {
        in {
            UInt32 inputNumber1
            UInt32 inputNumber2
        }
        out { UInt32 sum }
    }

    <** @description: Method that always returns 2147483659 **>
    method returnPrimeUint32 {
        out { UInt32 prime }
    }

    <** @description:
    Method that takes a Int64 as input and returns next integer to input as output where input
    must be less than 2^63-1
    **>
    method returnNextNumberInt64 {
        in { Int64 inputNumber }
        out { Int64 outputNumber }
    }

    <** @description:
    Method that takes 2 Int64 as input and returns their sum
    as output.
    **>
    method sumTwoNumbersInt64 {
        in {
            Int64 inputNumber1
            Int64 inputNumber2
        }
        out { Int64 sum }
    }

    <** @description: Method that always returns 4294967311 **>
    method returnPrimeInt64 {
        out { Int64 prime }
    }

    <** @description:
    Method that takes a Uint64 as input and returns next integer to input as output where input
    must be less than 2^64-1
    **>
    method returnNextNumberUint64 {
        in { UInt64 inputNumber }
        out { UInt64 outputNumber }
    }

    <** @description:
    Method that takes 2 Uint64 as input and returns their sum as output.
    **>
    method sumTwoNumbersUint64 {
        in {
            UInt64 inputNumber1
            UInt64 inputNumber2
        }
        out { UInt64 sum }
    }

    <** @description: Method that always returns 4294967311 **>
    method returnPrimeUint64 {
        out { UInt64 prime }
    }
}

