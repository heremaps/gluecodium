/*
 * Copyright (c) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package test

typeCollection ComplexListenerTypes {
    version {
        major 0
        minor 1
    }

    struct Point3D {
        Double x
        Double y
        Double z
    }

    struct NamedPoint3D {
      String name
      Point3D pt
    }

    enumeration TrajectoryQuality {
        TRAJECTORY_POOR
        TRAJECTORY_AVERAGE
        TRAJECTORY_GOOD = 999
    }

    array Trajectory of NamedPoint3D
}

interface DistanceMetric {

  method getLength {
      in {
              ComplexListenerTypes.Trajectory input
      }
      out {
              Double lengthOfTrajectory
      }
  }

  public typedef DistanceMetric is undefined
}

interface ComplexListener {

    version {
        major 0
        minor 1
    }

    public typedef ComplexListener is undefined

        method onTrajectoryCompleted {
            in {
                DistanceMetric.DistanceMetric distanceMetric
                ComplexListenerTypes.Trajectory trajectory
                ComplexListenerTypes.TrajectoryQuality quality
                ByteBuffer image
            }
        }
}

interface ComplexNotifier {

    version {
        major 0
        minor 1
    }

    public typedef ComplexNotifier is undefined

    method trajectoryCompleted {
        in {
            ComplexListenerTypes.Trajectory trajectory
            ComplexListenerTypes.TrajectoryQuality quality
            ByteBuffer image
            ComplexListener.ComplexListener listener
        }
    }
}

interface ComplexListenerFactory {

    method createComplexNotifier {
        out {
            ComplexNotifier.ComplexNotifier complexNotifier
        }
    }

    method createDistanceMetric {
            out {
                DistanceMetric.DistanceMetric theMetric
            }
        }
}

