/*
 * Copyright (C) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package test

interface ListenerWithReturn {

    public typedef ListenerWithReturn is undefined

    public struct MessageStruct {
        String message
    }

    public enumeration MessageEnum {
        NO
        YES
    }

    public map MessageMap { Int8 to String }

    method getMessage {
        out {
            String message
        }
    }

    method getPackedMessage {
        out {
            MessagePackage.MessagePackage message
        }
    }

    method getBoxedMessage {
        out {
            MessageBox.MessageBox message
        }
    }

    method getStructuredMessage {
        out {
            MessageStruct message
        }
    }

    method getEnumeratedMessage {
        out {
            MessageEnum message
        }
    }

    method getArrayedMessage {
        out {
            String[] message
        }
    }

    method getMappedMessage {
        out {
            MessageMap message
        }
    }

    method getBufferedMessage {
        out {
            ByteBuffer message
        }
    }
}

interface MessagePackage {

  public typedef MessagePackage is undefined

  method unpackMessage {
      out {
          String message
      }
  }
}

interface MessageBox {

  public typedef MessageBox is undefined

  method unpackMessage {
      out {
          String message
      }
  }

  method create {
      out {
          MessageBox result
      }
  }
}

interface MessageDelivery {
    public typedef MessageDelivery is undefined

    method getMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getPackedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getBoxedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getStructuredMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getEnumeratedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getArrayedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getMappedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method getBufferedMessage {
        in {
            ListenerWithReturn.ListenerWithReturn envelope
        }
        out {
            String message
        }
    }

    method createMe {
        out {
            MessageDelivery newInstance
        }
    }
}
