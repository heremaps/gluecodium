#!/bin/bash -e
#
# Script to generate source code from HelloWorld FIDL files for every platform and configure
# them in the correct directories structure.
#

GENIUM_VERSION="${GENIUM_VERSION:-+}"
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

. "${SCRIPT_DIR}/inc.functions"

# Generate and configure HelloWorld for Cpp
BUILD_DIR=${PWD}/build-cpp
[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}

pushd ${BUILD_DIR}
    safe cmake \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DHELLO_APIGEN_GENIUM_GENERATOR=cpp \
        -DHELLO_APIGEN_GENIUM_VERSION=${GENIUM_VERSION} \
        -DHELLO_BUILD_IOS_APP=OFF \
        -G Ninja \
        ..
popd

# Generate and configure HelloWorld for Swift
BUILD_DIR=${PWD}/build-swift
[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}

CWD=${PWD}
pushd ${BUILD_DIR}
    safe cmake \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DHELLO_APIGEN_GENIUM_GENERATOR=swift \
        -DHELLO_APIGEN_GENIUM_VERSION=${GENIUM_VERSION} \
        -DHELLO_SWIFT_TESTS=${CWD}/platforms/ios/Tests \
        -G Ninja \
        ..
popd

# Generate and configure HelloWorld for Android
[ $NDK_ROOT ] || die "NDK_ROOT environment variable is mandatory (NDK can be installed from within Android Studio)"

BUILD_DIR=${PWD}/build-android-x86
[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}

pushd ${BUILD_DIR}
    safe cmake \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_SYSTEM_VERSION=21 \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DHELLO_APIGEN_GENIUM_GENERATOR=android \
        -DHELLO_APIGEN_GENIUM_VERSION=${GENIUM_VERSION} \
        -DHELLO_BUILD_IOS_APP=OFF \
        -DCMAKE_ANDROID_NDK=$NDK_ROOT \
        -DCMAKE_ANDROID_STL_TYPE=gnustl_static \
        -DCMAKE_SYSTEM_NAME=Android \
        -G Ninja \
        ..
popd
