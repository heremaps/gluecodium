{{>java/CopyrightHeader}}

#pragma once

#include <jni.h>

#include <cstdint>
#include <string>
#include <vector>

namespace here
{
namespace internal
{
// ------------------- JNI to C++ conversion functions ---------------------------------------------

/**
 * Converts a JNI jstring to a std string.
 */
void convert_from_jni( JNIEnv* env, const jobject jvalue, std::string& nresult );

/**
 * Converts a jbyteArray to a vector of bytes
 */
void convert_from_jni( JNIEnv* env, const jbyteArray& jvalue, std::vector< uint8_t >& nresult );

// -------------------- C++ to JNI conversion functions --------------------------------------------

/**
 * Converts a std string to a JNI jstring
 */
jstring convert_to_jni( JNIEnv* env, const std::string& nvalue );

/**
 * Converts a vector of bytes to a jbyteArray, the name of this method differs from
 * other convert_to_jni functions to avoid collisions on overload resolution
 * (would conflict with function templates defined in ArrayConversion.h).
 */
jbyteArray convert_to_jni_array( JNIEnv* env, const std::vector< uint8_t >& nvalue );

}  // internal

}  // here
