{{#if type.isInstance}}
  {{type.cppName}} {{name}};
    if (_jenv->IsInstanceOf(j{{name}}, _jenv->FindClass(NATIVE_BASE))) {
        if (j{{name}} != nullptr) {
            auto long_ptr_{{name}} = get_long_field(_jenv, _jenv->GetObjectClass(j{{name}}), j{{name}}, "nativeHandle");
            {{name}} = *reinterpret_cast<{{type.cppName}}*> (long_ptr_{{name}});
        }
    } else {
      ::createCppProxy<>( _jenv, j{{name}}, {{name}});
    }
{{/if}}
{{#unless type.isInstance}}
{{#if type.isComplex}}
  {{type.cppName}} {{name}};
    here::internal::convert_from_jni( _jenv, j{{name}}, {{name}} );
{{/if}}
{{#unless type.isComplex}}
  {{type.cppName}} {{name}} = j{{name}};
{{/unless}}
{{/unless}}