{{>java/CopyrightHeader}}

#pragma once

#include <jni.h>
{{#includes}}
{{>common/Include}}
{{/includes}}

#ifdef __cplusplus
extern "C" {
#endif

{{#cppNameSpaces}}
namespace {{.}} {

{{/cppNameSpaces}}

class {{cppName}}CppProxy : public here::internal::CppProxyBase, public {{cppName}} {

public:

    {{cppName}}CppProxy( JNIEnv* _jenv, jobject _jobj, jint _jHashCode );

{{#parentMethods}}
    {{>jni/ReturnType}} {{cppMethodName}}( {{joinPartial parameters "jni/CppProxyMethodParameter" ", "}} ){{#if isConst}} const{{/if}} override;
{{/parentMethods}}
{{#methods}}
    {{>jni/ReturnType}} {{cppMethodName}}( {{joinPartial parameters "jni/CppProxyMethodParameter" ", "}} ){{#if isConst}} const{{/if}} override;
{{/methods}}
};

{{#cppNameSpaces}}
}
{{/cppNameSpaces}}

#ifdef __cplusplus
}
#endif