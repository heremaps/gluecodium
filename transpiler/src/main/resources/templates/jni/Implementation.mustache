{{#if includes}}
{{>java/CopyrightHeader}}
{{#includes}}
{{>common/Include}}
{{/includes}}
#include "android/jni/InstanceConversion.h"
#include "android/jni/StructConversion.h"
#include "android/jni/ProxyConversion.h"
#include "android/jni/EnumConversion.h"
#include "android/jni/ArrayConversionUtils.h"

extern "C" {

{{#methods}}
{{#returnType}}{{name}}{{/returnType}}{{^returnType}}void{{/returnType}}
{{>jni/FunctionSignature}}

{
{{#parameters}}
  {{>jni/ParameterConversion}}
{{/parameters}}
{{#unless isStatic}}
    auto pointerAsLong = get_long_field(_jenv, _jenv->GetObjectClass(_jinstance), _jinstance, "nativeHandle");
    auto pInstanceSharedPointer = reinterpret_cast<std::shared_ptr<{{>jni/FullyQualifiedCppName}}>*> (pointerAsLong);
{{/unless}}
{{>jni/ReturnTypeConversion}}
}

{{/methods}}
void
Java_{{#javaPackages}}{{.}}_{{/javaPackages}}{{javaName}}_disposeNativeHandle(JNIEnv* _jenv, jobject _jinstance, jlong _jpointerRef)
{
    delete reinterpret_cast<std::shared_ptr<::{{#cppNameSpaces}}{{.}}::{{/cppNameSpaces}}{{cppName}}>*> (_jpointerRef);
}
}
{{/if}}
