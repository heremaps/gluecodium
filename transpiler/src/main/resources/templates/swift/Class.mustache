{{#isInterface}}{{>ClassWithProtocol}}{{/isInterface}}
{{^isInterface}}{{>ClassWithoutProtocol}}{{/isInterface}}{{!!



}}{{+ClassWithoutProtocol}}

{{#if cInstanceRef}}
internal func getRef(_ ref: {{name}}) -> RefHolder<{{cInstanceRef}}> {
    return RefHolder<{{cInstanceRef}}>(ref.c_instance)
}
{{/if}}
{{#comment}}{{>swift/Comment}}{{/comment}}{{!!
}}{{>swift/ClassHeader}}{{!!

}}{{#typedefs}}
{{prefixPartial 'swift/Typedefs' '    '}}
{{/typedefs}}{{!!

}}{{>CommonClassParts}}
}
{{/ClassWithoutProtocol}}{{!!



}}{{+ClassWithProtocol}}
{{>swift/GetReference}}

{{#comment}}{{>swift/Comment}}{{/comment}}{{!!
}}public protocol {{name}} {
{{#typedefs}}{{prefixPartial 'swift/Typedefs' '    '}}
{{/typedefs}}
{{#properties}}
    var {{name}}: {{type}} { get {{^readonly}}set {{/readonly}}}
{{/properties}}
{{#methods}}{{prefixPartial 'swift/MethodSignature' '    '}}
{{/methods}}
}

{{>swift/ClassHeader}}

{{>CommonClassParts}}
}
{{/ClassWithProtocol}}{{!!



}}{{+CommonClassParts}}{{!!
}}{{#properties}}
{{prefixPartial 'swift/Property' '    '}}
{{/properties}}{{!!

}}{{prefixPartial 'swift/Constructor' '    '}}{{!!

}}{{#enums}}
{{prefixPartial 'swift/Enum' '    '}}
{{/enums}}{{!!

}}{{#structs}}
{{prefixPartial 'swift/Struct' '    '}}
{{/structs}}{{!!

}}{{#methods}}
{{prefixPartial 'swift/Method' '    '}}
{{/methods}}{{!!
}}{{/CommonClassParts}}
