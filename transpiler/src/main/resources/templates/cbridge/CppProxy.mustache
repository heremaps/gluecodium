class {{name}}Proxy : public {{selfType.name}}::element_type, public CachedProxyBase<{{name}}Proxy> {
public:
    using function_table_t = {{functionTableName}};

    {{name}}Proxy({{functionTableName}}&& functions)
     : mFunctions(std::move(functions))
    {
    }

    virtual ~{{name}}Proxy() {
        mFunctions.release(mFunctions.swift_pointer);
    }

    {{#each inheritedFunctions functions}}
    {{#if selfParameter}}
    {{returnType}} {{functionName}}({{joinPartial parameters "baseApiParameter" ", "}}) override {
        {{>returnConversion}}
    }
    {{/if}}
    {{/each}}

private:
    function_table_t mFunctions;
};

_baseRef {{name}}_createProxy({{functionTableName}} functionTable) {
    auto proxy = {{name}}Proxy::get_proxy(std::move(functionTable));
    if (proxy) {
        return reinterpret_cast<_baseRef>( new {{selfType}}(std::move(proxy)) );
    } else {
        return 0;
    }
}

const void* {{name}}_get_swift_object_from_cache(_baseRef handle) {
    return {{name}}Proxy::get_swift_object(get_pointer<{{selfType}}>(handle)->get());
}

{{+baseApiParameter}}{{#switch mappedType.typeCategory.toString}}{{!!
    }}{{#case "BUILTIN_SIMPLE"}}{{mappedType}}{{/case}}{{!!
    }}{{#case "ENUM"}}const {{mappedType}}{{/case}}{{!!
    }}{{#default}}const {{mappedType}}&{{/default}}{{!!
}}{{/switch}} {{name}}{{/baseApiParameter}}
{{+swiftParameter}}{{#switch mappedType.typeCategory.toString}}{{!!
    }}{{#case "BUILTIN_SIMPLE"}}{{name}}{{/case}}{{!!
    }}{{#case "BUILTIN_STRING"}}std_string_create({{name}}.c_str()){{/case}}{{!!
    }}{{#case "BUILTIN_BYTEBUFFER"}}{{name}}.data(), {{name}}.size(){{/case}}{{!!
    }}{{#case "CLASS" break=false}}{{/case}}{{!!
    }}{{#case "ARRAY" break=false}}{{/case}}{{!!
    }}{{#case "MAP" break=false}}{{/case}}{{!!
    }}{{#case "STRUCT"}}reinterpret_cast<_baseRef>( new {{mappedType}}({{name}}) ){{/case}}{{!!
    }}{{#case "ENUM"}}static_cast<uint32_t>({{name}}){{/case}}{{!!
    }}{{#default}}{{name}}{{/default}}{{!!
}}{{/switch}}{{/swiftParameter}}
{{+returnConversion}}{{#switch returnType.typeCategory.toString}}{{!!
    }}{{#case "BUILTIN_SIMPLE"}}return {{>swiftDelegateCall}};{{/case}}{{!!
    }}{{#case "BUILTIN_BYTEBUFFER" break=false}}{{/case}}{{!!
    }}{{#case "BUILTIN_STRING" break=false}}{{/case}}{{!!
    }}{{#case "MAP" break=false}}{{/case}}{{!!
    }}{{#case "CLASS" break=false}}{{/case}}{{!!
    }}{{#case "STRUCT"}}auto _return_value_ptr = get_pointer<{{returnType}}>({{>swiftDelegateCall}});
        auto _return_value(*_return_value_ptr);
        delete _return_value_ptr;
        return _return_value;
    {{/case}}{{!!
    }}{{#default}}{{>swiftDelegateCall}};{{/default}}{{!!
}}{{/switch}}
{{/returnConversion}}
{{+swiftDelegateCall}}mFunctions.{{name}}(mFunctions.swift_pointer{{#if parameters}}, {{/if}}{{joinPartial parameters "swiftParameter" ", "}}){{/swiftDelegateCall}}
