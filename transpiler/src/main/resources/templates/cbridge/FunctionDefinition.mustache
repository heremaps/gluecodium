{{+delegateConversion}}{{#switch mappedType.typeCategory.toString}}{{!!
    }}{{#case "BUILTIN_BYTEBUFFER"}}std::vector<uint8_t>({{name}}_ptr, {{name}}_ptr + {{name}}_size){{/case}}{{!!
    }}{{#case "BUILTIN_STRING"}}std::string({{name}}){{/case}}{{!!
    }}{{#case "STRUCT"}}*get_pointer({{name}}){{/case}}{{!!
    }}{{#case "CLASS"}}*get_pointer({{name}}){{/case}}{{!!
    }}{{#case "ENUM"}}static_cast<{{mappedType.name}}>({{name}}){{/case}}{{!!
    }}{{#case "ARRAY"}}*get_pointer({{name}}){{/case}}{{!!
    }}{{#default}}{{name}}{{/default}}{{!!
}}{{/switch}}{{/delegateConversion}}
{{+callBaseApi}}{{^selfParameter}}{{delegateCall}}{{/selfParameter}}{{#selfParameter}}get_pointer({{name}})->get()->{{functionName}}{{/selfParameter}}({{joinPartial parameters "delegateConversion" ", "}}){{/callBaseApi}}
{{!Remove once APIGEN-701 is done and replace with direct callBaseApi}}
{{+callBaseApiErrorHack}}{{#if hasError}}{{#isEq returnType.name "void"}}(void){{/isEq}}{{/if}}{{>callBaseApi}}{{#if hasError}}{{#isNotEq returnType.name "void"}}.get_result(){{/isNotEq}}{{/if}}{{/callBaseApiErrorHack}}
{{>cbridge/FunctionSignature}} {
{{#switch returnType.typeCategory.toString}}
    {{#case "BUILTIN_SIMPLE"}}return {{>callBaseApiErrorHack}};{{/case}}{{!!
    }}{{#case "ENUM"}}return static_cast<{{returnType.functionReturnType}}>({{>callBaseApiErrorHack}});{{/case}}{{!!
    }}{{#case "ARRAY"}}return {new {{returnType.arrayBaseApi}}({{>callBaseApiErrorHack}})};{{/case}}{{!!
    }}{{#default}}return {new {{returnType.name}}({{>callBaseApiErrorHack}})};{{/default}}
{{/switch}}
}
