#!/bin/bash

FRANCA_VERSION=0.11.1
FRANCA_ZIP=site_franca_${FRANCA_VERSION}.201705031527.zip 

ARTIFACTORY_URL=example.com
MAVEN_REPO="gradle-plugins-release-local"
MAVEN_REPO_PATH_PREFIX="org/franca"
TMP_DIR=$(mktemp -d)

#TODO:
user=autodevo-bot
pass=CookieJar001!

pushd ${TMP_DIR}

curl -L -s https://github.com/franca/franca/releases/download/v${FRANCA_VERSION}/${FRANCA_ZIP} -o ${FRANCA_ZIP}
unzip ${FRANCA_ZIP} > /dev/null

find features/ plugins/ -type f | while read f; do
    # Split away 'org.franca' from the file name, will be part of artifact path
    name_and_version="$(basename "$f" | cut -d"." -f3-)"
    # Split the above at '_'
    repo_name="$(echo "$name_and_version" | cut -d"_" -f1 | sed -e "s|\.|-|g")"
    repo_version="$(echo "$name_and_version" | cut -d"_" -f2)"
    # Drop the .jar ending (will be added later again)
    repo_version=${repo_version%.jar}

    sha1=$(openssl sha1 "$f" | cut -d" " -f2)  # We have no sha1sum on Mac OS
    sha1="${sha1:0:40}"

    # Compute artifact destination that can be consumed by Gradle's maven plugin
    dest="${ARTIFACTORY_URL}/${MAVEN_REPO}/${MAVEN_REPO_PATH_PREFIX}/${repo_name}/${repo_version}/${repo_name}-${repo_version}.jar"

    # Checksum upload to test if the artifact is already present
    status=$(curl -k -u $user:$pass -X PUT -H "X-Checksum-Deploy:true" -H "X-Checksum-Sha1:$sha1" \
    --write-out %{http_code} --silent --output /dev/null "${dest}")

    # Either upload or output a status message
    if [ ${status} -eq 404 ] ; then
        echo "Uploading '$f' (cs=${sha1}) to '${dest}'"
        curl -k -u $user:$pass -H "X-Checksum-Sha1:$sha1" -T "$f" "${dest}"
    else
        echo "Already exists: ${dest}"
    fi
done

popd
