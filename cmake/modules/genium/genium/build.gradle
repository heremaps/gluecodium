/*
 * Copyright (C) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */
import java.util.regex.Matcher
import java.util.regex.Pattern

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'application'

dependencies {
    runtime "com.here.genium:genium:$version"
}

mainClassName = 'com.here.genium.Genium'
run {
    if (System.getProperty("exec.args") != null) {
        List<String> splitArgs = new ArrayList<String>()
        Matcher matcher = Pattern
               .compile("\\s*(([^\"']\\S*)|[\"'](.+?)[\"'])\\s*")
               .matcher(System.getProperty('exec.args'))
        while (matcher.find()) {
            splitArgs.add(matcher.group(2) == null
               ? matcher.group(3)
               : matcher.group(2))
        }
        args splitArgs
    }
}

class TimingsListener implements TaskExecutionListener, BuildListener {
    private long startTime
    private timings = []

    @Override
    void beforeExecute(Task task) {
        startTime = System.currentTimeMillis()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = System.currentTimeMillis() - startTime
        timings.add([ms, task.path])
        startTime = System.currentTimeMillis()
    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task timings:"
        for (timing in timings) {
            printf "%7s ms  %s\n", timing
        }
    }

    @Override
    void buildStarted(Gradle gradle) {}

    @Override
    void projectsEvaluated(Gradle gradle) {}

    @Override
    void projectsLoaded(Gradle gradle) {}

    @Override
    void settingsEvaluated(Settings settings) {}
}

gradle.addListener new TimingsListener()
