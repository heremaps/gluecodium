/*
 * Copyright (c) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

specification GeniumExtensions {

    for interfaces {
        IsInterface: Boolean (optional, default: false);
    }

    for methods {
        Const: Boolean (optional, default: false);
        Static: Boolean (optional, default: false);
    }

    for structs {
        Serializable: Boolean (optional, default: false);
        Equatable: Boolean (optional, default: false);
        ExternalType: String (optional);
        ExternalName: String (optional);
    }

    for struct_fields {
        NotNull: Boolean (optional, default: false);
        ExternalGetter: String (optional);
        ExternalSetter: String (optional);
    }

    for enumerations {
        ExternalType: String (optional);
        ExternalName: String (optional);
    }
}

specification Defaults {
    for struct_fields {
        DefaultValue: String (optional);
    }
}

specification Visibility {

    for interfaces {
        Internal: Boolean (optional, default: false);
    }

    for attributes {
        Internal: Boolean (optional, default: false);
    }

    for methods {
        Internal: Boolean (optional, default: false);
    }

    for structs {
        Internal: Boolean (optional, default: false);
    }

    for struct_fields {
        Internal: Boolean (optional, default: false);
    }

    for enumerations {
        Internal: Boolean (optional, default: false);
    }

    for arrays {
        Internal: Boolean (optional, default: false);
    }
}
