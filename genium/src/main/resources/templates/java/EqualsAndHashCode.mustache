{{!!
  !
  ! Copyright (C) 2016-2018 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
@Override
public boolean equals(Object obj) {
    if (obj == this) return true;
    if (!(obj instanceof {{name}})) return false;
    final {{name}} other = ({{name}}) obj;
    return {{joinPartial fields "fieldEq" " &&
            " }};
}

@Override
public int hashCode() {
    int hash = 7;
{{#fields}}
    hash = 31 * hash + {{>fieldHash}};
{{/fields}}
    return hash;
}{{!!

}}{{+fieldEq}}{{!!
    }}{{#instanceOf type "JavaPrimitiveType"}}{{!!
        }}{{#switch type.name}}{{!!
        }}{{#case "float"}}Float.compare(this.{{name}}, other.{{name}}) == 0{{/case}}{{!!
        }}{{#case "double"}}Double.compare(this.{{name}}, other.{{name}}) == 0{{/case}}{{!!
        }}{{#default}}this.{{name}} == other.{{name}}{{/default}}{{!!
        }}{{/switch}}{{!!
    }}{{/instanceOf}}{{!!
    }}{{#notInstanceOf type "JavaPrimitiveType"}}java.util.Objects.equals(this.{{name}}, other.{{name}}){{/notInstanceOf}}{{!!
}}{{/fieldEq}}{{!!

}}{{+fieldHash}}{{!!
    }}{{#instanceOf type "JavaPrimitiveType"}}{{!!
        }}{{#switch type.name}}{{!!
        }}{{#case "boolean"}}(this.{{name}} ? 79 : 97){{/case}}{{!!
        }}{{#case "long"}}(int) (this.{{name}} ^ (this.{{name}} >>> 32)){{/case}}{{!!
        }}{{#case "float"}}Float.floatToIntBits(this.{{name}}){{/case}}{{!!
        }}{{#case "double"}}(int) (Double.doubleToLongBits(this.{{name}}) ^ (Double.doubleToLongBits(this.{{name}}) >>> 32)){{/case}}{{!!
        }}{{#default}}this.{{name}}{{/default}}{{!!
        }}{{/switch}}{{!!
    }}{{/instanceOf}}{{!!
    }}{{#notInstanceOf type "JavaPrimitiveType"}}(this.{{name}} != null ? this.{{name}}.hashCode() : 0){{/notInstanceOf}}{{!!
}}{{/fieldHash}}
