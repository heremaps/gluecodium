{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
private {{name}}(final Parcel in_parcel) {
{{#fields}}
{{prefixPartial "parcelRead" "    "}}
{{/fields}}
}

@Override
public int describeContents() {
    return 0;
}

@Override
public void writeToParcel(final Parcel out_parcel, final int flags) {
{{#fields}}
    out_parcel.write{{>parcelWriteSuffix}};
{{/fields}}
}{{!!

}}{{+parcelRead}}{{!!
    }}{{#instanceOf type "JavaArrayType"}}this.{{name}} = in_parcel.create{{capitalize type.type.value}}Array();{{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaTemplateType"}}this.{{name}} = new {{type.implementationType}}();
{{!!}}in_parcel.read{{capitalize type.classNames.0}}(this.{{name}}, Thread.currentThread().getContextClassLoader());{{/instanceOf}}{{!!

    }}{{#instanceOf type "JavaCustomType"}}this.{{name}} = in_parcel.readParcelable(Thread.currentThread().getContextClassLoader());{{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaEnumType"}}this.{{name}} = {{type.name}}.values()[in_parcel.readInt()];{{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaPrimitiveType"}}{{!!
        }}{{#switch type.name}}{{!!
        }}{{#case "boolean"}}this.{{name}} = in_parcel.readByte() != 0;{{/case}}{{!!
        }}{{#case "short"}}this.{{name}} = (short)in_parcel.readInt();{{/case}}{{!!
        }}{{#default}}this.{{name}} = in_parcel.read{{capitalize type.name}}();{{/default}}{{!!
        }}{{/switch}}{{!!
    }}{{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaReferenceType"}}this.{{name}} = in_parcel.read{{capitalize type.name}}();{{/instanceOf}}{{!!
}}{{/parcelRead}}{{!!

}}{{+parcelWriteSuffix}}{{!!
    }}{{#instanceOf type "JavaArrayType"}}{{capitalize type.type.value}}Array({{name}}){{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaTemplateType"}}{{capitalize type.classNames.0}}({{name}}){{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaCustomType"}}Parcelable({{name}}, 0){{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaEnumType"}}Int({{name}}.ordinal()){{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaPrimitiveType"}}{{!!
        }}{{#switch type.name}}{{!!
        }}{{#case "boolean"}}Byte((byte)({{name}} ? 1 : 0)){{/case}}{{!!
        }}{{#case "short"}}Int({{name}}){{/case}}{{!!
        }}{{#default}}{{capitalize type.name}}({{name}}){{/default}}{{!!
        }}{{/switch}}{{!!
    }}{{/instanceOf}}{{!!
    }}{{#instanceOf type "JavaReferenceType"}}{{capitalize type.name}}({{name}}){{/instanceOf}}{{!!
}}{{/parcelWriteSuffix}}