#pragma once

{{#includes}}
{{>common/Include}}
{{/includes}}

template<class T>
inline void createCppProxy(JNIEnv* env, jobject obj, ::std::shared_ptr<T>& result) {
}

{{#models}}
template<>
inline void createCppProxy(JNIEnv* env, jobject obj, ::std::shared_ptr<{{cppFullyQualifiedName}}>& result) {
    ::{{internalNamespace}}::jni::CppProxyBase::createProxy<{{cppFullyQualifiedName}}, {{cppFullyQualifiedName}}CppProxy>(env, obj, result);
}
{{/models}}