{{!!
  !
  ! Copyright (C) 2016-2018 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
    {{#exception}}
    auto nativeCallResult = {{>jni/CppMethodCall}}
    auto errorCode = nativeCallResult{{#if returnType}}.error(){{/if}};
    if ({{#if returnType}}!nativeCallResult.has_value(){{/if}}{{#unless returnType}}errorCode{{/unless}})
    {
        auto nEnumValue = static_cast<{{jniEnum.cppFullyQualifiedName}}>(errorCode.value());
        auto jEnumValue = {{internalNamespace}}::jni::convert_to_jni(_jenv, nEnumValue);
        auto exceptionClass = _jenv->FindClass("{{javaClassName}}");
        auto theConstructor = _jenv->GetMethodID(exceptionClass, "<init>", "({{jniEnum.jniTypeSignature}})V");
        auto exception = _jenv->NewObject(exceptionClass, theConstructor, jEnumValue);
        _jenv->Throw(static_cast<jthrowable>(exception));{{#if returnType}}
        _jenv->DeleteLocalRef( exceptionClass );
        return {{#if returnType.isComplex}}nullptr{{/if}}{{#unless returnType.isComplex}}nativeCallResult.safe_value(){{/unless}};{{/if}}
    }{{#if returnType}}
    auto result = nativeCallResult.safe_value();{{/if}}
    {{/exception}}
{{^exception}}    {{#if returnType}}auto result = {{/if}}{{>jni/CppMethodCall}}{{/exception}}{{#if returnType}}
    return {{#if returnType.isComplex}}{{internalNamespace}}::jni::convert_to_jni{{#if returnType.isJavaArray}}_array{{/if}}(_jenv, result){{/if}}{{#unless returnType.isComplex}}result{{/unless}};{{/if}}
