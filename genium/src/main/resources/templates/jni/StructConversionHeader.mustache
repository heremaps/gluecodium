#pragma once

{{#includes}}
{{>common/Include}}
{{/includes}}
#include <jni.h>
#include <memory>

namespace {{internalNamespace}}
{
namespace jni
{
{{#models}}{{#structs}}
{{cppStruct.fullyQualifiedName}} convert_from_jni(JNIEnv* _jenv, const JniReference<jobject>& _jinput, {{cppStruct.fullyQualifiedName}}* dummy);
std::shared_ptr<{{cppStruct.fullyQualifiedName}}> convert_from_jni(JNIEnv* _jenv, const JniReference<jobject>& _jinput, std::shared_ptr<{{cppStruct.fullyQualifiedName}}>* dummy);
JniReference<jobject> convert_to_jni(JNIEnv* _jenv, const {{cppStruct.fullyQualifiedName}}& _ninput);
JniReference<jobject> convert_to_jni(JNIEnv* _jenv, const std::shared_ptr<{{cppStruct.fullyQualifiedName}}> _ninput);
{{/structs}}{{/models}}
}
}
