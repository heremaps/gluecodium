{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{#if fields}}
internal func copyFromCType(_ handle: _baseRef) -> {{name}} {
    return {{name}}(cHandle: handle)
}
internal func moveFromCType(_ handle: _baseRef) -> {{name}} {
    defer {
        {{cPrefix}}_release_handle(handle)
    }
    return copyFromCType(handle)
}

internal func copyToCType(_ swiftType: {{name}}) -> RefHolder {
    return RefHolder(swiftType.convertToCType())
}
internal func moveToCType(_ swiftType: {{name}}) -> RefHolder {
    return RefHolder(ref: copyToCType(swiftType).ref, release: {{cPrefix}}_release_handle)
}
{{!!
Optionals
}}
internal func copyFromCType(_ handle: _baseRef) -> {{name}}? {
    guard handle != 0 else {
        return nil
    }
    let unwrappedHandle = {{cPrefix}}_unwrap_optional_handle(handle)
    return {{name}}(cHandle: unwrappedHandle) as {{name}}
}
internal func moveFromCType(_ handle: _baseRef) -> {{name}}? {
    defer {
        {{cPrefix}}_release_optional_handle(handle)
    }
    return copyFromCType(handle)
}

internal func copyToCType(_ swiftType: {{name}}?) -> RefHolder {
    guard let swiftType = swiftType else {
        return RefHolder(0)
    }
    return RefHolder({{cPrefix}}_make_optional_handle(copyToCType(swiftType).ref))
}
internal func moveToCType(_ swiftType: {{name}}?) -> RefHolder {
    return RefHolder(ref: copyToCType(swiftType).ref, release: {{cPrefix}}_release_optional_handle)
}

{{/if}}
