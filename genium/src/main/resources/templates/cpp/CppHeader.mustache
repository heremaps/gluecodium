{{!!
  !
  ! Copyright (C) 2016-2018 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>cpp/CppCommentHeader}}

#pragma once

{{#if includes}}
{{#includes}}
{{>common/Include}}
{{/includes}}

{{/if}}
{{#if forwardDeclarations}}
{{#forwardDeclarations}}
{{#namespaces}}
namespace {{.}} {
{{/namespaces}}
    class {{type}};
{{#namespaces}}
}
{{/namespaces}}
{{/forwardDeclarations}}

{{/if}}
{{#namespace}}
namespace {{.}} {

{{/namespace}}
{{#if members}}
{{#sortedMembers}}
{{#instanceOf this "CppEnum"}}{{>cpp/CppEnum}}{{/instanceOf}}
{{#instanceOf this "CppConstant"}}{{#set storageQualifier="extern"}}{{>cpp/CppConstant}}{{/set}}{{/instanceOf}}
{{#instanceOf this "CppUsing"}}{{>cpp/CppUsing}}{{/instanceOf}}
{{#instanceOf this "CppStruct"}}
{{>common/DocComment}}
{{>cpp/CppStruct}}
{{/instanceOf}}
{{/sortedMembers}}
{{#classes}}
{{>cpp/CppClass}}
{{/classes}}

{{/if}}

{{#errorEnums}}
::std::error_code make_error_code( {{.}} value ) noexcept;

{{/errorEnums}}
{{#namespace}}
}
{{/namespace}}
{{#if errorEnums}}

namespace std
{
{{#errorEnums}}
template <>
struct is_error_code_enum <{{.}}> : public std::true_type { };

{{/errorEnums}}
}
{{/if}}
