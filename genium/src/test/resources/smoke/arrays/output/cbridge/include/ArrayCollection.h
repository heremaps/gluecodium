//
//
// Automatically generated. Do not modify. Your changes will be lost.
#pragma once
#ifdef __cplusplus
extern "C" {
#endif
#include "cbridge/include/BaseHandle.h"
#include "cbridge/include/StringHandle.h"
#include "cbridge/include/smoke/cbridge_Arrays.h"
#include <stdint.h>
_baseRef arrayCollection_StringArrayArray_create_handle();
_baseRef arrayCollection_StringArrayArray_copy_handle(_baseRef handle);
void arrayCollection_StringArrayArray_release_handle(_baseRef handle);
uint64_t arrayCollection_StringArrayArray_count(_baseRef handle);
_baseRef arrayCollection_StringArrayArray_get(_baseRef handle, uint64_t index);
void arrayCollection_StringArrayArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_StringArrayArray_create_optional_handle();
void arrayCollection_StringArrayArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_StringArrayArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_BasicStructArray_create_handle();
_baseRef arrayCollection_BasicStructArray_copy_handle(_baseRef handle);
void arrayCollection_BasicStructArray_release_handle(_baseRef handle);
uint64_t arrayCollection_BasicStructArray_count(_baseRef handle);
_baseRef arrayCollection_BasicStructArray_get(_baseRef handle, uint64_t index);
void arrayCollection_BasicStructArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_BasicStructArray_create_optional_handle();
void arrayCollection_BasicStructArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_BasicStructArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_ExternalEnumArray_create_handle();
_baseRef arrayCollection_ExternalEnumArray_copy_handle(_baseRef handle);
void arrayCollection_ExternalEnumArray_release_handle(_baseRef handle);
uint64_t arrayCollection_ExternalEnumArray_count(_baseRef handle);
smoke_Arrays_ExternalEnum arrayCollection_ExternalEnumArray_get(_baseRef handle, uint64_t index);
void arrayCollection_ExternalEnumArray_append(_baseRef handle, smoke_Arrays_ExternalEnum item);
_baseRef arrayCollection_ExternalEnumArray_create_optional_handle();
void arrayCollection_ExternalEnumArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_ExternalEnumArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_UInt8Array_create_handle();
_baseRef arrayCollection_UInt8Array_copy_handle(_baseRef handle);
void arrayCollection_UInt8Array_release_handle(_baseRef handle);
uint64_t arrayCollection_UInt8Array_count(_baseRef handle);
uint8_t arrayCollection_UInt8Array_get(_baseRef handle, uint64_t index);
void arrayCollection_UInt8Array_append(_baseRef handle, uint8_t item);
_baseRef arrayCollection_UInt8Array_create_optional_handle();
void arrayCollection_UInt8Array_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_UInt8Array_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_Int32ToStringMapArray_create_handle();
_baseRef arrayCollection_Int32ToStringMapArray_copy_handle(_baseRef handle);
void arrayCollection_Int32ToStringMapArray_release_handle(_baseRef handle);
uint64_t arrayCollection_Int32ToStringMapArray_count(_baseRef handle);
_baseRef arrayCollection_Int32ToStringMapArray_get(_baseRef handle, uint64_t index);
void arrayCollection_Int32ToStringMapArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_Int32ToStringMapArray_create_optional_handle();
void arrayCollection_Int32ToStringMapArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_Int32ToStringMapArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_StringArray_create_handle();
_baseRef arrayCollection_StringArray_copy_handle(_baseRef handle);
void arrayCollection_StringArray_release_handle(_baseRef handle);
uint64_t arrayCollection_StringArray_count(_baseRef handle);
_baseRef arrayCollection_StringArray_get(_baseRef handle, uint64_t index);
void arrayCollection_StringArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_StringArray_create_optional_handle();
void arrayCollection_StringArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_StringArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_ExternalStructArray_create_handle();
_baseRef arrayCollection_ExternalStructArray_copy_handle(_baseRef handle);
void arrayCollection_ExternalStructArray_release_handle(_baseRef handle);
uint64_t arrayCollection_ExternalStructArray_count(_baseRef handle);
_baseRef arrayCollection_ExternalStructArray_get(_baseRef handle, uint64_t index);
void arrayCollection_ExternalStructArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_ExternalStructArray_create_optional_handle();
void arrayCollection_ExternalStructArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_ExternalStructArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_SomeEnumArray_create_handle();
_baseRef arrayCollection_SomeEnumArray_copy_handle(_baseRef handle);
void arrayCollection_SomeEnumArray_release_handle(_baseRef handle);
uint64_t arrayCollection_SomeEnumArray_count(_baseRef handle);
smoke_Arrays_SomeEnum arrayCollection_SomeEnumArray_get(_baseRef handle, uint64_t index);
void arrayCollection_SomeEnumArray_append(_baseRef handle, smoke_Arrays_SomeEnum item);
_baseRef arrayCollection_SomeEnumArray_create_optional_handle();
void arrayCollection_SomeEnumArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_SomeEnumArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_FancyStructArray_create_handle();
_baseRef arrayCollection_FancyStructArray_copy_handle(_baseRef handle);
void arrayCollection_FancyStructArray_release_handle(_baseRef handle);
uint64_t arrayCollection_FancyStructArray_count(_baseRef handle);
_baseRef arrayCollection_FancyStructArray_get(_baseRef handle, uint64_t index);
void arrayCollection_FancyStructArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_FancyStructArray_create_optional_handle();
void arrayCollection_FancyStructArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_FancyStructArray_unwrap_optional_handle(_baseRef handle);
_baseRef arrayCollection_UInt8ArrayArray_create_handle();
_baseRef arrayCollection_UInt8ArrayArray_copy_handle(_baseRef handle);
void arrayCollection_UInt8ArrayArray_release_handle(_baseRef handle);
uint64_t arrayCollection_UInt8ArrayArray_count(_baseRef handle);
_baseRef arrayCollection_UInt8ArrayArray_get(_baseRef handle, uint64_t index);
void arrayCollection_UInt8ArrayArray_append(_baseRef handle, _baseRef item);
_baseRef arrayCollection_UInt8ArrayArray_create_optional_handle();
void arrayCollection_UInt8ArrayArray_release_optional_handle(_baseRef handle);
_baseRef arrayCollection_UInt8ArrayArray_unwrap_optional_handle(_baseRef handle);
#ifdef __cplusplus
}
#endif
