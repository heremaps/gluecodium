/*
 * Copyright (c) 2016-2018 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package smoke

interface Arrays {
    version {
        major 0
        minor 1
    }

    struct BasicStruct {
        Double value
    }

    struct FancyStruct {
        StringArray messages
        UInt8[] numbers
        ByteBuffer image
    }

    enumeration SomeEnum {
        FOO
        BAR
    }

    array StructArray of BasicStruct

    array UIntArray of UInt8
    array StringArray of String
    array FancyArray of FancyStruct

    array ProfileIdList of ProfileId
    typedef ProfileId is String

    array ArrayOfMaps of ErrorCodeToMessageMap
    map ErrorCodeToMessageMap { Int32 to String }

    array ArrayOfArrays of StringArray
    array ArrayOfEnums of SomeEnum

    method methodWithArray {
        in {
            StringArray input
        }
        out {
            StringArray output
        }
    }

    method methodWithArrayInline {
        in {
            UInt8[] input
        }
        out {
            UInt8[] output
        }
    }

    method methodWithStructArray {
        in {
            BasicStruct[] input
        }
        out {
            StructArray output
        }
    }

    method methodWithArrayOfArrays {
        in {
            UIntArray[] input
        }
        out {
            UIntArray[] output
        }
    }

    method mergeArraysOfStructsWithArrays {
        in {
            FancyStruct[] inlineFancyArray
            FancyArray fancyArray
        }
        out {
            FancyArray result
        }
    }

    method methodWithArrayOfAliases {
        in {
            ProfileIdList input
        }
        out {
            ProfileIdList output
        }
    }

    method methodWithArrayOfMaps {
        in {
            ArrayOfMaps input
        }
        out {
            ArrayOfMaps output
        }
    }

    method methodWithByteBuffer {
        in {
            ByteBuffer input
        }
        out {
            ByteBuffer output
        }
    }
}
