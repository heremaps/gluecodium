/*
 * Copyright (C) 2016-2019 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package smoke

interface Maps {

    map ErrorCodeToMessageMap { Int32 to String }

    struct SomeStruct {
        String value
    }
    map NumberToStruct {UInt8 to SomeStruct}
    map NestedMap {UInt8 to NumberToStruct}

    struct StructWithMap{
        ErrorCodeToMessageMap errorMapping
    }

    map NumberToTypeDef {UInt8 to SomeId}
    map TypeDefToNumber {SomeId to UInt8}
    typedef SomeId is String

    map StringToArray {String to ArrayOfInts}
    array ArrayOfInts of Int32

    map StringToArrayOfTypeDefs {String to ArrayOfTypeDefs}
    typedef SomeInt is Int32
    array ArrayOfTypeDefs of SomeInt

    map NumberToInstance {UInt8 to MapsInstance.MapsInstance}

    method methodWithMap {
        in {
            ErrorCodeToMessageMap input
        }
        out {
            ErrorCodeToMessageMap output
        }
    }

    method methodWithMapToStruct {
        in {
            NumberToStruct input
        }
        out {
            NumberToStruct output
        }
    }

    method methodWithNestedMap {
        in {
            NestedMap input
        }
        out {
            NestedMap output
        }
    }

    method methodWithStructWithMap {
        in {
            StructWithMap input
        }
        out {
            StructWithMap output
        }
    }

    method methodWithMapOfArrays {
        in {
            StringToArray input
        }
        out {
            StringToArray output
        }
    }

    method methodWithMapOfInstances {
        in {
            NumberToInstance input
        }
        out {
            NumberToInstance output
        }
    }
}

interface MapsInstance {
    public typedef MapsInstance is undefined
}
