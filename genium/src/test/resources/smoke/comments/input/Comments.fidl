/*
 * Copyright (C) 2016-2019 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package smoke

<** @description: This is some very useful interface. **>
interface Comments {

    <** @description: This is some very useful method that measures the usefulness of its input. **>
    method someMethodWithAllComments {
        in {
            <** @description: Very useful input parameter **>
            String input
        }
        out {
            <** @description: Usefulness of the input **>
            Usefulness output
        }
        error SomeEnum
    }

    <** @description: This is some very useful method that measures the usefulness of its input. **>
    method someMethodWithInputComments {
        in {
            <** @description: Very useful input parameter **>
            String input
        }
        out {
            Usefulness output
        }
    }

    <** @description: This is some very useful method that measures the usefulness of its input. **>
    method someMethodWithOutputComments {
        in {
            String input
        }
        out {
            <** @description: Usefulness of the input **>
            Usefulness output
        }
    }

    <** @description: This is some very useful method that measures the usefulness of its input. **>
    method someMethodWithNoComments {
        in {
            String input
        }
        out {
            Usefulness output
        }
    }

    <** @description:
    This is some very useful method that does not measure the usefulness of its input.
    **>
    method someMethodWithoutReturnTypeWithAllComments {
        in {
            <** @description: Very useful input parameter **>
            String input
        }
    }

    <** @description:
    This is some very useful method that does not measure the usefulness of its input.
    **>
    method someMethodWithoutReturnTypeWithNoComments {
        in {
            String input
        }
    }

    <** @description: This is some very useful method that measures the usefulness of something. **>
    method someMethodWithoutInputParametersWithAllComments {
        out {
            <** @description: Usefulness of the input **>
            Usefulness output
        }
    }

    <** @description: This is some very useful method that measures the usefulness of something. **>
    method someMethodWithoutInputParametersWithNoComments {
        out {
            Usefulness output
        }
    }

    method someMethodWithNothing {
    }

    <** @description: This is some very useful method that does nothing. **>
    method someMethodWithoutReturnTypeOrInputParameters {
    }

    <** @description: This is some very useful constant. **>
    const Usefulness VeryUseful = true


    <** @description: This is some very useful struct. **>
    struct SomeStruct {
        <** @description: How useful this struct is **>
        Usefulness someField
    }

    <** @description: This is some very useful typedef. **>
    typedef Usefulness is Boolean

    <** @description: This is some very useful array. **>
    array SomeArray of String

    <** @description: This is some very useful map. **>
    map SomeMap { String to Usefulness }

    <** @description: This is some very useful enum. **>
    enumeration SomeEnum {
        <** @description: Not quite useful **>
        Useless
        <** @description: Somewhat useful **>
        Useful
    }

    <** @description: This is some very useful attribute. **>
    attribute Usefulness SomeAttribute

    <** @description: This is some very useful instance method. **>
    method instanceNotNullMethod {
        in {
            <** @description: This is some very useful instance method parameter. **>
            CommentsInstantiable.CommentsInstantiable input
        }
        out {
            <** @description: This is some very useful instance method result. **>
            CommentsInstantiable.CommentsInstantiable output
        }
    }

    <** @description: This is some very useful attribute. **>
    attribute CommentsInstantiable.CommentsInstantiable instanceNotNullAttribute
}

<** @description: This is some very useful interface.
    There is a lot to say about this interface.
    at least it has multiline comments.
**>
interface MultiLineComments {
   <** @description: This is very important method.
       It has very important parameters.
       It has side effects.
   **>
   method someMethodWithLongComment {
       in {
          <** @description: Very useful input parameter.
              You must not confuse it with the second parameter.
              But they are similar.
          **>
          String input

          <** @description: Not as useful as the first parameter.
              But still useful.
              use a positive value for more happiness.
          **>
          Double ratio
       }
       out {
          <** @description: If you provide a useful input,
              and a useful ratio you can expect a useful output.
              Just kidding do not expect anything from a method until
              you see its body.
          **>
          Float output
       }
   }
}

<** @description: This is some very useful interface. There is a lot to say about this interface. at least it has a long comment. **>
interface LongComments {
   <** @description: This is very important method. It has very important parameters. It has side effects. **>
   method someMethodWithLongComment {
       in {
          <** @description: Very useful input parameter. You must not confuse it with the second parameter. But they are similar.
          **>
          String input

          <** @description: Not as useful as the first parameter. But still useful. use a positive value for more happiness. **>
          Double ratio
       }
       out {
          <** @description: If you provide a useful input and a useful ratio you can expect a useful output. Just kidding do not expect anything from a method until you see its body. **>
          Float output
       }
   }
}

interface CommentsInstantiable {
    public typedef CommentsInstantiable is undefined

    <** @description: This is some very useful constructor. **>
    method create {
        in {
            <** @description: Very useful input parameter **>
            String input
        }
        out {
            <** @description: Very useful result **>
            CommentsInstantiable output
        }
    }
}
